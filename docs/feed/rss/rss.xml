<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>BradMontgomery.net</title><link>https://bradmontgomery.net</link><description>brad's blog</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sat, 07 Dec 2024 21:23:25 +0000</lastBuildDate><item><title>Thoughts from re:Invent 2024</title><link>https://bradmontgomery.net/blog/thoughts-from-reinvent-2024/</link><description>Generative AI, Bedrock, and easy (easier) data lakes.</description><content:encoded>
&lt;p&gt;I've just gotten home from a week at AWS re:Invent. There were so many new product announcements,
but the overarching theme of the conference was (surprising to no-body) Generative AI.&lt;/p&gt;
&lt;p&gt;It was pretty eye-opening to hear stories from across a number of industries about how other
companyies have already started integrating Generative AI into their processes and workflows ‚Äî
&lt;em&gt;although&lt;/em&gt; the most common story told was:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Amazon Q for for developers.&lt;/li&gt;
&lt;li&gt;Amazon Q to do big project upgrades (e.g. Java code)&lt;/li&gt;
&lt;li&gt;Amazon Q to help write test cases.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;None of these are surprising, really.&lt;/p&gt;
&lt;p&gt;And while I feel like I could absolutely see this coming, I've also realized that &lt;em&gt;my own&lt;/em&gt; journey into
the world of Genative AI is lagging. But I have &lt;em&gt;some idead&lt;/em&gt;! (watch this space)&lt;/p&gt;
&lt;p&gt;Personally, the exciting take-aways for me are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Amazon Q &amp;amp; Bedrock are really powerful tools. I want to build something with Bedrock and see how
this all works in practice.&lt;/li&gt;
&lt;li&gt;S3 Table buckets and S3 Metadata buckets are going to save a lot of people a lot of work ‚Äî Table Buckets
provide native support for Apache Iceberg and handle all the maintenance behind the scences and Metadata buckets
give you a reliable place to store metadata so S3 is now (if it wasn't already) the best way to build out a Data
Lake, Lakhouse, wharehouse whatever you want to call it.&lt;/li&gt;
&lt;li&gt;I'd somehow missed the memo that AWS was building &lt;a href="https://aws.amazon.com/silicon-innovation/"&gt;their own silicon&lt;/a&gt;
cloud computing workloads. The &lt;a href="https://aws.amazon.com/ai/machine-learning/trainium/"&gt;AWS Trainium&lt;/a&gt; announcments
just make me realized that's easier than ever to build &amp;amp; train ML models at scale.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This was my first time at re:Invent, so I have a ton of thoughts to process, but these are the (technology) highlights.&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/thoughts-from-reinvent-2024/</guid><pubDate>Sat, 07 Dec 2024 21:06:59 +0000</pubDate></item><item><title>We are all inventors</title><link>https://bradmontgomery.net/blog/we-are-all-inventors/</link><description>I just now realized...</description><content:encoded>
&lt;h1&gt;We're all inventors.&lt;/h1&gt;
&lt;p&gt;&lt;img src="https://i.imgur.com/OsPDfOK.png" alt="Dream Studio, Anime filter: Classic, early-american inventor hard at work in his workshop." /&gt;&lt;/p&gt;
&lt;p&gt;When I was young, if you'd asked me what I wanted to be when I grew up, my most likely response would have been, &amp;quot;Inventor&amp;quot;.&lt;/p&gt;
&lt;p&gt;I idolized the &amp;quot;lone genious working in their garage&amp;quot; that were able to build something unique, useful, or amazing. I've
been working in tech now for over twenty years, and I've just realized that I've been living the dream.&lt;/p&gt;
&lt;p&gt;It's not been quite what I expected, but kudos to all you inventors out there.&lt;/p&gt;
&lt;p&gt;üòç&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/we-are-all-inventors/</guid><pubDate>Thu, 17 Oct 2024 21:56:53 +0000</pubDate></item><item><title>Lingo Day One</title><link>https://bradmontgomery.net/blog/lingo-day-one/</link><description>My experience with the Lingo CGM: Day 1</description><content:encoded>
&lt;h2&gt;Day 1&lt;/h2&gt;
&lt;p&gt;I &lt;em&gt;installed&lt;/em&gt; (attached?) the Lingo CGM last night before going to bed. These are my thoughts for day 1.&lt;/p&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;If you've seen ads for any of the CGM's, you've probably seen how easy it is to use one of these things. It comes
with an applicator and the process is basically:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;unscrew the applicator lid&lt;/li&gt;
&lt;li&gt;push the applicator into the monitor&lt;/li&gt;
&lt;li&gt;push the applicator + monitor into the back of your arm.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It's as easy as that. I felt a slight prick on application, but honestly it wasn't painful at all. I had a weird
sensation on my arm for about two minutes afterward, but that could just be a weird &lt;em&gt;me thing&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;I slept with it all night, with no ill effects, and 12 hours later I didn't notice it at all.&lt;/p&gt;
&lt;p&gt;Oh, and yes... I showered with it on. No big deal.&lt;/p&gt;
&lt;h3&gt;Observations&lt;/h3&gt;
&lt;p&gt;It's only been one day, but I've already been surprised that my blook sugar seems to be fairly uneven, though
I'm pretty consistently in the 70-140mg/dL range that the app says is normal. Oh, and the app &amp;amp;mdadsh; it's really
well-designed (imho) and very easy to use, though it's crammed full of &amp;quot;easy-to-understand&amp;quot; health benefit videos
that tell you to eat more protein, eat more veggies, and lay off the donuts.&lt;/p&gt;
&lt;p&gt;I have seen a spike at every meal today (breakfast, lunch &amp;amp; dinner), though the biggest spike was at dinner where
I had a 130+ grams of carbs.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;So far so good... it's &lt;em&gt;intersting&lt;/em&gt;, but I'm not yet sure how &lt;em&gt;actionable&lt;/em&gt; this information is. Let's continue &amp;amp;
see what happens in a few more days.&lt;/p&gt;
&lt;p&gt;P.S. My CGM showed up on a day that I also started feeling sick ‚òπÔ∏è, so I haven't incorporated any exercise yet. Hopefully
that happens soon. ü§û&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/lingo-day-one/</guid><pubDate>Sat, 12 Oct 2024 01:50:00 +0000</pubDate></item><item><title>Test-driving the Lingo CGM</title><link>https://bradmontgomery.net/blog/test-driving-the-lingo-cgm/</link><description>I ordered the Lingo CGM, and this is the first post in a series describing my experiences.</description><content:encoded>
&lt;h2&gt;Hello Lingo&lt;/h2&gt;
&lt;p&gt;If you've paid any attention to heal &amp;amp; fitness tech over the past few years, you'll know that
CGM's (continuous glucose monitors) are all the rage. Their value prop is a simple one ‚Äî monitor
how the food you eat affects your metabolism (via blood sugar and insulin reponse).&lt;/p&gt;
&lt;p&gt;I've been curious abou this tech for years, so I've finally decided to give it a shot. This will
be a series of posts highlighting my exeriences using the &lt;a href="https://www.hellolingo.com/"&gt;Lingo CGM&lt;/a&gt;
device &amp;amp; app made by Abbot (the same folks that make the &lt;a href="https://www.freestyle.abbott/"&gt;Freestyle Libre&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;My guess is that the Lingo is a more &lt;em&gt;consumer-focused&lt;/em&gt; device that's geared toward diet &amp;amp; exercise
than toward managing Diabetes.&lt;/p&gt;
&lt;h2&gt;Expectations&lt;/h2&gt;
&lt;p&gt;Here's what I'm hoping to understand.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What foods spike blook sugar, and how bad is it.&lt;/li&gt;
&lt;li&gt;Do individual days on a &lt;em&gt;low-carb&lt;/em&gt; regimine actually have much impact on blood sugar.&lt;/li&gt;
&lt;li&gt;Do products like &lt;a href="https://ketone.com/"&gt;Ketone-IQ&lt;/a&gt; have any impact on what this sensor measures.&lt;/li&gt;
&lt;li&gt;How do my on-the-bike activities (exercise) impact this as well.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I'm excited. I'm a nerd yes, but I think tech like this actually has the potention for HUGE benefits in our daily lives.&lt;/p&gt;
&lt;p&gt;ü§û&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/test-driving-the-lingo-cgm/</guid><pubDate>Thu, 10 Oct 2024 17:03:50 +0000</pubDate></item><item><title>Do we need comments?</title><link>https://bradmontgomery.net/blog/do-we-need-comments/</link><description>Does this site need comments?</description><content:encoded>
&lt;p&gt;One of the things that I lost when moving this site over to a static site was
the comments integration -- I was formerly using &lt;a href="https://disqus.com/"&gt;Disqus&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've debated on whether or not it makes sense to try implementing that here as well. Honestly, I got very littler interaction on this site, and it was either questions that I frequently missed or the random &amp;quot;OK, thanks&amp;quot; -- which is nice. I'm not sure independent writers like me even need comments, but it's a part of the early web that I miss, and one that I think has been killed off by social media.&lt;/p&gt;
&lt;p&gt;What do you think? Should this site even have comments? Let me know in the ... uhm. Social medias? Slack? Email? (please don't)&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/do-we-need-comments/</guid><pubDate>Mon, 18 Mar 2024 16:48:33 +0000</pubDate></item><item><title>The Mintbook Air</title><link>https://bradmontgomery.net/blog/the-mintbook-air/</link><description>I installed Mint on a 2012 MacBook Air</description><content:encoded>
&lt;p&gt;About a month ago, I was cleaning out some old computer bins, and I stumbled across an old (2012) MacBook Air. I
started to chunk it in the trash (i mean, figure out how to recylce it responsibly), but I opened the thing up and
remembered just how a nice a form-factor the early Air's were. I mean that keyboard... it's way nicer the what we
have now.&lt;/p&gt;
&lt;p&gt;This is my story.&lt;/p&gt;
&lt;h2&gt;The hardware&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A 2012 MacBook Air, 13&amp;quot;&lt;/li&gt;
&lt;li&gt;CPU: Intel(R) Core(TM) i5-3427U CPU @ 1.80GHz. 2 Cores, 2 threads.&lt;/li&gt;
&lt;li&gt;RAM: 4Gb  (yikes)&lt;/li&gt;
&lt;li&gt;Disk: 128Gb SSD (just over 120Gb are usable)&lt;/li&gt;
&lt;li&gt;Battery: It was completely dead. I could boot the computer while it was plugged in, but it would die immediately
if unplugged. Good News! You can buy replacement batteries on Amazon &amp;amp; they're super easy to replace.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;The OS&lt;/h2&gt;
&lt;p&gt;I decided to install &lt;a href="https://linuxmint.com/"&gt;Linux Mint&lt;/a&gt;, well because I heard it was nice. I put the installation
media on a USB drive and honestly, this was so stupidly easy I don't even remember it. I just followed all the default
recommendations.&lt;/p&gt;
&lt;h2&gt;The Takeaway&lt;/h2&gt;
&lt;p&gt;I realize I'm using a 12-year-old piece of computing hardware. My expectations aren't exactly high, but this has been
an interesting experiment in trying to revive an old piece of hardware.&lt;/p&gt;
&lt;h3&gt;The good&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It works!&lt;/li&gt;
&lt;li&gt;I have a full-featured command-line environment with lots of tools I know how to use.&lt;/li&gt;
&lt;li&gt;gvim is still a nice tool for development (my vim skills are a little rusty, but I'm getting there).&lt;/li&gt;
&lt;li&gt;The new battery makes this usable without being plugged in.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;The bad&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;4Gb is just really not enough.&lt;/li&gt;
&lt;li&gt;Opening more than 4-5 tabs in firefox is likely to completely lock up the machine.&lt;/li&gt;
&lt;li&gt;Trying to run VSCode (Flatpack) locked up the machine.&lt;/li&gt;
&lt;li&gt;Running to run the Slack app (Flatpack) locked up the machine.&lt;/li&gt;
&lt;li&gt;Turns out this thing actually has a fan and it can run pretty darn fast.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Final thoughts&lt;/h3&gt;
&lt;p&gt;This thing basically feels like an under-powered Chromebook (but with firefox). It's perfectly fine for doing work on
the command line. Gvim works fine on medium-sized projects, but for any sort of heavy web-browsing it just doesn't work.&lt;/p&gt;
&lt;p&gt;Even after following a number of steps from
&lt;a href="https://easylinuxtipsproject.blogspot.com/p/speed-mint.html"&gt;this post on improving Mint's performance&lt;/a&gt;, it's still
not a great experience. I'll probably keep this for a while for light personal projects. I don't think I could use
this machine for &lt;em&gt;real work&lt;/em&gt;. I need too many browser tabs for that.&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/the-mintbook-air/</guid><pubDate>Fri, 29 Dec 2023 21:40:47 +0000</pubDate></item><item><title>Welp, I built a static site generator</title><link>https://bradmontgomery.net/blog/welp-i-built-a-static-site-generator/</link><description>Hello new website.</description><content:encoded>
&lt;h2&gt;New Website?&lt;/h2&gt;
&lt;p&gt;I've been meaning to shift my personal site to a static site for quite a while. I fully intended to use something like
&lt;a href="https://gohugo.io/"&gt;hugo&lt;/a&gt; or even &lt;a href="https://getpelican.com/"&gt;Pelican&lt;/a&gt; which I formerly used to manage the
&lt;a href="https://mempy.org"&gt;mempy.org&lt;/a&gt; website. Earlier this year, I archived my
&lt;a href="https://github.com/bradmontgomery/django-blargg"&gt;django-blargg&lt;/a&gt; repo, and so with a little extra time around the
holidays I decided to finally make this happen.&lt;/p&gt;
&lt;p&gt;I really wanted to use Hugo. I've used it before, it's got a great feature-set and tons of support. BUT! I had a few
requirements for my new site:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.w3.org/Provider/Style/URI"&gt;Cool URIs don't change&lt;/a&gt;. I really really though I could do this with hugo,
and I 100% beleive it's possible, but I just pounded my head against this forever. Eventually I ditched hugo because
of this requirement (and the fact that I had some markdown + some rst + some html content).&lt;/li&gt;
&lt;li&gt;I really want to just use markdown. Most of my content was already there, and with a little extra throw-away code I
mostly converted everythign to markdown.&lt;/li&gt;
&lt;li&gt;I really don't want to think too hard. I write so infrequently hugo's giant feature-set was just a bit much.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;I know python. I know jinja. I know how I want to organize my content.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;New Wheel.&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Well crap&lt;/strong&gt;. &lt;a href="https://github.com/bradmontgomery/bradmontgomery.github.io/pull/1"&gt;I've reinvented a static site generator&lt;/a&gt;.
Right now, the feature set is pretty small (just want I wanted). Features include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Two commands for managing content:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python site.py new&lt;/code&gt; to generate a template for new articles&lt;/li&gt;
&lt;li&gt;&lt;code&gt;python site.py build&lt;/code&gt; to build the site.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;support for &lt;a href="https://commonmark.org/"&gt;CommonMark&lt;/a&gt; thanks to &lt;a href="https://github.com/executablebooks/markdown-it-py"&gt;markdown-it-py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Easy (for me) template customization thanks to &lt;a href="https://jinja.palletsprojects.com/en/3.1.x/"&gt;jinja&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;A very simple UI -- because I didn't want to think about this righ now, but it'll probably change. Thanks &lt;a href="https://github.com/kevquirk/simple.css"&gt;kevquirk/simple.css&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you're interested, take a look at the single python module here: &lt;a href="https://github.com/bradmontgomery/bradmontgomery.github.io/blob/main/site.py"&gt;https://github.com/bradmontgomery/bradmontgomery.github.io/blob/main/site.py&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This isn't really indented to be shipped, but if there's interest I could turn it into a library. I probably should. Maybe. We'll see.&lt;/p&gt;
</content:encoded><guid isPermaLink="false">https://bradmontgomery.net/blog/welp-i-built-a-static-site-generator/</guid><pubDate>Wed, 27 Dec 2023 22:37:02 +0000</pubDate></item><item><title>ChatGPT on choosing a JavaScript framework</title><link>https://bradmontgomery.net/blog/chatgpt-choosing-javascript-framework/</link><description>
&lt;p&gt;**Prompt**: Explain how to select a javascript framework in the style of edgar allen poe&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Once upon a midnight dreary, while I pondered, weak and weary,
Over many a quaint and curious volume of forgotten lore,
While I nodded, nearly napping, suddenly there came a tapping,
As of someone gently rapping, rapping at my chamber door.
&amp;quot;‚ÄôTis some visitor,&amp;quot; I muttered, &amp;quot;tapping at my chamber door ‚Äî
Only this and nothing more.&amp;quot;&lt;/p&gt;
&lt;p&gt;But the tapping grew louder and more insistent, and I knew that I must attend to the matter at hand. I rose from my seat and opened the door to find a host of JavaScript frameworks, each vying for my attention. Angular, React, Vue, and more, all clamoring to be chosen as the one to bring my project to life.&lt;/p&gt;
&lt;p&gt;But how to select just one, from this ghoulish throng? I weighed the pros and cons of each, as if they were spirits from the land of the dead. Angular, with its powerful structure and robust feature set, seemed like a force to be reckoned with. But then there was React, with its virtual DOM and ease of use, that seemed like a gentle guide through the dark and treacherous landscape of web development. And Vue, with its simplicity and flexibility, that seemed like a beacon of hope in a sea of confusion.&lt;/p&gt;
&lt;p&gt;And so, I chose, as one does in matters of the heart, with a sense of intuition. I selected the framework that seemed to speak to me, that seemed to call to me from the abyss. And with that, I closed the door on the other frameworks, banishing them from my thoughts forevermore.&lt;/p&gt;
&lt;p&gt;Thus, I selected my framework, with a sense of mystery, and a touch of the macabre. For in the end, the choice of a JavaScript framework is not a decision to be made lightly, but one to be made with the utmost care and attention, as if choosing a companion for a journey into the unknown.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/chatgpt-choosing-javascript-framework/</guid><pubDate>Wed, 18 Jan 2023 22:41:18 +0000</pubDate></item><item><title>Happy New Year 2022</title><link>https://bradmontgomery.net/blog/happy-new-year-2022/</link><description>
&lt;p&gt;_Editor's note: I've actually been sitting on this post for a few weeks trying to determine if it really says what I want it to. I'm now at the point where I just want to put it out there. Enjoy._&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;What a weird a couple of years. Pandemic. Crazy weather. Inflation gone wild (lol money). Turmoil in the world everywhere.&lt;/p&gt;
&lt;p&gt;I want to write a ‚Äúnew year‚Äôs‚Äù blog post, but I honestly have no idea where to start or what to say. So I‚Äôll try to be optimistic and highlight some of the good stuff.&lt;/p&gt;
&lt;h2&gt;Professionally.&lt;/h2&gt;
&lt;p&gt;Professionally I‚Äôm doing ok. Despite still working for a startup, &lt;a href="https://www.preteckt.com/"&gt;Preteckt&lt;/a&gt; has had a decent year. The team has grown, customers are starting to see value in what‚Äôs an otherwise new-to-the-world product, and there‚Äôs plenty of work to do. Like any startup, we are not without our ups and (significant) downs, but the past couple of years has been good for the company, and I‚Äôm branching out into some new skills.&lt;/p&gt;
&lt;p&gt;While I‚Äôve now worked remotely for 10+ years, it‚Äôs good to be part of a distributed company that allows you to make an impact across the world.&lt;/p&gt;
&lt;p&gt;This next year should be interesting.&lt;/p&gt;
&lt;h2&gt;Tech901&lt;/h2&gt;
&lt;p&gt;I continue to be privileged to tech the &lt;a href="https://www.tech901.org/"&gt;Code class at Tech901&lt;/a&gt;. The pandemic quickly threw a wrench into our in-person classes, but we quickly moved online and then into a hybrid setup shortly thereafter. Teaching online is difficult, not because the tech doesn‚Äôt exist to facilitate it, but because it‚Äôs so much harder to build a relationship with students. That said, I‚Äôve continued to see students embrace the challenges of this class, acquire some new skills, and go on to make a huge difference in their lives ‚Äî with a career change. That alone is rewarding enough to keep coming back for more.&lt;/p&gt;
&lt;h2&gt;Family.&lt;/h2&gt;
&lt;p&gt;Despite all of us being sick over the holidays (Omicron Covid maybe? ‚Äî going on day 5 of waiting for a PCR test but that‚Äôs another story --&amp;gt; **Update**: PCR said no, all the symptoms said yes), we‚Äôve all managed pretty well. I work remotely, the kids have both done online school (and the oldest started college online this year) and my wife‚Äôs teaching remotely as well (for now).&lt;/p&gt;
&lt;h2&gt;Personally&lt;/h2&gt;
&lt;p&gt;As I write this, still feeling ‚Äî blergh from being sick over the holidays, I can‚Äôt help but look forward to a 2022 full of bike rides. The majority of my personal goals for the year revolve around bike rides ‚Äî from backpacking trips to crit races, I‚Äôm ready to roll.&lt;/p&gt;
&lt;p&gt;In 2021 I finally got a full year of racing in with the MB team -- That included 11 crits, *at least* 5 gravel races, 5 road races, and a couple of TT's on a road bike. It felt good to race with a team and be a small part in a few successful events. Highlight events of the year included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://my.raceresult.com/184818/results"&gt;Chinkapin hollow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.birminghamhammerfest.com/"&gt;Birmingham Hammerfest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://buildpeakcompete.com/tennessee-state-criterium-championship/"&gt;Tiger lane&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Bikes keep me healthy &amp;amp; happy, and I‚Äôm looking forward to lots of rides in 2022.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/happy-new-year-2022/</guid><pubDate>Wed, 26 Jan 2022 23:31:28 +0000</pubDate></item><item><title>Git workflow</title><link>https://bradmontgomery.net/blog/git-workflow/</link><description>
&lt;p&gt;It's 2020. People and teams are still using and adopting git. As new teams
are created, at some point, someone asks, &amp;quot;what's a good git workflow for us?&amp;quot;&lt;/p&gt;
&lt;p&gt;Here's a workflow that has served me well over the past few years working in small
teams.&lt;/p&gt;
&lt;h2&gt;Assumptions&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You're using &lt;a href="https://git-scm.com/"&gt;git&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You have an authoritative git repo somewhere (e.g. github, bitbucket, gitlab, etc),
and that repo is named &lt;code&gt;origin&lt;/code&gt; (this is the default name of remotes in git).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;master&lt;/code&gt; is golden; i.e. that's where the production code is deployed from,
or the branch from which the release build happens.&lt;/li&gt;
&lt;li&gt;You and everyone on your team can clone the repo.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Starting some work&lt;/h2&gt;
&lt;p&gt;You're about to start some new work, i.e. a new feature, a bug fix, etc.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git checkout master&lt;/code&gt;: Make sure you're on the master branch.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git pull origin master&lt;/code&gt;: Make sure you have the latest version of the code
on your system.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git checkout -b WHATEVER&lt;/code&gt;: Create a new branch for your work. I'm not a
stickler for branch names, but it *should* be a unique name, otherwise you'll
accidentally end up putting your commits in someone else's work.&lt;/li&gt;
&lt;li&gt;Do the work.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin WHATEVER&lt;/code&gt;: Push your work up to the repo.&lt;/li&gt;
&lt;li&gt;At this point, use your shared repo's systems to create a Pull/Merge request
or whatever it's called that lets others on your team compare your code
with that in master. This allows you to get feedback early.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Continue this process every day until your feature is complete or your bug is
fixed. Typically, however, these branches are more-or-less ephemeral. They only
live for the duration of the feature or bugfix.&lt;/p&gt;
&lt;p&gt;**Pro-tip**: If you get new commits when you pull from master, then &lt;a href="https://git-scm.com/book/en/v2/Git-Branching-Rebasing"&gt;rebase&lt;/a&gt;
your commits onto master **IF AND ONLY IF** nobody has pulled your commits down
from your branch. THIS is important.&lt;/p&gt;
&lt;p&gt;Rebasing is dangerous, but it makes all of your work look like it happend AFTER
the last commit in master: &lt;code&gt;git checkout WHATEVER&lt;/code&gt;, then &lt;code&gt;git rebase master&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Repeat.&lt;/p&gt;
&lt;h2&gt;Merging work&lt;/h2&gt;
&lt;p&gt;At some point, you finish the bugfix or feature addition, and then you need to
get it adding into the project. You want to *merge your commits into master*.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Get your stuff code-reviewed. Have someone else on your team look over your
stuff and get approval / or a &lt;code&gt;:thumbsup:&lt;/code&gt;. There's a lot on the internet
about code review, but I'm a big fan of doing it so someone else on the team
knows what happens, and just to sanity check what's going on. Kudos if you
did this several times during development.&lt;/li&gt;
&lt;li&gt;Set up something in your online repo to run your tests for you. (you've got
tests right?) Don't merge until the tests pass.&lt;/li&gt;
&lt;li&gt;Once approved, use your online repo's tools to Merge the code. (if you've
been rebasing every step of the way, this should almost always merge cleanly).&lt;/li&gt;
&lt;li&gt;Delete the feature / bugfix branch. (Now is a good time to go learn about l
&lt;a href="https://git-scm.com/docs/git-prune"&gt;&lt;code&gt;git prune&lt;/code&gt;&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Gettin fancy with feature branches.&lt;/h2&gt;
&lt;p&gt;At some point, you may want to have some work that's not part of master, but
that you can build or deploy for people to use. This is a &amp;quot;feature branch&amp;quot;,
and the workflow is exactly the same as above... except you merge into the
feature branch instead of master.&lt;/p&gt;
&lt;p&gt;Ideally... you'll eventually merge this feature into master. Here are some
examples:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We use a &lt;code&gt;staging&lt;/code&gt; branch for things we want to let people try out before
it goes out to all customers.&lt;/li&gt;
&lt;li&gt;You may use a &lt;code&gt;version2&lt;/code&gt; branch for a big re-work of something, and you're
not quite ready to merge that into the same branch as your production code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Etc, etc.&lt;/p&gt;
&lt;p&gt;Long-lived feature branches are fine, and the above workflow can work with them
quite well. Just communicate with your team about the feature branch.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is essentially a simple git workflow. Google &amp;quot;git workflow&amp;quot; for a hundred
variations on this, but this process has worked well for me.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/git-workflow/</guid><pubDate>Sun, 17 May 2020 23:28:36 +0000</pubDate></item><item><title>A reasonable number of bikes</title><link>https://bradmontgomery.net/blog/reasonable-number-bikes/</link><description>
&lt;p&gt;If you know me in person, then it's possible that you know I &lt;a href="https://www.strava.com/athletes/1020859"&gt;have a thing about cycling&lt;/a&gt;. And bikes. And shame on me for not writing about this stuff here. Anyway, a recent conversation among friends led me to thinking about the question: *What is a reasonable number of bikes?*&lt;/p&gt;
&lt;p&gt;You see, among cyclists, there's the &lt;a href="https://www.bikeforums.net/fifty-plus-50/822639-what-does-n-1-rule-mean.html"&gt;N+1&lt;/a&gt; debate. (it's not really a debate, you need N+1 bikes)&lt;/p&gt;
&lt;p&gt;Anyway, when confronted with the question, here's my answer to this pressing question:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A road bike: In case you need to ride on the road.&lt;/li&gt;
&lt;li&gt;A hard-tail mountain bike: For riding easy trails.&lt;/li&gt;
&lt;li&gt;A full-suspension mountain bike: For proper mountain biking.&lt;/li&gt;
&lt;li&gt;A commuter bike: because it's good for the environment.&lt;/li&gt;
&lt;li&gt;A classic road bike: because steel is real.&lt;/li&gt;
&lt;li&gt;A cruiser bike: For lazy days on shared-use paths/trails.&lt;/li&gt;
&lt;li&gt;A tandem: because sometimes you need to take a friend out for a ride.&lt;/li&gt;
&lt;li&gt;A gravel bike or cyclocross bike: Because these are things you should do.&lt;/li&gt;
&lt;li&gt;One or two of the above for each child, spouse, or significant other.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Honorable mentions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an e-bike. maybe a cargo bike. Maybe a cargo e-bike. For proper transportation &amp;amp; moving things around.&lt;/li&gt;
&lt;li&gt;a BMX bike. That'd be pretty sweet.&lt;/li&gt;
&lt;li&gt;any sort of single-speed and/or fixed gear bike. Some people are into that.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thoughts? Suggestions? What bikes do you own or strive to own? Let me know :)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/reasonable-number-bikes/</guid><pubDate>Mon, 06 May 2019 16:47:06 +0000</pubDate></item><item><title>I'm doing a Whole30</title><link>https://bradmontgomery.net/blog/im-doing-whole30/</link><description>
&lt;p&gt;Early in January I saw a backlash towards things like whole30, paleo, and keto in some of my fitness circles. I'm not sure why, but I do think a lot people approach these things as &amp;quot;quick fixes&amp;quot; rather than tools for setting a sustainable, healthy lifestyle. Admittedly, I've done the Whole30 regimen twice (2015, 2016), so I *should* have all the tools I need to have a healthy food lifestyle. But sometimes, things go off the rails.&lt;/p&gt;
&lt;p&gt;It turns out that 2018 was a tough year for many reason. That has resulted in me being chronically stressed and very likely chronically inflamed. My old neck pain has returned and I've also got persistent wrist pain again; both of which disappeared during my first Whole30. It turns out I'm also a stress eater, and a solid supply of sweets has been shoveled into my mouth over the last six months (at least)! All that and a recent trip to the doctor's office that shows some of my vitals are in the dangerous levels... well, I need a little hand-holding to get myself back on track.&lt;/p&gt;
&lt;p&gt;So, I'm doing a Whole30. I'm actually on day 8, and things are going ok. I'm re-reading _It Starts with Food_, because I like the sciency stuff, and I've started following &lt;a href="https://robbwolf.com/"&gt;Robb Wolf&lt;/a&gt; on YouTube to to try to catch up with how this stuff has changed in the last ten years.&lt;/p&gt;
&lt;p&gt;The last time I did whole30, I was really active on social media, and I posted everything on instagram. I'm less active these days, but I'll still share a food pic now &amp;amp; then. If you're interested, you can &lt;a href="https://www.instagram.com/bkmontgomery/"&gt;follow me on instagram&lt;/a&gt; or check out &lt;a href="https://whatsbradeating.tumblr.com/"&gt;whatsbradeating.tumblr.com&lt;/a&gt; assuming tumblr doesn't disappear anytime soon.&lt;/p&gt;
&lt;p&gt;Here's to a healthier, fitter Brad in 2019.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/im-doing-whole30/</guid><pubDate>Sun, 03 Feb 2019 18:11:01 +0000</pubDate></item><item><title>New Year, New Site (2019 edition)</title><link>https://bradmontgomery.net/blog/new-year-new-site-2019-edition/</link><description>
&lt;p&gt;So, it's a new year (happy 2019 everyone), and despite not publishing a single article in 2018, I've done a fair amount of work recently to update my site. Here's the quick &amp;amp; dirty rundown:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I'm now running Django 2.1 with a nod toward &lt;a href="https://docs.djangoproject.com/en/dev/internals/release-process/#release-cadence"&gt;the next LTS release -- 2.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/bradmontgomery/django-blargg"&gt;django-blargg&lt;/a&gt; now only supports Django 2+ officially.&lt;/li&gt;
&lt;li&gt;There's still a fair number of pages powered by &lt;a href="https://github.com/bradmontgomery/django-staticflatpages/"&gt;django-staticflatpages&lt;/a&gt; which has also seen a recent update.&lt;/li&gt;
&lt;li&gt;I'm also using &lt;a href="https://bulma.io/"&gt;Bulma.io&lt;/a&gt;, of which I'm a huge fan.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's everything that's noteworthy. Here's to more than zero blog posts in the next year (hey, I'm already at a 100% improvement over 2018)!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/new-year-new-site-2019-edition/</guid><pubDate>Thu, 03 Jan 2019 16:39:30 +0000</pubDate></item><item><title>Giving Tuesday: My Favorite Memphis Nonprofits</title><link>https://bradmontgomery.net/blog/giving-tuesday-my-favorite-memphis-nonprofits/</link><description>
&lt;p&gt;Today is #GivingTuesday. A time when we've finished with Black Friday shopping and all the Cyber Monday deals are ~~over~~ still well under way. It's a chance for us to collectively reflect on the charitable organizations that help make the world a better place.&lt;/p&gt;
&lt;p&gt;Here are my five favorite Memphis-based nonprofits.&lt;/p&gt;
&lt;h2&gt;1. Tech901&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://tech901.org"&gt;Tech901&lt;/a&gt;'s charter is to &amp;quot;train current or potential Memphians for a variety of information technology jobs and to work with employees to increase the Memphis technology job base.&amp;quot; They &lt;a href="http://tech901.org/courses-list/"&gt;offer classes&lt;/a&gt; in IT fundamentals, Project Management, and computer programming, all at steeply discounted rates that make these educational opportunities affordable for just about everyone. &lt;a href="https://squareup.com/store/tech901"&gt;Donate to Tech901&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;*Disclaimer: I'm absolutely biased; I teach the &lt;a href="http://tech901.org/course/code/"&gt;Code 1.0 class&lt;/a&gt;.*&lt;/p&gt;
&lt;h2&gt;2. CodeCrew&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://www.code-crew.org/"&gt;CodeCrew&lt;/a&gt; mentors underrepresented youth to be tech innovators and leaders through practical, hands-on computer science education. They run summer camps and after school programs that teach people to be producers of technology, not just consumers. And with a hashtag like &lt;code&gt;#GritGrindCode&lt;/code&gt;, how you can not love the attitude they've taken toward changing Memphis and the world. &lt;a href="https://www.generosity.com/education-fundraising/codecrew"&gt;Donate to CodeCrew&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;3. Memphis Technology Foundation (MTF)&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.memphistechnology.org/"&gt;Memphis Technology Foundation&lt;/a&gt; is a charitable, educational, and scientific organization that aims to foster growth of Memphis's technology ecosystem. They organize or assist with events like &lt;a href="http://www.techcampmemphis.org/"&gt;TechCamp Memphis&lt;/a&gt;, &lt;a href="http://www.givecampmemphis.org/"&gt;GiveCamp&lt;/a&gt; and &lt;a href="http://www.hackmemphis.com/"&gt;HackMemphis&lt;/a&gt;, and provide a number of tools to help the individuals who organize and run dozens of &lt;a href="http://www.memphistechnology.org/user-groups/"&gt;local technology user groups&lt;/a&gt;. Follow the &lt;a href="https://twitter.com/search?q=%23memtech&amp;amp;src=typd"&gt;#memtech hashtag on twitter&lt;/a&gt; to discover all sorts of cool things happening in our city. MTF is 100% volunteer-run, and all of the above happens on very little cash. &lt;a href="http://www.memphistechnology.org/donate/"&gt;Donate to MTF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;*Disclaimer: I'm on the &lt;a href="http://www.memphistechnology.org/about/board/"&gt;board of directors&lt;/a&gt; and have been involved with many MTF events over the years.*&lt;/p&gt;
&lt;h2&gt;4. MHBC: Memphis Hightailers Bicycle Club&lt;/h2&gt;
&lt;p&gt;&lt;a href="http://www.memphishightailers.com/"&gt;MHBC&lt;/a&gt; is one of Memphis' hidden gems. They organize dozens of weekly group rides, special riding events, and provide cycling advocacy and education to the area. Many of their larger club rides also raise money for other local charities. If you like to ride a bike, you should be a member. You can &lt;a href="http://www.memphishightailers.com/content.aspx?page_id=22&amp;amp;club_id=631861&amp;amp;module_id=182386"&gt;join the club&lt;/a&gt; for a very modest fee, or &lt;a href="http://www.memphishightailers.com/content.aspx?page_id=301&amp;amp;club_id=631861&amp;amp;actr=3"&gt;donate to the Memphis Hightailers Foundation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;*Disclaimer: I'm a member, and a &lt;a href="https://www.bikeleague.org/content/become-instructor"&gt;league cycling instructor&lt;/a&gt; involved in some of the Hightailer's educational efforts.*&lt;/p&gt;
&lt;h2&gt;5. MRTC: Memphis Runners Track Club&lt;/h2&gt;
&lt;p&gt;If you've ever run a 5k in Memphis, you've probably benefited from &lt;a href="http://memphisrunners.com"&gt;MRTC&lt;/a&gt;. They're a running club responsible for events such as the &lt;a href="http://wintercc.racesonline.com/"&gt;Winter Off Road Series (WORS)&lt;/a&gt;, the &lt;a href="http://rrs.racesonline.com/"&gt;Road Race Series (RRS)&lt;/a&gt;, and &lt;a href="http://womenrunwalkmemphis.com/"&gt;Women Run/Walk Memphis (WRWM)&lt;/a&gt; among others. Whether you're an avid runner, or you're just setting a Couch to 5k new years resolution, you should &lt;a href="https://memphisrunners.racesonline.com/join-renew-mrtc"&gt;join the MRTC&lt;/a&gt;.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;So, there they are. My five favorite organizations that are making Memphis a better place. Yes, they're tech &amp;amp; fitness oriented (things I like!), but all of these organization offer programs that improve our lives in meaningful ways. Pick one and support our community.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/giving-tuesday-my-favorite-memphis-nonprofits/</guid><pubDate>Tue, 28 Nov 2017 15:36:33 +0000</pubDate></item><item><title>What's in my requirements.txt</title><link>https://bradmontgomery.net/blog/whats-my-requirementstxt/</link><description>
&lt;p&gt;It's Sunday, and tomorrow is our scheduled &lt;a href="http://www.mempy.org/"&gt;monthly python meetup in Memphis&lt;/a&gt;, and it's one of those month's where I've been busy and I haven't done a good job of finding a speaker. So, that mean's I've got to pull something together at the last minute. While racking my brain for a quick-and-easy topic, I thought, &amp;quot;I wonder what python packages I'm using most?&amp;quot;&lt;/p&gt;
&lt;p&gt;So, I ran this nifty monstrosity of a command, and here's the results. I also tweeted it out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;find . -name &amp;quot;requirements*txt&amp;quot; -exec cat {} ; | awk -F &amp;quot;==&amp;quot; '{ print $1 }' | sort | uniq -c | sort -rn | head -n 20&lt;/p&gt;
&lt;p&gt;‚Äî Brad Montgomery (@bkmontgomery) &lt;a href="https://twitter.com/bkmontgomery/status/863777050594869248"&gt;May 14, 2017&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;$ find . -name &amp;quot;requirements*txt&amp;quot; -exec cat {} \; | awk -F &amp;quot;==&amp;quot; '{ print $1 }' | \
 sort | uniq -c | sort -rn | head -n 20
  23 ipython
  17 Django
  15 psycopg2
  11 requests
  11 pytz
  11 gunicorn
   9 ipdb
   9 django-extensions
   9 django-debug-toolbar
   8 six
   8 python-dateutil
   8 Pygments
   8 Jinja2
   7 tablib
   7 pandas
   7 docker-py
   7 Pillow
   7 MarkupSafe
   7 Flask
   7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It's really not that surprising, since I do a lot of work with Django, and I use a fair number of the same dependencies everywhere. If course, this is only for projects that I still have in my home directly, which is a fair representation of the last couple year's worth of work.&lt;/p&gt;
&lt;p&gt;Let's break that command down a little, though:&lt;/p&gt;
&lt;h2&gt;find&lt;/h2&gt;
&lt;p&gt;I'll admit that I always forget how find works. Luckily &lt;a href="https://www.ibm.com/developerworks/aix/library/au-unix-find.html"&gt;this developerworks article is really good&lt;/a&gt;. I should probably book mark that.&lt;/p&gt;
&lt;p&gt;I wanted to find all my &lt;code&gt;requirements.txt&lt;/code&gt; files, even those that I may have named &lt;code&gt;requirements\_dev.txt&lt;/code&gt; or &lt;code&gt;requirements\_prod.txt&lt;/code&gt;. Usually all my projects _just_ have a &lt;code&gt;requirements.txt&lt;/code&gt;. This command will cat any matchign files.&lt;/p&gt;
&lt;p&gt;find . -name &amp;quot;requirements*txt&amp;quot; -exec cat {} ;&lt;/p&gt;
&lt;h2&gt;awk&lt;/h2&gt;
&lt;p&gt;I then pipe that result into awk. I'm 99% sure most of my requirements files pin versions exectly, so the following awk command will take something like &lt;code&gt;Django==1.9.1&lt;/code&gt; and keep the &lt;code&gt;Django&lt;/code&gt; part.&lt;/p&gt;
&lt;p&gt;awk -F &amp;quot;==&amp;quot; '{ print $1 }'&lt;/p&gt;
&lt;h2&gt;sort &amp;amp; uniq&lt;/h2&gt;
&lt;p&gt;Then, sort the results, use &lt;code&gt;uniq -c&lt;/code&gt; to count them, then sort again numerically (&lt;code&gt;-n&lt;/code&gt;) in reverse order (&lt;code&gt;-r&lt;/code&gt;):&lt;/p&gt;
&lt;p&gt;sort | uniq -c | sort -rn&lt;/p&gt;
&lt;h2&gt;head&lt;/h2&gt;
&lt;p&gt;... and keep the top 20 results.&lt;/p&gt;
&lt;p&gt;head -n&lt;/p&gt;
&lt;p&gt;Apparently I also just have blank line in many of my requirements file. ¬Ø\_(„ÉÑ)_/¬Ø&lt;/p&gt;
&lt;p&gt;Anyway, hope you've enjoyed this little snippet. Run it on your projects and see what you get!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;**Update:** &lt;a href="https://twitter.com/jackdied"&gt;@jackdied&lt;/a&gt; says you should use tail!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://twitter.com/bkmontgomery"&gt;@bkmontgomery&lt;/a&gt; Drop the reverse on the sort and use tail!&lt;/p&gt;
&lt;p&gt;‚Äî Jack Diederich (@jackdied) &lt;a href="https://twitter.com/jackdied/status/863781949520961537"&gt;May 14, 2017&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/whats-my-requirementstxt/</guid><pubDate>Sun, 14 May 2017 16:19:03 +0000</pubDate></item><item><title>The Blue Collar Programmer</title><link>https://bradmontgomery.net/blog/blue-collar-programmer/</link><description>
&lt;p&gt;There's a recent &lt;a href="https://www.wired.com/2017/02/programming-is-the-new-blue-collar-job/"&gt;Wired article&lt;/a&gt;
that's been floating around the web that asks if computer programming is the next big thing
in blue collar work. I find this article interesting, because I've long though about
computer programming a skilled trade. In one sense, it's not unlike being a plumber or
and electician, both of which can provide very decent, middle-class salaries.&lt;/p&gt;
&lt;p&gt;In fact, thinking of tech jobs in this manner is nothing new! In the '90s every
vocational college in the country offered classes in welding, paralegal, PC repair,
and computer networking. Just look up your nearest Cisco academy, and I bet it's
part of a community college. Chances are good there's a programming curriculum
that goes right along with it (I got my &amp;quot;professional&amp;quot; career started teaching
in such a program).&lt;/p&gt;
&lt;p&gt;Right now is a good time to have programming skills. There's demand, and there's
not quite enough people with proficiency to fill that demand. To me, there's
really no surprise that code schools and bootcamps are popping up across the
country to teach programming skills over 8-12 months. Programming
is very much a skill that you can learn, and with plenty of practice, become
very proficient withing a short period of time.&lt;/p&gt;
&lt;p&gt;However, the work that programmers often do is subtly different from the tangible,
physical things that your local mechanic will face. Yes, all skills tradesmen
will excell if they've got great problem-solving skills, but at some point
programming is a little different. And I think the difference lies in that we
deal with abstract concepts. I mean, very few of us ever produce something that's
tangible. Yes, there are buttons on a screen, forms you can fill out, reports
you can print, but a lot of programmers may never work on such things.&lt;/p&gt;
&lt;p&gt;And then there are the &amp;quot;&lt;a href="https://xkcd.com/927/"&gt;standards&lt;/a&gt;&amp;quot;. Imagine being a
plumber, and knowing that every building had it's own different style of pipes
and couplings. Imagine having to buy a new set of tools every single time you
went to work on a different building. Imagine needing to be able to connect your
electrical grid to your plubming infrastructure (in a sense, I think this
already happening, but hang on, I'm trying to be facetious here). What do you
do when your client says, **&amp;quot;we don't have electricity on the south side of the
building, but I know water conducts electricity, so just connect the water main
to the power grid, then install an outlet in every faucet&amp;quot;**?&lt;/p&gt;
&lt;p&gt;As a programmer, at some point in your career, you're going to get this request.
In the tech industry, we already have a niche whose focus is to make the square
peg fit in the round hole. It's called &lt;a href="https://en.wikipedia.org/wiki/Extract,_transform,_load"&gt;ETL&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So what's the point of my blog post here... In our effort to find _the next big
job for everyone in the US_, let's not diminish the amount of time and effort
that it takes to become a programmer. It *is* a skill, and it's one that most
people could learn. But it's also incredibly challenging and frustrating at the
same time. And much like a plumber or electrician, being clever, creative, and
having the ability to think through a project from beginng-to-end is going to
a set of skills you also need to cultivate.&lt;/p&gt;
&lt;p&gt;Finally, the most important skill a programmer can have is the ability to keep
learning. This industry moves at a frantic pace. Many people don't realize just
how young the field computing is in the grand scheme of things. We haven't
figured out how to best solve 90% of our problems. Do not be fooled: You don't
just learn how to program, then rake in a posh $80k/year and call it a day. If
you want to survive/thrive in this industry, be prepared to start all over every
couple years. Your education starts with that first project or job. It never ends.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/blue-collar-programmer/</guid><pubDate>Sun, 12 Feb 2017 16:55:40 +0000</pubDate></item><item><title>Sending SMS messages with Amazon SNS and Python</title><link>https://bradmontgomery.net/blog/sending-sms-messages-amazon-sns-and-python/</link><description>
&lt;p&gt;There are many services out there that will let you programmatically send
SMS messages. One of the more popular is &lt;a href="https://www.twilio.com"&gt;Twilio&lt;/a&gt;,
and they have a great API and a python client that's easy to use. There's
an interesting &lt;a href="https://www.quora.com/How-do-I-send-text-messages-from-a-python-script-to-a-mobile-number-if-possible-with-a-free-gateway"&gt;quora thread&lt;/a&gt;
with several other suggestions as well.&lt;/p&gt;
&lt;p&gt;Another option is to use Amazon's &lt;a href="https://aws.amazon.com/sns/"&gt;Simple Notification Service&lt;/a&gt; (SNS), which also supports sending SMS messages. I recently
incorporated this into a project, and thought I'd share.&lt;/p&gt;
&lt;h2&gt;Step 1: API key + boto3&lt;/h2&gt;
&lt;p&gt;If you're already using AWS, you've probably jumped through these hoops. I'm
not going to walk you through them, but just realize you need to figure out how
to sign up for an AWS account and get some api keys.&lt;/p&gt;
&lt;p&gt;The second part of this is &lt;a href="https://aws.amazon.com/sdk-for-python/"&gt;boto3&lt;/a&gt;,
amazon's python sdk.&lt;/p&gt;
&lt;p&gt;pip install boto3&lt;/p&gt;
&lt;p&gt;Boto's &lt;a href="https://boto3.readthedocs.io/en/latest/guide/quickstart.html"&gt;quickstart guide&lt;/a&gt; should help, and it also includes some info on getting boto configured.&lt;/p&gt;
&lt;h2&gt;Step 2: Send your message&lt;/h2&gt;
&lt;p&gt;At the bare minimum, you can just send a message directly to a single phone
number. Here's the code:&lt;/p&gt;
&lt;p&gt;import boto3&lt;/p&gt;
&lt;h1&gt;Create an SNS client&lt;/h1&gt;
&lt;p&gt;client = boto3.client(
&amp;quot;sns&amp;quot;,
aws_access_key_id=&amp;quot;YOUR ACCES KEY&amp;quot;,
aws_secret_access_key=&amp;quot;YOUR SECRET KEY&amp;quot;,
region_name=&amp;quot;us-east-1&amp;quot;
)&lt;/p&gt;
&lt;h1&gt;Send your sms message.&lt;/h1&gt;
&lt;p&gt;client.publish(
PhoneNumber=&amp;quot;+12223334444&amp;quot;,
Message=&amp;quot;Hello World!&amp;quot;
)&lt;/p&gt;
&lt;p&gt;Note the formate of the phone number. It's got to be in something called
&lt;a href="https://en.wikipedia.org/wiki/E.164"&gt;E.164 format&lt;/a&gt;. For US phone numbers,
this includes the &lt;code&gt;+1&lt;/code&gt; country code, then the area code + the rest of the phone
number without any additional formatting.&lt;/p&gt;
&lt;p&gt;If you just need to send a message every once in a while (e.g. to notifiy yourself
when something happens), then congrats! You're done.&lt;/p&gt;
&lt;h2&gt;Step 3: Do actual Pub-Sub&lt;/h2&gt;
&lt;p&gt;If you need to send messages to multiple recipients, it's worthwhile to read
though Amazon's docs on &lt;a href="http://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-topic.html"&gt;sending to multiple phone numbers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The SNS service implements the &lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern"&gt;Publish-Subscribe&lt;/a&gt; pattern, and you can use it to send messages to a _topic_. Here are the steps to make this work:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a named topic. This is just a commuication channel to which you can
_subscribe_ phone numbers.&lt;/li&gt;
&lt;li&gt;Subscibe your recipients to the topic.&lt;/li&gt;
&lt;li&gt;Publish a message on the topic.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The python code looks something like this:&lt;/p&gt;
&lt;p&gt;import boto3&lt;/p&gt;
&lt;h1&gt;Create an SNS client&lt;/h1&gt;
&lt;p&gt;client = boto3.client(
&amp;quot;sns&amp;quot;,
aws_access_key_id=&amp;quot;YOUR ACCES KEY&amp;quot;,
aws_secret_access_key=&amp;quot;YOUR SECRET KEY&amp;quot;,
region_name=us-east-1
)&lt;/p&gt;
&lt;h1&gt;Create the topic if it doesn't exist (this is idempotent)&lt;/h1&gt;
&lt;p&gt;topic = client.create_topic(Name=&amp;quot;notifications&amp;quot;)
topic_arn = topic['TopicArn'] # get its Amazon Resource Name&lt;/p&gt;
&lt;h1&gt;Add SMS Subscribers&lt;/h1&gt;
&lt;p&gt;for number in some_list_of_contacts:
client.subscribe(
TopicArn=topic_arn,
Protocol='sms',
Endpoint=number # &amp;lt;-- number who'll receive an SMS message.
)&lt;/p&gt;
&lt;h1&gt;Publish a message.&lt;/h1&gt;
&lt;p&gt;client.publish(Message=&amp;quot;Good news everyone!&amp;quot;, TopicArn=topic_arn)&lt;/p&gt;
&lt;p&gt;All your susbscibers should recieve an SMS message once you've
published it on the topic. In addition, you should be able to monitor SNS
usage on the &lt;a href="https://console.aws.amazon.com/"&gt;AWS console&lt;/a&gt;, which will tell
you how many messages are sent (as well as how many sms mesages fail). If you
plan to use SNS for any commercial usage, you'll also want to read up on
&lt;a href="https://aws.amazon.com/sns/pricing/"&gt;SNS Pricing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That's it! Hope this article has helped. Let me know in the comments below :)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/sending-sms-messages-amazon-sns-and-python/</guid><pubDate>Wed, 01 Feb 2017 22:46:52 +0000</pubDate></item><item><title>Why is runserver/daphne so slow?</title><link>https://bradmontgomery.net/blog/why-runserverdaphne-so-slow/</link><description>
&lt;p&gt;**(tl;dr) I installed django-channels and now my runserver command is very very slow. django-debug-toolbar was sort of the culprit (not really, because it was my own fault)**&lt;/p&gt;
&lt;h2&gt;The problem&lt;/h2&gt;
&lt;p&gt;I've just started a new project using &lt;a href="https://channels.readthedocs.io/en/stable/"&gt;django-channels&lt;/a&gt;. Websockets + channels is incredibly powerful, but I noticed something strange: While running django in debug mode, the development server was incredibly slow (on the average of 60s-90s per response).&lt;/p&gt;
&lt;p&gt;After a bit of digging, it seemed that django-debug-toolbar was to blame, so I started turning off different panels to see what was the problem. Long story short: the &lt;code&gt;StaticFilesPanel&lt;/code&gt; was taking a long time to generate it's data?&lt;/p&gt;
&lt;h2&gt;Here's why&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;I'm building a chat app using react, and it's in a django app named &lt;code&gt;chat&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;I've organized my react app so that it's _inside_ my django app's static directory, e.g. &lt;code&gt;my\_project/chat/static/my\_react\_chat&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;As part of my front end development, I end up with a &lt;code&gt;node\_modules&lt;/code&gt; directory with lots and lots of stuff.&lt;/li&gt;
&lt;li&gt;In development, I'm using the &lt;a href="https://docs.djangoproject.com/en/1.10/ref/settings/#std:setting-STATICFILES_FINDERS"&gt;default staticfiles finders&lt;/a&gt; which will happily search through all of your django app's directories looking for static files. This takes some time when you a billion gigs worth of node modules.&lt;/li&gt;
&lt;li&gt;Daphne's default timeout is 60s, and those static files finders take longer than that.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, for the moment, I'll either disable the &lt;code&gt;StaticFilesPanel&lt;/code&gt; while I'm working on my react app, or I'll just try to remember to blow away my &lt;code&gt;node\_modules&lt;/code&gt; directory when I don't need it.&lt;/p&gt;
&lt;p&gt;I've probably not got my react development organized quite right when integrating with a django app, but I'm doing what makes sense to me. Perhaps I should see what everyone else is doing. &lt;code&gt;¬Ø\\_(„ÉÑ)\_/¬Ø&lt;/code&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/why-runserverdaphne-so-slow/</guid><pubDate>Tue, 03 Jan 2017 16:59:52 +0000</pubDate></item><item><title>2016 St Jude Memphis Marathon</title><link>https://bradmontgomery.net/blog/2016-st-jude-memphis-marathon/</link><description>
&lt;p&gt;It's been exactly one week since I participated in the St. Jude Memphis Marathon, and I wanted to take a moment to say *thank you* to everyone who helped me get so close to my fundraising goal. Together, we raised $1435 of $1500, and I'm really happy about that (although, &lt;a href="http://heroes.stjude.org/bkmontgomery"&gt;you can still give up 'till January&lt;/a&gt;!).&lt;/p&gt;
&lt;p&gt;As for the race, well... I'm glad I ran it. This year, I've run a 50k, a 50-miler, and this marathon. Unfortunately the marathon was my least favorite of the three. Don't get me wrong: I love this race, and I love what it stands for. It's just the first race that I've had real issues with cramping. Basically, here's how it broke down:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mile 1 - 10: Yeah, I'm feeling great! I'm gonna crush this thing.&lt;/li&gt;
&lt;li&gt;Mile 11-17: Hrmm, I may have started off too fast. I'm suddenly feeling a little tired.&lt;/li&gt;
&lt;li&gt;Miles 18-26: _i am nothing but cramps, please stop running_.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is first race where I just wanted to stop. I guess this happens to everyone, and it's no fun. I'm not even sure what I did wrong, and I've been pretty consistent with training &amp;amp; nutrition for the past few months. Head over to &lt;a href="https://connect.garmin.com/modern/activity/1470476516"&gt;Garmin Connect&lt;/a&gt; and you can see where things fall apart. I did however, set nearly a 15-minute PR with this, by finishing in just over four hours: 4:14. So there's that.&lt;/p&gt;
&lt;p&gt;Oh well. _C'est la vie_.&lt;/p&gt;
&lt;p&gt;Perhaps I can beat the 4-hour mark next year.&lt;/p&gt;
&lt;h2&gt;And now for some geeky stuff&lt;/h2&gt;
&lt;p&gt;A couple days after the race (once my legs stopped hurting), I went looking for the race results, and I realized they would be pretty easy feed into a python script and generate some interesting aggregate stats. So, this happened:&lt;/p&gt;
&lt;p&gt;I posted this to a Facebook group, and my friend &lt;a href="http://www.liftheavyrunlong.com/von/"&gt;Von&lt;/a&gt; thought it'd be fun to see this kind of data for the entire history of the race. So, I grabbed as many of the data files as I could and started analyzing them. You can can check out &lt;a href="https://docs.google.com/spreadsheets/d/15nSFo_WKVWTufqSwoTxWbe2013KVXTqk7gE2Pj-JEbg/edit?usp=sharing"&gt;this spreadsheet&lt;/a&gt; with some cool data like, _average pace_, _average finish time_, and _male/female participation_ numbers. And if you're interested, the &lt;a href="https://github.com/bradmontgomery/st-jude-marathon"&gt;code to analyze this stuff is on github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's a a few charts to whet your appetite:&lt;/p&gt;
&lt;p&gt;Unfortunately, I couldn't get Google Sheets to recognize things like &lt;code&gt;9:50&lt;/code&gt; and &lt;code&gt;4:44:17&lt;/code&gt; as durations nor could I get them to plot those values. So I ended up converting pace and finish times to seconds. Still, it's interesting stuff.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/2016-st-jude-memphis-marathon/</guid><pubDate>Sat, 10 Dec 2016 22:42:04 +0000</pubDate></item><item><title>Help me support St Jude</title><link>https://bradmontgomery.net/blog/help-me-support-st-jude/</link><description>
&lt;p&gt;If you've known me for a while, you might know that I'm a runner. Since I live in (near) Memphis, TN it's hard not to get excited about the &lt;a href="https://www.stjude.org/get-involved/at-play/fitness-for-st-jude/memphis-marathon.html"&gt;St Jude Memphis Marathon&lt;/a&gt;. Surprisingly, this will only be my *second marathon*, and this year I've decided to run the race as a *St. Jude Hero*.&lt;/p&gt;
&lt;p&gt;**What's a St. Jude Hero**? Well, I've pledged to raise at least $1500 in donations for St. Jude, and I need your help! I've got a dedicated fundraising page at &lt;a href="http://heroes.stjude.org/bkmontgomery"&gt;heroes.stjude.org/bkmontgomery&lt;/a&gt;, and for this rest of this year, I've included a handy-dandy l ink to that page at the top of my siteüëÜ&lt;/p&gt;
&lt;p&gt;If you're unfamiliar with St. Jude, they're one of Memphis' most-loved institutions. Here are a few quick facts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Families never receive a bill from St. Jude for treatment, travel, housing or food ‚Äî because all a family should worry about is helping their child live.&lt;/li&gt;
&lt;li&gt;Treatments invented at St. Jude have helped push the overall childhood cancer survival rate from 20% to more than 80% since it opened more than 50 years ago. St. Jude won't stop until no child dies from cancer.&lt;/li&gt;
&lt;li&gt;The daily operating cost for St. Jude is $2.2 million, which is primarily covered by individual contributors.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you ask me, it's really hard _not_ to be on-board with a mission like that. Join me &amp;amp; let's help them continue their efforts to cure cancer for good.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/help-me-support-st-jude/</guid><pubDate>Sat, 21 May 2016 18:54:19 +0000</pubDate></item><item><title>Let's convert a Word Doc to HTML</title><link>https://bradmontgomery.net/blog/lets-convert-word-doc-html/</link><description>
&lt;h2&gt;tl;dr&lt;/h2&gt;
&lt;p&gt;I wrote a python script to convert Word documents to mostly-clean html. Get it at &lt;a href="https://github.com/bradmontgomery/word2html"&gt;https://github.com/bradmontgomery/word2html&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Ah, Microsoft Word...&lt;/h2&gt;
&lt;p&gt;That glorious business-class software used all-around the world. It's perfect for those long, legal documents consisting of nothing but headers, paragraphs, and bulleted lists. All of which we an easily convert into simple HTML, right. Right?&lt;/p&gt;
&lt;p&gt;File &amp;gt; Save As &amp;gt; Web Page (.htm). Easy as... No wait, was that supposed to be File &amp;gt; Save As &amp;gt; Web Page, Filtered (.htm)?&lt;/p&gt;
&lt;p&gt;O.M.G. What is all this &lt;code&gt;MsoTitle&lt;/code&gt; crap. Why are there so many inline styles for simple black &amp;amp; white text. Why are all of my bulleted lists paragraph tags!? Why oh why are we 20-years into having a world wide web, and the world's foremost business document software can't even generate a simple html page.&lt;/p&gt;
&lt;h2&gt;Never fear there's hope.&lt;/h2&gt;
&lt;p&gt;Disclaimer: this is a quick and dirty hack. Check out my &lt;a href="https://github.com/bradmontgomery/word2html"&gt;word2html&lt;/a&gt; script. With the magic of python, &lt;a href="http://pandoc.org/"&gt;pandoc&lt;/a&gt;, and &lt;a href="http://countergram.com/open-source/pytidylib/"&gt;pytidylib&lt;/a&gt;/&lt;a href="http://countergram.com/open-source/pytidylib/"&gt;html tidy&lt;/a&gt;, doing this conversion isn't soooo bad.&lt;/p&gt;
&lt;p&gt;The gist of the code looks something like this:&lt;/p&gt;
&lt;p&gt;import pypandoc
from tidylib import tidy_document&lt;/p&gt;
&lt;p&gt;output = pypandoc.convert(your_filename, 'html')
output, errors = tidy_document(output)
with open(output_file, 'w') as f:
f.write(output)&lt;/p&gt;
&lt;p&gt;Grab the repo, install the requirements, and run the command:&lt;/p&gt;
&lt;p&gt;python convert.py MyGloriousDoc.docx&lt;/p&gt;
&lt;p&gt;Happy converting your word docs to html. Long live the web!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/lets-convert-word-doc-html/</guid><pubDate>Fri, 29 Apr 2016 16:04:11 +0000</pubDate></item><item><title>50 miles</title><link>https://bradmontgomery.net/blog/50-miles/</link><description>
&lt;p&gt;Saturday, March 5, 2016. I woke up around 4:30am, and we drove out into the middle of nowhere in southern Mississippi. We arrived around 5:30am, and people were already lining up for the 6:00am start. It was 40¬∞F, but the high for the day was supposed to hit the low-mid 70's. This was the Mississippi Trails 50.&lt;/p&gt;
&lt;p&gt;I'd run my first 50k in mid-January, but this was my first attempt at a 50-miler‚Äîa staple of the ultra-marathon trail run.&lt;/p&gt;
&lt;h2&gt;The Race&lt;/h2&gt;
&lt;p&gt;As far as trail runs go, the &lt;a href="http://ms50.com/"&gt;MS50&lt;/a&gt; is fairly easy terrain. It's essentially a horse trail through a huge, beautiful pine forrest. There are gentle rolling hills, the ground is soft, and the trail is wide. You could easily run 3-4 abreast nearly the whole way.&lt;/p&gt;
&lt;p&gt;However, there is water, and there is mud. I think there were 4 creek crossings, and while they weren't huge creeks, they were large enough that you have to wade through them. Which means your feet are going to get wet. On either side of those creeks are large mucky, slippery, muddy patches that seemed to disappear and then suddenly reappear another half-mile past the creek. I'm no stranger to muddy trails, but in this case, I could've done without.&lt;/p&gt;
&lt;p&gt;The MS50 is a series of loops around a 12-mile trail and a 6-mile trail. The 50-mile course ran for 3 of the 12-mile loops and 2 of the 6-mile loops (yes that's 48 miles total. I'm still calling it 50). There were aid stations every 4-6 miles packed full of great treats: chips, cheeze-its, goldfish, brownies, peanut butter and jelly, M&amp;amp;Ms, Coke as well as water and &lt;a href="http://www.hammernutrition.com/products/heed-sports-drink.he.html"&gt;Heed&lt;/a&gt;. Every aid station was run by enthusiastic volunteers who made the day a great one. Many many kudos to those folks. I don't think I could have survived without them.&lt;/p&gt;
&lt;p&gt;It's really hard to convey what running this race was like, but I vaguely remember some of my thoughts along the way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Loop one (12 miles)**: man I feel good! This forest is beautiful, look at all these pine trees. Wow that water was cold, but man I'm energized. I've got to get another one of those brownies!&lt;/li&gt;
&lt;li&gt;**Loop two (12 miles)**: alright, 12 done. My legs are feeling good pretty good, I'm not too tired. That PB&amp;amp;J was delicious. I can do this. Why oh why didn't I ditch this top after the first loop, it's freaking hot.&lt;/li&gt;
&lt;li&gt;**Loop three (12 miles)**: Ugh. I have to run this loop again. Man I hope Von doesn't run off and leave me. Where the f*3k did these hills come from. (at mile 32) Woah, in 2 more miles I'll have run further than I've ever run before; I'm actually going to do this. (at mile 34) Hell yeah! I guess I've got my second wind, I'm feeling good again!&lt;/li&gt;
&lt;li&gt;**Loop four (6 miles)**: Oh man, there's something wrong with my toe. I can't believe my IT band isn't killing me. Ugh, I can't possibly eat another brownie and those chips look awful.&lt;/li&gt;
&lt;li&gt;**Loop five (6 miles)**: uh, I wonder if I'll still make the cutoff if I walk this whole thing. My toe stopped hurting, I hope that's not a bad sign. Just jog for another mile. I still have Gu, have I really only had 2 this whole race? Oh man, I recognize this trail, we're only a mile from the end, let's do this!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I just can't imagine doing an event like this without friends, and I was lucky enough to accompany &lt;a href="https://twitter.com/thirstyrunner"&gt;Brian&lt;/a&gt;, &lt;a href="https://twitter.com/vonralls"&gt;Von&lt;/a&gt;, and &lt;a href="https://twitter.com/steelerrunner"&gt;Lynn&lt;/a&gt; on this journey. We all started the race together, and Von and I paced each other for the first 34 miles. Brian has been my training partner for so long, and were it not for him I would never have even considered doing anything like this. Thanks bud.&lt;/p&gt;
&lt;p&gt;&lt;img src="//i.imgur.com/AoLQxIc.jpg" alt="Loop two after four hours, fourty minutes" /&gt;
Von and I wrapping up the second loop&lt;/p&gt;
&lt;p&gt;As a general rule, I think trail runners are a pretty friendly lot, and I ended up running the last 12 miles with a guy named Brandon. I'm pretty sure he was faster than me, but he seemed to like the company. Twelve miles &amp;amp; a conversation feels shorter than 12 alone. Wherever you are, thanks, man.&lt;/p&gt;
&lt;p&gt;I crossed the finish line after 10 hours and 9 minutes. This was the most physically challenging thing I have ever done in my life. It felt amazing.&lt;/p&gt;
&lt;h2&gt;Gear&lt;/h2&gt;
&lt;p&gt;Like most sports, trail-running has it's share of accessories and products. I generally like to run light. Here's the gear I ran with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New Balance Trail shoes&lt;/li&gt;
&lt;li&gt;Smart wool socks&lt;/li&gt;
&lt;li&gt;CEP calf compression sleeves&lt;/li&gt;
&lt;li&gt;CEP IT band strap (for loops 3-5)&lt;/li&gt;
&lt;li&gt;Compression shirt (for the first 2 loops)&lt;/li&gt;
&lt;li&gt;My LHRL t-shirt&lt;/li&gt;
&lt;li&gt;Compression shorts + running shorts&lt;/li&gt;
&lt;li&gt;Nathan running bottle&lt;/li&gt;
&lt;li&gt;Garmin Forerunner 110 (which died in 8hours and 15 minutes)&lt;/li&gt;
&lt;li&gt;Fitbit Charge HR&lt;/li&gt;
&lt;li&gt;My Bolle sport glasses with Rx / Transitions lenses.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="//i.imgur.com/QHFXN6Z.jpg" alt="My gear for the Mississippi Trails 50-miler" /&gt;
Most of my gear for the first two loops of the race. I shed the long-sleeves later, and the CEP knee strap is not pictured.&lt;/p&gt;
&lt;h2&gt;Training and diet&lt;/h2&gt;
&lt;p&gt;I'm lucky to have friends that enjoy this activity. They make me better, and help me push my own limits. I've technically be training for this race for the past year (even though I didn't realize it at the time).&lt;/p&gt;
&lt;p&gt;In 2014, Von created a training plan to help me prepare for the St Jude marathon, and I still pull workouts from that plan. (if you want to improve your running, you
should seriously get in touch with him). My typical week looks something like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sun: A &amp;quot;long&amp;quot; (10+ miles) run.&lt;/li&gt;
&lt;li&gt;Mon: rest.&lt;/li&gt;
&lt;li&gt;Tues: Hit the gym in the morning. 5x5 Squats followed by a 10-15 minute conditioning workout.&lt;/li&gt;
&lt;li&gt;Wed: A Crossfit-style/Tabata workout. Possibly a&lt;/li&gt;
&lt;li&gt;Thurs: Gym: 5x5 Overhead press or bench press + 10-15 minutes of conditioning.&lt;/li&gt;
&lt;li&gt;Fri: Gym: 5x5 Deadlift + 10-15 minutes of conditioning.&lt;/li&gt;
&lt;li&gt;Sat: Bike ride (30-50 miles) or &amp;quot;long run&amp;quot;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's a pretty typical week for me. Some days get moved around, and sometimes the weekend workouts get cancelled (at which point they become a rest day), but for the most part, that's my routine.&lt;/p&gt;
&lt;p&gt;Now about diet... in July-August of last year I did my first Whole30. I've been doing semi-paleo for a while, but I feel like that first Whole30 really had a huge impact. I also happened to be running the MRTC Road Race series at the time, and tagging along with Brian's weekend Half-Ironman training routine. I'm sure all of these things had an effect, but it was during this time that I PR'd my 10-mile and half-marathon races. I ran faster than I ever imagined I could run, and I felt great.&lt;/p&gt;
&lt;p&gt;I did another Whole30 during January 2016, and I ran my first 50k during the middle of that. I was amazed at how well I felt for most of that race. A whole30-style diet works pretty well for me. I'm not currently staying compliant (I at chocolate chip cookies yesterday!), but for about ‚Öî of my meals, I eat lots of veggies lean cuts of meat (or eggs) and I often finish with a bit of fruit. If you're curious about how I eat, well I've got a tumblr for that.&lt;/p&gt;
&lt;h2&gt;Recovery&lt;/h2&gt;
&lt;p&gt;It's now Thursday, and I feel 100% again. The day after the race was pretty miserable. My legs had a lot of soreness two days after, but I hit the gym and did an upper-body workout. On day three, I did deadlifts at the gym and the soreness was basically gone, though I did have a pretty major blister on my toe that was bugging me. Aside from the distance &amp;amp; speed, one my criteria for a successful race is, &amp;quot;to not feel like I'm going to die afterwards&amp;quot;. I feel like I've been lucky to achieve this with both of my ultras.&lt;/p&gt;
&lt;p&gt;If you'd told me this time last year that I would have finished a 50-miler, I probably wouldn't have believed you. I'd always thought about the 50k, but 50 miles is a long way.&lt;/p&gt;
&lt;p&gt;It's pretty amazing what you can accomplish with consistent training, a good diet, and amazing friends. See you on the trails.&lt;/p&gt;
&lt;p&gt;&lt;img src="//i.imgur.com/RTgPWFj.jpg" alt="10 hours 9 minutes later" /&gt;
Crossing the finish line.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/50-miles/</guid><pubDate>Fri, 11 Mar 2016 12:56:30 +0000</pubDate></item><item><title>Young Coders at PyTennessee 2016</title><link>https://bradmontgomery.net/blog/young-coders-pytennessee-2016/</link><description>
&lt;p&gt;On February 6, 2016 I had the pleasure of teaching the Young Coders class at
&lt;a href="https://www.pytennessee.org"&gt;PyTennesse&lt;/a&gt;. It was an incredibly fun and rewarding
experience, and I'm looking forward to doing this again at some point in the future.&lt;/p&gt;
&lt;h2&gt;The class&lt;/h2&gt;
&lt;p&gt;We had ten young coders ranging in ages from 12 to 17, and spent
most of Saturday morning quickly plowing through examples of using python
as a calculator, exploring data types like integers, floats, strings, and
lists. We kicked things off around 8:30am and spent most of the day exploring,
python in IDLE.&lt;/p&gt;
&lt;p&gt;Nearly every one in the class has _seen_ python at some point--either from
an online learning service like Codecademy or from a class at school. This
was fairly surprising to me, and it was also encouraging. Every single attendee
in this class was excited and eager to learn more. So we quickly plowed through
the early informative content, and jumped into functions before lunch.&lt;/p&gt;
&lt;p&gt;By lunchtime, we'd _just_ dug into the &lt;code&gt;turtle&lt;/code&gt; module, and we spent several
minutes after lunch tweaking our drawings. Surprisingly, these students didn't
seem too interested in the venerable turtle, so we continued on.&lt;/p&gt;
&lt;p&gt;At this point, we started what I think was the highlight of the class. A simple,
text-based guessing game, a la: _What number am I thinking of_. After helping
the students through a very simple first version, they quickly thought of
ways to improve it. As soon as we ran the code, I was hearing questions like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How can we make sure the _secret number_ is random?&lt;/li&gt;
&lt;li&gt;How can we keep guessing?&lt;/li&gt;
&lt;li&gt;Can we count how many attempts it takes to guess the right number?&lt;/li&gt;
&lt;li&gt;Can we make the game start over once you guess the right number?&lt;/li&gt;
&lt;li&gt;Cam we make the game restart only 3 times.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These iterations lasted for about an hour, and I think it's amazing how
rewarding it can be to create even the simplest of software, when you're
invested in the ideas behind it.&lt;/p&gt;
&lt;p&gt;Once we wrapped up this game, we jumped into Al Sweigart's set of games from
&lt;a href="http://inventwithpython.com/pygame/"&gt;Invent with python&lt;/a&gt;. We looked at games that simply move an image around a screen,
and others that have more complicated gameplay (Wormy, then Squirrel Eat
Squirrel--a Katamari Damacy clone). For the most part, we changed simple
settings in these games (FPS, colors, health meters, movement speed, etc),
but after a an hour and a half, I could see the momentum fading, so we wrapped
up the &amp;quot;official work&amp;quot; at about 2:45pm.&lt;/p&gt;
&lt;h2&gt;The gear&lt;/h2&gt;
&lt;p&gt;This year we did _something different_; rather than raspberry pi's for all of
the young coders, we decided to try out Chromebooks running Linux. Thanks to
the &lt;a href="https://github.com/dnschneid/crouton"&gt;magic of crouton&lt;/a&gt;, all of the students received an Asus 300M Chromebook
with instructions on how to boot into Ubuntu, and that's where we did our work.&lt;/p&gt;
&lt;p&gt;If you're curious how these were configured, you can check out my guide in
the &lt;a href="https://github.com/bradmontgomery/young-coders-tutorial/blob/pytn2016/2016/chromebooks.md"&gt;young coders tutorial repo&lt;/a&gt;. As with anything, there are some pros &amp;amp; cons of using Chromebooks over the raspberry pi:&lt;/p&gt;
&lt;h3&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;With a laptop, there's no need to mess with monitors, keyboards, and mice&lt;/li&gt;
&lt;li&gt;This group of kids seemed perfectly OK with the idea of multiple OSes; they
figured out ChromeOS pretty quickly, and seems to easily grasp how to boot
ubuntu.&lt;/li&gt;
&lt;li&gt;ChromeOS is pretty easy to use, and it's a nice OS by itself.&lt;/li&gt;
&lt;li&gt;Having your own laptop is an exciting thing!&lt;/li&gt;
&lt;li&gt;Chromebooks (~ $200) are more expensive than raspberry pis (~ $30), but as a conference organizer,
you may have to pay to rent monitors and provide keyboards &amp;amp; mice. In the long run, for PyTN, the price worked out to be about the same.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Cons&lt;/h3&gt;
&lt;p&gt;In no particular order...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You _have_ to enable developer mode to use crouton. This yields a scary
error message every time you boot the machine. It also makes it really easy
for the machine to wipe &amp;amp; re-initial the hard drive, meaning it's likely
you'll lose some stuff (This actually happened to one student, but luckily
I was able to re-create their linux image on Sunday during the conference)&lt;/li&gt;
&lt;li&gt;Students have to jump through a few hoops to get linux booted; it's possible
they may forget how to do this by the time they get home.&lt;/li&gt;
&lt;li&gt;Minecraft may be off the table. Minecraft on the raspberry pi is a special
thing. It's great for kids, and it's free... but only on raspberry pi. If
you're running linux, you have to use the commercial version of Minecraft,
and while _a lot_ of kids already have an account, it's likely not everyone
will. So, for PyTN 2016, we skipped minecraft.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Lessons Learned&lt;/h2&gt;
&lt;p&gt;While I think the session went really well at this years conference, I do think there's some
room for improvement. Here are a few things I would do different next time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**Hide Minecraft**. I said we skipped minecraft. And we did. However, I installed
the minecraft binary on the laptops, and it didn't take long for the kids to
discover this. We had a hard time getting back on track after lunch because
Minecraft had already stolen their attention.&lt;/li&gt;
&lt;li&gt;**Turn off Wifi**. It's handy if you can prevent the machines from connecting
to the internet. You can do all of the young coders curriculum without an
internet connection, and limiting internet means the students won't jump on
the internet and find something else to distract them. I made this mistake, and
it took me a while to pull their attention away from minecraft and some
web-based games.&lt;/li&gt;
&lt;li&gt;**Control the junk food**. Unlimited cookies, chips, and coca-cola seems like an
awesome idea. And if you're 12-years-old, you'll take full advantage of that.
It's probably not a good a idea to let the kids have free range at a junk food
buffet. A little is fun, but after an hour or so you'll lose some attention to
the pile of sugar.&lt;/li&gt;
&lt;li&gt;**Volunteers are awesome**. Luckily the PyTN class was pretty small (ten
students), and we managed to make the class happen without too many pitfalls
without any additional volunteers. _However_, if you think about teaching one
of these take time to find some volunteers. I volunteered for Young Coders in
PyOhio 2015, and there were about three volunteers for approximately 25 students, and
that seemed to work fairly well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I personally found teaching this class to be incredibly rewarding, and I'm
thankful to &lt;a href="http://therealkatie.net"&gt;Katie Cunningham&lt;/a&gt; and
&lt;a href="http://www.mechanicalgirl.com"&gt;Barbara Shaurette&lt;/a&gt; for their work creating the
curriculum and for many many iterations of this this class in the past. Their
work has made it easy to pick up the tools and run a class. If you're at all
interested in doing this, you can certainly pick up the tools and do it too!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/young-coders-pytennessee-2016/</guid><pubDate>Tue, 09 Feb 2016 00:31:00 +0000</pubDate></item><item><title>Ignoring SuspiciousOperation requests for fun and (profit?)</title><link>https://bradmontgomery.net/blog/ignoring-suspiciousoperation-requests-fun-and-profit/</link><description>
&lt;p&gt;If you run a Django site, you're probably familiar with those periodic emails due to a &lt;a href="https://docs.djangoproject.com/en/dev/ref/exceptions/#suspiciousoperation"&gt;SuspiciousOperation&lt;/a&gt; exception; it happens when your site receives a request that contains a host header that's now found in the &lt;a href="https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-ALLOWED_HOSTS"&gt;ALLOWED_HOSTS&lt;/a&gt; setting. Yes, they're annoying, and while it's good to know when this happens, I've found that there will typically be one or two requests that you get frequently (I'm looking at you, request for &lt;code&gt;/azenv.php&lt;/code&gt; from &lt;code&gt;check.proxyradar.com&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;In these cases, I think it's ok to just block these requests, so we no longer get those annoying emails. We can do this with a fairly simple middleware. It'll need to be listed first in your &lt;code&gt;MIDDLEWARE_CLASSES&lt;/code&gt; settings, otherwise some other middleware might trigger the SuspiciousOperation exception.&lt;/p&gt;
&lt;p&gt;First, though, let's set a list of urls in our settings. I called these &lt;code&gt;IGNORE_BAD_HOST_HEADERS&lt;/code&gt;, and added as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IGNORE_BAD_HOST_HEADERS = [
    'proxyradar.com',  # Stupid check.proxyradar.com/azenv.php
]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have a &lt;code&gt;utils&lt;/code&gt; app where I include miscellaneous bits of code, so in &lt;code&gt;utils/middleware.py&lt;/code&gt;, I added the following class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.conf import settings
from django.http import HttpResponse

class IgnoreRequestMiddleware(object):
    &amp;quot;&amp;quot;&amp;quot;Sometimes we get obviously bad requests. If we can detect those, we'll
    just ignore them outright, returning a little easer egg instead.

    To test this, set DEBUG=False, and use:

         curl --verbose --header 'Host: example.com' 'http://yoursite.com'

    NOTE: In order for this to work, this must be listed first in the
    MIDDLEWARE_CLASSES setting.

    &amp;quot;&amp;quot;&amp;quot;
    def _ignore_domain(self, request):
        &amp;quot;&amp;quot;&amp;quot;ignore requests from obviously bad domains. This will circumvent
        those annoying Invalid HTTP_HOST header errors.&amp;quot;&amp;quot;&amp;quot;
        ignored_domains = getattr(settings, 'IGNORE_BAD_HOST_HEADERS', [])
        return any([
            domain in request.META.get('HTTP_HOST', '')
            for domain in ignored_domains
        ])

    def process_request(self, request):
        if self._ignore_domain(request):
            teapot = &amp;quot;&amp;quot;&amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;pre&amp;gt;
                                   (
                        _           ) )
                     _,(_)._        ((
                ___,(_______).        )
              ,'__.   /       \    /\_
             /,' /  |&amp;quot;&amp;quot;|       \  /  /
            | | |   |__|       |,'  /
             \`.|                  /
              `. :           :    /
                `.            :.,'
                  `-.________,-'

            &amp;lt;/pre&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&amp;quot;&amp;quot;
            resp = HttpResponse(teapot)
            resp.status_code = 418
            return resp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, in your settings, you'll need to add something similar to:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MIDDLEWARE_CLASSES = [
    'utils.middleware.IgnoreRequestMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    ...
]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And there you go! No more annoying SuspiciousOperation emails due to requests from that one particular host. Now, this is kind of a hack, albeit a fun one. A &lt;strong&gt;much better&lt;/strong&gt; solution to this problem would be to block these requests at your webserver (e.g. in apache or nginx).&lt;/p&gt;
&lt;p&gt;In any event, you can deploy and and check it out with curl:  &lt;code&gt;curl --verbose --header 'Host: example.com' 'http://yoursite.com'&lt;/code&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/ignoring-suspiciousoperation-requests-fun-and-profit/</guid><pubDate>Wed, 16 Dec 2015 15:20:03 +0000</pubDate></item><item><title>A custom __date lookup for Django</title><link>https://bradmontgomery.net/blog/custom-__date-lookup-django/</link><description>
&lt;p&gt;‚ö† Django 1.9 now includes a &lt;a href="https://docs.djangoproject.com/en/1.9/ref/models/querysets/#date"&gt;built-in __date lookup&lt;/a&gt;. If possible, you should use that instead of the code below, which doesn't support timezones.&lt;/p&gt;
&lt;p&gt;In my post &lt;a href="/blog/date-lookups-django/"&gt;last week on date lookups&lt;/a&gt;,
I ended with a promise to take a look at building a
&lt;a href="https://docs.djangoproject.com/en/1.8/howto/custom-lookups/"&gt;custom
django lookup&lt;/a&gt; (namely, a &lt;code&gt;__date&lt;/code&gt; lookup). Django includes
a basic &lt;code&gt;Lookup&lt;/code&gt; class, and to build your own lookup expressions,
all you really need to do is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Subclass &lt;code&gt;django.db.models.Lookup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;define a &lt;code&gt;lookup_name&lt;/code&gt; attribute&lt;/li&gt;
&lt;li&gt;write the &lt;code&gt;as_sql&lt;/code&gt; method to define how your database should
handle building the query&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As promised, here's a quick example. Assume we have the following model (silly,
but simple) model. For illustration purposes, it has both a &lt;code&gt;DateField&lt;/code&gt;
and a &lt;code&gt;DateTimeField&lt;/code&gt;. We'll build our lookup, so that it works with
both fields.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db import models

class Meeting(models.Model):
    date = models.DateField()
    scheduled = models.DateTimeField()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Let's build the lookup, which I'm going to
creatively name, &lt;code&gt;DateLookup&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db.models import Lookup

class DateLookup(Lookup):
    &amp;quot;&amp;quot;&amp;quot;A custom lookup, that lets you query DateField and DateTimeFields by a date&amp;quot;&amp;quot;&amp;quot;

    lookup_name = 'date'  # This enables us to use __date='2015-10-18' in a query

    def as_sql(self, compiler, connection):
        # The left-hand-side (lhs) in the query's WHERE clause. It consists
        # of your app name and field name. e.g. '&amp;quot;myapp&amp;quot;.&amp;quot;scheduled&amp;quot;'
        # In this case, the left-hand-side has no params.
        lhs, lhs_params = self.process_lhs(compiler, connection)

        # The right-hand-side (rhs) + its params will define the input used
        # in the query's WHERE clause. At this point, the rhs_params will
        # be a datetime object, e.g.: datetime(2015, 10, 18, 0, 0, tzinfo=)
 rhs, rhs\_params = self.process\_rhs(compiler, connection)

 # Both PostgreSQL and MySQL have a DATE function that lets us query
 # by date. The where clause in the generated SQL will look something
 # like, WHERE DATE(scheduled) = '2015-10-18'
 params = lhs\_params + rhs\_params
 return 'DATE(%s) = %s' % (lhs, rhs), params
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Register it with the appropriate model field(s).
In this case, both the &lt;code&gt;DateField&lt;/code&gt; and &lt;code&gt;DateTimeField&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The Django docs include an important note about registering custom lookups:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db.models.fields import DateField, DateTimeField

DateField.register_lookup(DateLookup)
DateTimeField.register_lookup(DateLookup)
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;You will need to ensure that this registration happens before you try to
create any querysets using it. You could place the implementation in a
models.py file, or register the lookup in the ready() method of an AppConfig.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, open a django shell, and you can run a query like the following, which
queries against a date field. This should give you all the Meetings where
&lt;code&gt;date = datetime.date(2015, 10, 18)&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Meeting.objects.filter(date__date='2015-10-18')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or, you can do the following, which queries agains a datetime field, which
should give you all the meetings where the &lt;code&gt;scheduled&lt;/code&gt; column
includes 2015-10-18.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Meeting.objects.filter(scheduled__date='2015-10-18')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There's more to custom lookups in Django, and I highly recommend reading
through the &lt;a href="https://docs.djangoproject.com/en/1.8/howto/custom-lookups/"&gt;custom lookups documentation&lt;/a&gt; because it also includes a really great
example, as well.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: All the code in this post was written using Python 3.4 and Django 1.8.&lt;/em&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/custom-__date-lookup-django/</guid><pubDate>Sun, 18 Oct 2015 20:40:37 +0000</pubDate></item><item><title>Date lookups in Django</title><link>https://bradmontgomery.net/blog/date-lookups-django/</link><description>
&lt;p&gt;A while ago I &lt;a href="https://twitter.com/bkmontgomery/status/615665645594632192"&gt;tweeted&lt;/a&gt;
out something that I've wanted to see in Django for a very long time, yet have
never really taken the time to investigate or implement it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I wish &lt;a href="https://twitter.com/hashtag/django?src=hash"&gt;#django&lt;/a&gt; had this:&lt;/p&gt;
&lt;p&gt;M.objects.filter(datetimefield__date=&lt;a href="http://t.co/MVFXsN4Ivk"&gt;http://t.co/MVFXsN4Ivk&lt;/a&gt;(2015, 6, 29))&lt;/p&gt;
&lt;p&gt;Has that ever been attempted?&lt;/p&gt;
&lt;p&gt;‚Äî Brad Montgomery (@bkmontgomery) &lt;a href="https://twitter.com/bkmontgomery/status/615665645594632192"&gt;June 29, 2015&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Django's ORM has a &lt;a href="https://docs.djangoproject.com/en/1.8/topics/db/queries/#field-lookups"&gt;very rich set of field lookups&lt;/a&gt;, but at present, it doesn't support an exact
date lookup. At least not with the syntax I would expect. Luckily, that tweet
got some very handy responses, so let's do a bit of exploring.&lt;/p&gt;
&lt;p&gt;Assume we have the following model. For the now, the only field we care about
is the &lt;code&gt;created&lt;/code&gt; field.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db import models

class Item(models.Model):
    title = models.CharField(max_length=128)
    created = models.DateTimeField(auto_now_add=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Again, what I &lt;em&gt;wish&lt;/em&gt; we could do is an exact date lookup using a
&lt;code&gt;__date&lt;/code&gt; lookup. If you try that:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from datetime import date
Item.objects.filter(created__date=date(2015, 10, 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, you get an exception.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FieldError: Unsupported lookup 'date' for AutoCreatedField or join on the field not permitted.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Fear not, there are a handful of ways to acheive the same results. One way
is to use the date-based lookups that django already provides. Such as
&lt;code&gt;__day&lt;/code&gt;, &lt;code&gt;__month&lt;/code&gt;, and &lt;code&gt;__year&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dt = date(2015, 10, 1)
Item.objects.filter(
    created__day=dt.day, 
    created__month=dt.month, 
    created__year=dt.year
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's a technique I've used quite a lot in the past. It's fairly verbose,
yet it's pretty readable. Another technique is to use the &lt;code&gt;__range&lt;/code&gt;
lookup. You can use a datetime object's
&lt;a href="https://docs.python.org/3.4/library/datetime.html#datetime.date.replace"&gt;replace method&lt;/a&gt;
to set minimum and maximum values for the time-related attributes (and the
&lt;a href="https://docs.python.org/3.4/library/datetime.html#datetime-objects"&gt;docs for datetime objects&lt;/a&gt;
list these values).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Create a datetime object spanning a full day
dt = datetime.now()
start = dt.replace(hour=0, minute=0, second=0, microsecond=0)
end = dt.replace(hour=23, minute=59, second=59, microsecond=999999)

# Query for objects that fall within that day.
Item.objects.filter(created__range=(start, end))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One neat suggestion came from &lt;a href="https://twitter.com/jasonamyers"&gt;Jason Myers&lt;/a&gt;
notes that you can use the &lt;code&gt;__contains&lt;/code&gt; lookup with dates:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Item.objects.filter(created__contains=date(2015, 10, 1))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another from &lt;a href="https://twitter.com/joshourisman"&gt;Josh Ourisman&lt;/a&gt; takes
advantage of the fact that dates are really just strings (at least in postgres):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Item.objects.filter(created__startswith='2015-10-01')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href="https://twitter.com/j00bar"&gt;Joshua Ginsberg&lt;/a&gt; suggested using a
custom database function prior to filtering. So, in the spirit of learning new
things available in Django 1.8, I did just that. With a
&lt;a href="https://docs.djangoproject.com/en/1.8/ref/models/expressions/#func-expressions"&gt;Func() expression&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In PostgreSQL, you could run the following query to view the date store
on an Item:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select created from items limit 1;
&amp;gt;  2015-10-01 12:37:23.620442+00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It turns out, PostgreSQL has a handy
&lt;a href="http://www.postgresql.org/docs/9.4/static/functions-datetime.html"&gt;&lt;code&gt;date&lt;/code&gt; function&lt;/a&gt;) that gives us just the date part of a datetime string.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;select date(created) from items limit 1;
&amp;gt;  2015-10-01
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;Func()&lt;/code&gt; expressions (using in conjunction with &lt;code&gt;F()&lt;/code&gt;
expressions and the &lt;code&gt;aggregate&lt;/code&gt; method will let us call postgres's
date function from python!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db.models import Func, F

# Note, this is PostgreSQL-specific.
# Build a queryset annotated with the date portion of the `created` datetime.
queryset = Item.objects.annotate(
  created_date=Func(F('created'), function='DATE')
)

# Now, we can query agains that annotation:
items = queryset.filter(created_date=date(2015, 10, 1))  # What we want!


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty Cool!&lt;/p&gt;
&lt;p&gt;So there you have a number of ways to do date-based lookups in Django. These
will probably get you where you want to go most of the time.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But wait! There's more!&lt;/strong&gt; It turns out, you can build your
own lookups. The &lt;a href="https://docs.djangoproject.com/en/1.8/ref/models/lookups/"&gt;Lookup API reference&lt;/a&gt;
was introduced in Django 1.7, yet I've not dabbled with it. Stay Tuned, because
in my next post, I'll see just how hard it is to implement that &lt;code&gt;__date&lt;/code&gt;
lookup (if nothing else gets in my way over the next few days).&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/date-lookups-django/</guid><pubDate>Sat, 10 Oct 2015 19:27:40 +0000</pubDate></item><item><title>Django Admin Filters from ArrayFields</title><link>https://bradmontgomery.net/blog/django-admin-filters-arrayfields/</link><description>
&lt;p&gt;I've written before about
&lt;a href="/blog/nice-arrayfield-widgets-choices-and-chosenjs/"&gt;the cool
ArrayField support in Django&lt;/a&gt;, and this is another such post. In this one,
we'll take a look and see how to turn your model's ArrayField values into
filters in the admin.&lt;/p&gt;
&lt;p&gt;To start out, let's assume we have a model that contains a simple title
(a &lt;code&gt;CharField&lt;/code&gt;) and some keywords (an &lt;code&gt;ArrayField&lt;/code&gt;).
It might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db import models

class Item(models.Model):
    title = models.CharField(max_length=128)
    keywords = ArrayField(
        models.CharField(max_length=32, blank=True),
        default=list,
        blank=True,
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This model, &lt;code&gt;Item&lt;/code&gt;, allows an optional list if keywords (chars)
giving you a default of an empty list. Now, you &lt;em&gt;could&lt;/em&gt; connect it to
django's admin app with the following bit of code. This would list all of the
item titles in the list view, and you'd also get a filter on the right-hand
side, presumably containing the values of your &lt;code&gt;keywords&lt;/code&gt; field.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib import admin

class ItemAdmin(admin.ModelAdmin):
    list_display = ('title', )
    list_filter = ('keywords', )

admin.site.register(models.Item, ItemAdmin)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, if you write this, you'll soon notice something strange. The admin
treats each &lt;code&gt;Item&lt;/code&gt;'s list of a keywords as a single option for the
list filter! That means you get filter options like &lt;code&gt;['foo', 'bar']&lt;/code&gt; and &lt;code&gt;['foo', 'bar', 'bingo']&lt;/code&gt;. Yuck!&lt;/p&gt;
&lt;p&gt;&lt;img src="//i.imgur.com/LePgVfd.png" alt="these are not the list filters you're looking for..." /&gt;
This is probably not what you had in mind.&lt;/p&gt;
&lt;p&gt;What we really need to do, is to assemble a unique set of &lt;em&gt;all possible
values&lt;/em&gt; for the entire collection of &lt;code&gt;Item&lt;/code&gt;s, then build a custom
admin filter. The custom admin filter is possible by creating a subclass of
&lt;code&gt;SimpleListFilter&lt;/code&gt;, and you can read all about that in the
&lt;a href="https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter"&gt;ModelAdmin.list_filter&lt;/a&gt; docs.&lt;/p&gt;
&lt;p&gt;But first, let's get a unique set of all possible keywords:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# query and sort all keywords belonging to Items
keywords = Item.objects.values_list(&amp;quot;keywords&amp;quot;, flat=True)

# Flatten the nested list of results, and eliminate any empty lists
keywords = [kw for sublist in keywords for kw in sublist if kw]

# Get rid of duplicates and sort them (in alphabetical order)
keywords = sorted(set(keywords))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we need to build our custom filter. We'll call it an
&lt;code&gt;ArrayFieldListFilter&lt;/code&gt;. The django admin docs have an example of this,
and it's worth reading their &lt;a href="https://docs.djangoproject.com/en/1.8/ref/contrib/admin/#django.contrib.admin.ModelAdmin.list_filter"&gt;example code&lt;/a&gt; as well (search for the &lt;code&gt;SimpleListFilter&lt;/code&gt; on that page).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# I'll often add this to admin.py...
class ArrayFieldListFilter(admin.SimpleListFilter):
    &amp;quot;&amp;quot;&amp;quot;This is a list filter based on the values
    from a model's `keywords` ArrayField. &amp;quot;&amp;quot;&amp;quot;

    title = 'Keywords'
    parameter_name = 'keywords'

    def lookups(self, request, model_admin):
        # Very similar to our code above, but this method must return a
        # list of tuples: (lookup_value, human-readable value). These
        # appear in the admin's right sidebar

        keywords = Item.objects.values_list(&amp;quot;keywords&amp;quot;, flat=True)
        keywords = [(kw, kw) for sublist in keywords for kw in sublist if kw]
        keywords = sorted(set(keywords))
        return keywords

    def queryset(self, request, queryset):
        # when a user clicks on a filter, this method gets called. The
        # provided queryset with be a queryset of Items, so we need to
        # filter that based on the clicked keyword.

        lookup_value = self.value()  # The clicked keyword. It can be None!
        if lookup_value:
            # the __contains lookup expects a list, so...
            queryset = queryset.filter(keywords__contains=[lookup_value])
        return queryset
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we need to add this class as an option to our model admin subclass. To
do that, we'll change &lt;code&gt;list_filter = ('keywords', )&lt;/code&gt; to
&lt;code&gt;list_filter = (ArrayFieldListFilter, )&lt;/code&gt;. Your &lt;code&gt;ItemAdmin&lt;/code&gt;
class should now be:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib import admin

class ItemAdmin(admin.ModelAdmin):
    list_display = ('title', )
    list_filter = (ArrayFieldListFilter, )

admin.site.register(models.Item, ItemAdmin)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And there you have it. A list of all of your &lt;code&gt;Item&lt;/code&gt;'s keywords,
available to your for filtering your objects in the admin. Keep in mind that
this list is built dynamically (like most admin filters). If you use this code
and don't see any filter options, don't fret! You need to add some keywords to
your existing items, first. Edit an &lt;code&gt;Item&lt;/code&gt; then come back to the list
view, and then you should see your keywords.&lt;/p&gt;
&lt;p&gt;&lt;img src="//i.imgur.com/1NGOchj.png" alt="Working filters!" /&gt;
There! Doesn't that make more sense?&lt;/p&gt;
&lt;p&gt;Hope this helps!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/django-admin-filters-arrayfields/</guid><pubDate>Wed, 30 Sep 2015 22:42:44 +0000</pubDate></item><item><title>Disabling the Forms in Django Rest Framework's Browsable API</title><link>https://bradmontgomery.net/blog/disabling-forms-django-rest-frameworks-browsable-api/</link><description>
&lt;p&gt;If you're building a &lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;RESTful&lt;/a&gt; api using django, then you're probably aware
of &lt;a href="http://www.django-rest-framework.org/"&gt;Django Rest Framework&lt;/a&gt;.
It's a great project that will do a lot of the heavy lifting for you. It's also
got this really really nice featur: &lt;a href="http://www.django-rest-framework.org/topics/browsable-api/"&gt;the browsable api&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The browsable api gives you out-of-the box access to view your api, and even
to interact with it using some auto-generated forms. This is great during development, because you can quickly see exaclty how your api works. And the browsable api
is also great for production, because it doubles as public documentation (provided
you put some care and effort into your docstrings, but that's another post).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, a lot of people seem to want to disable the browsable api's
forms for their production site. I think this makes sense, and I'm one of those people! Here's how I made it happen:&lt;/p&gt;
&lt;p&gt;DRF uses a class to render the browsable api, aptly named the &lt;code&gt;BrowsableAPIRenderer&lt;/code&gt;. When it generates its context, it creates a &lt;code&gt;display_edit_forms&lt;/code&gt; variable, and we need to override that. So, we'll create own own renderer class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from rest_framework.renderers import BrowsableAPIRenderer

class BrowsableAPIRendererWithoutForms(BrowsableAPIRenderer):
    &amp;quot;&amp;quot;&amp;quot;Renders the browsable api, but excludes the forms.&amp;quot;&amp;quot;&amp;quot;

    def get_context(self, *args, **kwargs):
        ctx = super().get_context(*args, **kwargs)
        ctx['display_edit_forms'] = False
        return ctx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can put that anywhere in your project. I typically have a &lt;code&gt;utils&lt;/code&gt;
app in most of my projects, so I put that in &lt;code&gt;utils/renderers.py&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;DRF uses a built-in setting to define a number of its renderes, so we need
to override the &lt;code&gt;DEFAULT_RENDERER_CLASSES&lt;/code&gt;. My settings for DRF now
look something like this (including the setting for pagination):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;REST_FRAMEWORK = {
    'PAGINATE_BY': 100,
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'utils.api.BrowsableAPIRendererWithoutForms',
    ),
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And there you have it. Go browse your django rest_framework-powered api, and
notice that there are no forms!&lt;/p&gt;
&lt;hr /&gt;
&lt;h2&gt;Update: August 22, 2016&lt;/h2&gt;
&lt;p&gt;While the above worked for quite some time for me, it's certainly a sub-optimal solution, because the  &lt;code&gt;BrowsableAPIRendererWithoutForms&lt;/code&gt;  class will still do all of the work to render the forms.&lt;/p&gt;
&lt;p&gt;A slightly better solution to this problem is to short-circuit that process altogether. We can do that by overriding two of the parent class's methods:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from rest_framework.renderers import BrowsableAPIRenderer

class BrowsableAPIRendererWithoutForms(BrowsableAPIRenderer):
    &amp;quot;&amp;quot;&amp;quot;Renders the browsable api, but excludes the forms.&amp;quot;&amp;quot;&amp;quot;

    def get_context(self, *args, **kwargs):
        ctx = super().get_context(*args, **kwargs)
        ctx['display_edit_forms'] = False
        return ctx
    
    def show_form_for_method(self, view, method, request, obj):
        &amp;quot;&amp;quot;&amp;quot;We never want to do this! So just return False.&amp;quot;&amp;quot;&amp;quot;
        return False

    def get_rendered_html_form(self, data, view, method, request):
        &amp;quot;&amp;quot;&amp;quot;Why render _any_ forms at all. This method should return 
        rendered HTML, so let's simply return an empty string.
        &amp;quot;&amp;quot;&amp;quot;
        return &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's it! You shouldn't see any forms on your browseable api, &lt;em&gt;and&lt;/em&gt; they should be just a small bit faster now, since we no longer do any form rendering work.&lt;/p&gt;
&lt;p&gt;When doing this kind of stuff, It's always a good idea to look over the original source code, and you can &lt;a href="https://github.com/tomchristie/django-rest-framework/blob/3.4.4/rest_framework/renderers.py#L438"&gt;do that here (DRF v. 3.4.4)&lt;/a&gt;. If you've stumbled across this post, first of all thanks for reading! Secondly, if you have any suggestions, please let me know in the comments below.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/disabling-forms-django-rest-frameworks-browsable-api/</guid><pubDate>Thu, 03 Sep 2015 20:12:42 +0000</pubDate></item><item><title>Webucator: zip, map, and lambda</title><link>https://bradmontgomery.net/blog/webucator-zip-map-and-lambda/</link><description>
&lt;p&gt;Recently, the folks from Webucator, who have a &lt;a href="https://www.webucator.com/programming/python.cfm"&gt;series of python tutorials&lt;/a&gt; got in touch with me about one of my blog posts: &lt;a href="https://bradmontgomery.net/blog/pythons-zip-map-and-lambda/"&gt;Python's zip, map, and lambda&lt;/a&gt;. They wanted to turn that article into a tutorial video.&lt;/p&gt;
&lt;p&gt;I thought that sounded like a pretty cool idea, so if you're into video tutorials, give this a view. And check out some of their other tutorials as well.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/webucator-zip-map-and-lambda/</guid><pubDate>Sun, 30 Aug 2015 12:33:31 +0000</pubDate></item><item><title>A django iconbool filter</title><link>https://bradmontgomery.net/blog/django-iconbool-filter/</link><description>
&lt;p&gt;Django's template laguage includes a lot of really useful
&lt;a href="https://docs.djangoproject.com/en/1.8/ref/templates/builtins/"&gt;built-in tags and filters&lt;/a&gt;, but sometimes you just need to
&lt;a href="https://docs.djangoproject.com/en/1.8/howto/custom-template-tags/"&gt;build your own&lt;/a&gt;. There are many reasons why you might want to do this, but
I'm lazy, and I like to build filters and tags that let me take shortcuts
in the template.&lt;/p&gt;
&lt;p&gt;Here's one example of a simple filter that let's me be lazy: an &lt;em&gt;iconbool&lt;/em&gt; filter.&lt;/p&gt;
&lt;h2&gt;Motivation&lt;/h2&gt;
&lt;p&gt;I really like &lt;a href="https://fortawesome.github.io/Font-Awesome/icons/"&gt;Font-Awesome&lt;/a&gt;, and any time I need to represent a boolean value, I like to use an icon. Here's one such example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;User has Widget?
{% if user.has_widget %}
  &amp;lt;i class=&amp;quot;fa fa-check&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; Yes
{% else %}
  &amp;lt;i class=&amp;quot;fa fa-ban&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; No
{% endif %}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, that's not a lot of code, but if you're doing a lot of this type of
markup, it can get tedious really quick (imagine building a grid of this kind of
content)!&lt;/p&gt;
&lt;p&gt;Wouldn't it be so much nicer to write this, instead? (Yes, it would!)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;User has Widget? {{ user.has_widget|iconbool }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Build your custom filter&lt;/h2&gt;
&lt;p&gt;We can accomplish the above with a simple, custom django filter. Let's call it
&lt;code&gt;iconbool&lt;/code&gt;. It's going to be a simple function that returns a very
simple string of markup based on some input.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django import template
from django.utils.safestring import mark_safe

register = template.Library()


@register.filter(&amp;quot;iconbool&amp;quot;, is_safe=True)
def iconbool(value):
    &amp;quot;&amp;quot;&amp;quot;Given a boolean value, this filter outputs a font-awesome icon + the
    word &amp;quot;Yes&amp;quot; or &amp;quot;No&amp;quot;

    Example Usage:

        {{ user.has_widget|iconbool }}

    &amp;quot;&amp;quot;&amp;quot;
    if bool(value):
        result = '&amp;lt;i class=&amp;quot;fa fa-check&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; Yes'
    else:
        result = '&amp;lt;i class=&amp;quot;fa fa-ban&amp;quot;&amp;gt;&amp;lt;/i&amp;gt; No'
    return mark_safe(result)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's it! Put this in your app's &lt;code&gt;templatetags&lt;/code&gt; directory
(for example: &lt;code&gt;myapp/templatetags/myapp_filters.py&lt;/code&gt;), and remember to
load the template library in your templates (e.g. &lt;code&gt;{% load myapp_filters %}&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;And remember, being lazy is good! Don't forget that django template filters
can save you lots of work.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/django-iconbool-filter/</guid><pubDate>Wed, 26 Aug 2015 16:58:38 +0000</pubDate></item><item><title>Nice ArrayField widgets with choices and chosen.js</title><link>https://bradmontgomery.net/blog/nice-arrayfield-widgets-choices-and-chosenjs/</link><description>
&lt;p&gt;One of the really cool new features in Django 1.8 is the &lt;a href="https://docs.djangoproject.com/en/1.8/releases/1.8/#new-postgresql-specific-functionality"&gt;support for Postgres-specific fields&lt;/a&gt;. I'm very excited to be able to use
things like PostgreSQL arrays or hstore without 3rd-party add-ons.&lt;/p&gt;
&lt;p&gt;Unfortnately, the default form inputs for &lt;code&gt;ArrayField&lt;/code&gt;s are less
than stellar. So, in this post I want to explore a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a Model who's &lt;code&gt;ArrayField&lt;/code&gt; only accepts items from a
set of predefined choices&lt;/li&gt;
&lt;li&gt;a ModelForm that makes use of &lt;a href="http://harvesthq.github.io/chosen/"&gt;chosen.js&lt;/a&gt; (which I still really like!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's start with a simple model: the quintessential &lt;code&gt;Post&lt;/code&gt;. This
time, however, it also accepts a set of labels (or tags). Let's start with the
set of acceptable labels (this example is short):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LABEL_CHOICES = (
    ('django', 'Django'),
    ('python', 'Python'),
)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And now our model. Note that the &lt;code&gt;ArrayField&lt;/code&gt;'s first argument is
a &lt;code&gt;CharField&lt;/code&gt; (that's the &lt;a href="https://docs.djangoproject.com/en/1.8/ref/contrib/postgres/fields/#arrayfield"&gt;base_field&lt;/a&gt;), and that is where
we define the choices that are allowed as input.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Post(models.Model):
    title = models.CharField(max_length=128)
    content = models.TextField()
    labels = ArrayField(
        models.CharField(max_length=32, blank=True, choices=LABEL_CHOICES),
        default=list,
        blank=True,
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that labels are optional, and that the default is an empty list (or no
labels). Now, we'd typically define a &lt;code&gt;ModelForm&lt;/code&gt; as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class PostForm(forms.ModelForm):
    class Meta:
        model = Post
        fields = ['title', 'content', 'labels']
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While this &lt;em&gt;will&lt;/em&gt; work, there are a couple of fairly significant
problems with it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;By default, the &lt;code&gt;labels&lt;/code&gt; field gets rendered as a simple text input, e.g. &lt;code&gt;&amp;lt;input id=&amp;quot;id_labels&amp;quot; name=&amp;quot;labels&amp;quot; type=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;You don't get any sort of selection for the choices, and...&lt;/li&gt;
&lt;li&gt;You must enter choices as a comma-separated string (with NO spaces!); if you get one wrong, the form validators will throw an Exception.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, while it technically works, it's really not very friendly at all. Let's make it better.&lt;/p&gt;
&lt;p&gt;First, django's &lt;code&gt;ModelForm&lt;/code&gt; gives us a nice hook for specifying a widget for any fields via a &lt;code&gt;widgets&lt;/code&gt; attribute within the form's inner Meta class. We'll use this technique to customize our form's output, but first let's build a custom Widget.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class ArrayFieldSelectMultiple(forms.SelectMultiple):
    &amp;quot;&amp;quot;&amp;quot;This is a Form Widget for use with a Postgres ArrayField. It implements
    a multi-select interface that can be given a set of `choices`.

    You can provide a `delimiter` keyword argument to specify the delimeter used.

    &amp;quot;&amp;quot;&amp;quot;

    def __init__(self, *args, **kwargs):
        # Accept a `delimiter` argument, and grab it (defaulting to a comma)
        self.delimiter = kwargs.pop(&amp;quot;delimiter&amp;quot;, &amp;quot;,&amp;quot;)
        super(ArrayFieldSelectMultiple, self).__init__(*args, **kwargs)

    def render_options(self, choices, value):
        # value *should* be a list, but it might be a delimited string.
        if isinstance(value, str):  # python 2 users may need to use basestring instead of str
            value = value.split(self.delimiter)
        return super(ArrayFieldSelectMultiple, self).render_options(choices, value)

    def value_from_datadict(self, data, files, name):
        if isinstance(data, MultiValueDict):
            # Normally, we'd want a list here, which is what we get from the
            # SelectMultiple superclass, but the SimpleArrayField expects to
            # get a delimited string, so we're doing a little extra work.
            return self.delimiter.join(data.getlist(name))
        return data.get(name, None)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This widget implements a &lt;code&gt;&amp;lt;select type=&amp;quot;multiple&amp;quot;&amp;gt;&lt;/code&gt; widget
for our labels, and it's options will consist of the items from our &lt;code&gt;LABEL_CHOICES&lt;/code&gt;. Pay attention to the comments in the widget, because there are a
few gotchas in there.&lt;/p&gt;
&lt;p&gt;Now, to incorporate this widget into our &lt;code&gt;PostForm&lt;/code&gt;. Note that we
also specify a css class of &amp;quot;chosen&amp;quot; using the &lt;code&gt;attrs&lt;/code&gt; keyword argument. In addition, we specify an inner &lt;code&gt;Media&lt;/code&gt; class, so our form knows
how to load the javascript and css assets for chosen.js (and jquery).&lt;/p&gt;
&lt;p&gt;This assumes you've got jquery and chosen installed as part of your project's
static files. I typically have them organized in a similar fashion:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;static/
    js/
        jquery.min.js
    chosen/
        chosen.min.css
        chosen.jquery.min.js
        ...
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;class PostForm(forms.ModelForm):
    class Meta:
        model = Post
        fields = ['title', 'content', 'labels']
        widgets = {
            &amp;quot;labels&amp;quot;: ArrayFieldSelectMultiple(
                choices=LABEL_CHOICES, attrs={'class': 'chosen'}),
        }

    class Media:
        css = {
            &amp;quot;all&amp;quot;: (&amp;quot;chosen/chosen.min.css&amp;quot;, )
        }
        js = (&amp;quot;js/jquery.min.js&amp;quot;, &amp;quot;chosen/chosen.jquery.min.js&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And that's it! When this form is rendered, the &lt;code&gt;labels&lt;/code&gt; widget
will look something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select multiple=&amp;quot;multiple&amp;quot; class=&amp;quot;chosen&amp;quot; id=&amp;quot;id_labels&amp;quot; name=&amp;quot;labels&amp;quot;&amp;gt;
&amp;lt;option value=&amp;quot;django&amp;quot;&amp;gt;Django&amp;lt;/option&amp;gt;
&amp;lt;option value=&amp;quot;python&amp;quot;&amp;gt;Python&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just don't forget to render the form's media in your template with, &lt;code&gt;{{ form.media }}&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you've got jquery &amp;amp; chosen.js installed correctly, you should get a
multi-select widget with pre-defined options that's very usable, with results
stored in a PostgreSQL array field.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/nice-arrayfield-widgets-choices-and-chosenjs/</guid><pubDate>Sat, 25 Apr 2015 22:50:25 +0000</pubDate></item><item><title>Django hack: Help text on a model instance</title><link>https://bradmontgomery.net/blog/django-hack-help-text-modal-instance/</link><description>
&lt;p&gt;If you've been been working with &lt;a href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt; for
a while, you're probably familiar with the &lt;code&gt;help_text&lt;/code&gt; attribute for model
fields. It gives us a hook for adding descriptive text that gets automatically
included on forms or in the admin.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But what if you want to access that same information on an instance of
model object?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Let's look at an example! Assume we have a simple model:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class BlogPost(models.Model):
    title = models.CharField(
        max_length=50,
        unique=True,
        help_text=&amp;quot;A unique title for this thing&amp;quot;
    )
    content = models.TextField(
        help_text=&amp;quot;A content for this thing&amp;quot;
    )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here we have a simple blog post. If we were building an app, we might use a
ModelForm subclass that allows users to create an instance of a BlogPost. It
would look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class BlogPostForm(forms.ModelForm):

    class Meta:
        model = BlogPost
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And in our view we might create an unbound instance of this form with
&lt;code&gt;form = BlogPostForm()&lt;/code&gt;, then in our template we might have markup that
loooks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;form&amp;gt;
  {{ form.as_p }}
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That generates a decent-looking form, with our model's help-text included. The
markup would be similar to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
  &amp;lt;label for=&amp;quot;id\_title&amp;quot;&amp;gt;Title:&amp;lt;/label&amp;gt;
  &amp;lt;input id=&amp;quot;id\_title&amp;quot; maxlength=&amp;quot;50&amp;quot; name=&amp;quot;title&amp;quot; type=&amp;quot;text&amp;quot; /&amp;gt;
  &amp;lt;span class=&amp;quot;helptext&amp;quot;&amp;gt;A unique title for this thing&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
  &amp;lt;label for=&amp;quot;id\_description&amp;quot;&amp;gt;Description:&amp;lt;/label&amp;gt;
  &amp;lt;textarea cols=&amp;quot;40&amp;quot; id=&amp;quot;id\_description&amp;quot; name=&amp;quot;description&amp;quot; rows=&amp;quot;10&amp;quot;&amp;gt;&amp;lt;/textarea&amp;gt;
  &amp;lt;span class=&amp;quot;helptext&amp;quot;&amp;gt;A description for this thing&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice the &lt;code&gt;&amp;lt;span class=&amp;quot;helptext&amp;quot;&amp;gt;&lt;/code&gt; elements!&lt;/p&gt;
&lt;p&gt;Unfortunately, it's not as straightforwad if we want to access that same bit of
information on a model instance. However, Django already does something a little
magical that for model fields that include a set of choices. From the
&lt;a href="https://docs.djangoproject.com/en/1.7/ref/models/fields/#choices"&gt;choices documentation&lt;/a&gt; :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For each model field that has choices set, Django will add a method to
retrieve the human-readable name for the field‚Äôs current value. See
get_FOO_display() in the database API documentation.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, I decided to look up &lt;a href="https://github.com/django/django/blob/ea3168dc6ced391d848c511a14cfcecfeac9d401/django/db/models/fields/__init__.py#L660"&gt;how they did this&lt;/a&gt;
and I discovered the django implementation of curry, in &lt;code&gt;django.utils.functional.curry&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For the purposes of this post, curry will let us dynamically create a method
on a class, defining it's parameters at run-time.&lt;/p&gt;
&lt;p&gt;Let's look at how this works. First, lets see how to access a field's &lt;code&gt;help_text&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class BlogPost(models.Model):
    title = models.CharField(...)
    content = models.TextField(...)

    def _get_help_text(self, field_name):
        &amp;quot;&amp;quot;&amp;quot;Given a field name, return it's help text.&amp;quot;&amp;quot;&amp;quot;

        # Let's iterate over all the fields on this model.
        for field in self._meta.fields:
            # The name of your field is stored as
            # a name attribute on the field object
            if field.name == field_name:
                # and there's the help_text!
                return field.help_text
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, all we need to do is figure out how to dynamically create a method,
&lt;code&gt;get_title_help_text&lt;/code&gt; that calls &lt;code&gt;_get_help_text('title')&lt;/code&gt;. Below is an
updated version of our model; Take a look at it's &lt;code&gt;__init__&lt;/code&gt; method.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db import models
from django.utils.functional import curry


class BlogPost(models.Model):
    title = models.CharField(
        max_length=50,
        unique=True,
        help_text=&amp;quot;A unique title for this thing&amp;quot;
    )
    content = models.TextField(
        help_text=&amp;quot;A content for this thing&amp;quot;
    )

    def _get_help_text(self, field_name):
        &amp;quot;&amp;quot;&amp;quot;Given a field name, return it's help text.&amp;quot;&amp;quot;&amp;quot;
        for field in self._meta.fields:
            if field.name == field_name:
                return field.help_text

    def __init__(self, *args, **kwargs):
        # Call the superclass first; it'll create all of the field objects.
        super(BlogPost, self).__init__(*args, **kwargs)

        # Again, iterate over all of our field objects.
        for field in self._meta.fields:
            # Create a string, get_FIELDNAME_help text
            method_name = &amp;quot;get_{0}_help_text&amp;quot;.format(field.name)

            # We can use curry to create the method with a pre-defined argument
            curried_method = curry(self._get_help_text, field_name=field.name)

            # And we add this method to the instance of the class.
            setattr(self, method_name, curried_method)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, in our template we can display a BlogPost's field values, as well as call
a method to access each field's defined help text.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
  {{ post.title }}&amp;lt;br/&amp;gt;
  &amp;lt;span&amp;gt;{{ post.get_title_help_text }}&amp;lt;/span&amp;gt;
 &amp;lt;/p&amp;gt;
&amp;lt;p&amp;gt;
  {{ post.content }}&amp;lt;br/&amp;gt;
  &amp;lt;span&amp;gt;{{ post.get_content_help_text }}&amp;lt;/span&amp;gt;
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty cool.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/django-hack-help-text-modal-instance/</guid><pubDate>Tue, 17 Mar 2015 04:54:01 +0000</pubDate></item><item><title>Unsubscribe</title><link>https://bradmontgomery.net/blog/unsubscribe/</link><description>
&lt;p&gt;This is a bit of rant. I'm currently checking (triaging, really) my email, and
I've decided to click all the &lt;em&gt;unsubscribe&lt;/em&gt; links in the marketing emails. The
thing is, I've already done this. Many times.&lt;/p&gt;
&lt;p&gt;For many of these, I've just started reporting them as spam. I'm sorry, but if
you ignore the fact that I've unsubscribed from your email, I'm calling you a
spammer.&lt;/p&gt;
&lt;p&gt;Of course, about half the time I'm invariably met with a &lt;em&gt;Server Error. JRun
Connector Protocol Error.&lt;/em&gt; Figures.&lt;/p&gt;
&lt;p&gt;There are a few however, that I just don't want to report as spam. One of which
is my bank! Don't ask me why my bank is sending me marketing email, because I
really have no idea. They've already got my business, and I'm already using the
thing they're trying to sell me. Excuse me while I go flip some tables.&lt;/p&gt;
&lt;p&gt;OK, I'm back. So, I &lt;em&gt;do&lt;/em&gt; try to unsubscribe from my banks marketing email, and I
get this: We're sorry to see you go. Please allow 7-10 business days for us to
process your request.&lt;/p&gt;
&lt;p&gt;Really?&lt;/p&gt;
&lt;p&gt;So, I can just imagine that their process for handling these requests goes like this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A user clicks the unsubscribe link, and this sends an email to customer service.&lt;/li&gt;
&lt;li&gt;A customer service representative receives an unsubscribe email notification
containing my email address.&lt;/li&gt;
&lt;li&gt;The customer service representative then types my email address into an excel spreadsheet.&lt;/li&gt;
&lt;li&gt;Once some arbitrary quota has been met, the spreadsheet gets mailed to &lt;em&gt;IT&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Someone in IT then manually writes an SQL statement, being careful to type in
all the email addresses as they appear in the spreadsheet.&lt;/li&gt;
&lt;li&gt;They then copy and paste this SQL statement into an email, and send that to an
&lt;em&gt;Operations&lt;/em&gt; team.&lt;/li&gt;
&lt;li&gt;The Operations team, then copies the SQL statement, pastes it into an SQLPlus
terminal (they are using Oracle, of course), and when it fails to execute
correctly, they give up and send a nasty email back to IT.&lt;/li&gt;
&lt;li&gt;Steps 5-8 repeat an arbitrary number of times until someone just gives up.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This all happens again next month when I try to unsubscribe again.&lt;/p&gt;
&lt;p&gt;Yay, Computers.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/unsubscribe/</guid><pubDate>Mon, 01 Dec 2014 15:16:07 +0000</pubDate></item><item><title>Running Miles, Curing Cancer</title><link>https://bradmontgomery.net/blog/running-miles-curing-cancer/</link><description>
&lt;p&gt;Yesterday, I decided (mostly on a whim) to run the St Jude Memphis Marathon. It's
a race supporting St. Jude Children's research hospital which provides treatment
and research for major childhood illnesses such as Cancer and leukemia.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;really&lt;/em&gt; cool thing about St Jude is that they provide treatment that is 100%
free of charge to the families that suffer through these diseases. From their
website, &amp;quot;Families never receive a bill from St. Jude for treatment, travel,
housing and food ‚Äì because all a family should worry about is helping their
child live.&amp;quot;&lt;/p&gt;
&lt;p&gt;That's why I'm happy to spend my time, and my money to support their mission.
I've got just over a month to figure out how to run nonstop for 26.2 miles (that's
42.2 kilometers)! AND, I could use your help!&lt;/p&gt;
&lt;p&gt;You can join me is supporting this unique organization. Just donate $10, today,
and help me find a cure for childhood cancer and other catastrophic diseases.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/running-miles-curing-cancer/</guid><pubDate>Sat, 18 Oct 2014 14:08:40 +0000</pubDate></item><item><title>#HACKMemphis 2014</title><link>https://bradmontgomery.net/blog/hackmemphis-2014/</link><description>
&lt;p&gt;The second annual HACKmemphis happened (is still
happening, actually) this weekend, and it's been a blast. I went into the event
with lots of ideas, but with very few expectations for myself.&lt;/p&gt;
&lt;p&gt;My Goals: Hang out with friends (new &amp;amp; old) and have fun.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mission Accomplished!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I did build some stuff, too, so I feel pretty good about that. The stuff includes
a simple, fun little app, improvements to an Alfred Workflow, and some
improvements to Elvis, our community hubot.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Announcing, Echyo. This was a
completely unplanned project, and was inspired by some conversations had on
Friday night. If you're one of a select lucky few, this app with send you a
Yo message when you @-reply to me on twitter.
Amazing, right.&lt;/li&gt;
&lt;li&gt;I've got an Alfred workflow (that is now mis-named)
&lt;em&gt;percent change&lt;/em&gt;. You can get it from Packal, but it
lets you do percentage calculations easily. I added a few features this weekend
and cleared up some bits that were confusing.&lt;/li&gt;
&lt;li&gt;Our local irc channel (&lt;code&gt;#memtech&lt;/code&gt; on freenode) has a
hubot instanced named Elvis (what else!). I finally got a chance to (a) Fix a bug in a
script that pulls from What's Brad Eating, and (b) modify our meetup script so that it'll
just list the next upcoming tech event.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Long live: elvis meetup.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Huge thanks&lt;/em&gt; go out to all of the people that made this weekend possible,
especially the sponsors and to Cowork Memphis for hosting.
There was a ton of work that went into this, and I'm incredibly proud to be a
part of the Memphis Tech community.&lt;/p&gt;
&lt;p&gt;The awesomeness isn't over yet, so watch along on twitter by following &lt;code&gt;#HACKmemphis&lt;/code&gt; and &lt;code&gt;#memtech&lt;/code&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/hackmemphis-2014/</guid><pubDate>Sun, 21 Sep 2014 15:09:22 +0000</pubDate></item><item><title>My Development Environment</title><link>https://bradmontgomery.net/blog/my-development-environment/</link><description>
&lt;p&gt;Every once in a while, I like to step back and take a look at the tools that I
use. I don't change my development environment very often, but I do periodically
pull in a new tool here and there. Sometimes they &lt;em&gt;fit&lt;/em&gt; into my workflow, and
sometimes they don't.&lt;/p&gt;
&lt;p&gt;As far as I know, I've never written my thoughts down when doing this, but
in an attempt to keep in line with my Write more. Share more. goal from the beginning of the year,
this seems like a good time to start.&lt;/p&gt;
&lt;h2&gt;The Editor&lt;/h2&gt;
&lt;p&gt;I use MacVim, and I feel fairly
proficient, though I'm certainly not a power user. I keep a fairly light-weight
set of addons.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I still use pathogen. It works for me.
I don't fool around with git submodules; I just put .vim/bundle in my .gitignore.&lt;/li&gt;
&lt;li&gt;I use nerdtree and nerdcommenter&lt;/li&gt;
&lt;li&gt;syntastic keeps me out of trouble.&lt;/li&gt;
&lt;li&gt;vim-flake8 helps keep my python looking A-OK.&lt;/li&gt;
&lt;li&gt;Too keep things aesthetically pleasing (perhaps more important that you might
think!), I use set t_Co=256 and colorscheme desert256 with
Anonymous Pro,
set guifont=Anonymous\ Pro:h16.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Development&lt;/h2&gt;
&lt;p&gt;Most of my time is spent writing Python, and building Django apps. So of course,
I'm using Django and a whole host of open-source things, but a little lower down
the stack, here's what a typical day might look like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I use vagrant to fire up &lt;strong&gt;two&lt;/strong&gt; virtual machines
(backed by VirtualBox) running Ubuntu. Currently 12.04 for my most purposes,
but my personal projects are running on both 13.10 and 14.04.&lt;/li&gt;
&lt;li&gt;VM #1 is your typicall &lt;em&gt;all-in-one&lt;/em&gt; box running PostgreSQL and nginx which
proxies to django's development server (&lt;em&gt;side note: It took me far too long
to do this, but letting nginx serve your static media instead of django's
development server is really awesome&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;VM #2 is really just a secondary database box. Do you use multiple databases
in production? If so, then you do during development, too, right? This box
also runs an instance of memcached (which I
sometimes enable during development) and Elasticsearch
(when I need it).&lt;/li&gt;
&lt;li&gt;All of this runs on my scrappy little 2011 Macbook Air (still running 10.8) with
4Gb of ram, where I do all my editing and my git stuff.&lt;/li&gt;
&lt;li&gt;I use both Chrome and Firefox for front-end work, along with jQuery, and a
host of plugins and other small tools like underscore.js and
moment.js.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Miscellany&lt;/h2&gt;
&lt;p&gt;I still read the Django Docs online, and
I google for a lot of things, which lands me at stackoverflow
fairly regularly, though no so much that I noticed the recent downtime (my friends
in irc told me about it first).&lt;/p&gt;
&lt;p&gt;Google Hangouts keeps me connected with the rest of the team, and though things like
Slack and HipChat seem to
be all the rage, our team is small enough that Hangouts just work.&lt;/p&gt;
&lt;p&gt;Honorable mentions go to Trello and Github
just because both sites are a huge part of my daily development workflow.&lt;/p&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;That's pretty much it. It's not at all fancy, and in fact, I tend to like
simple tools, but I'm always open to trying things to make me more productive
(You know, the old &lt;em&gt;work smarter not harder&lt;/em&gt; mantra).&lt;/p&gt;
&lt;p&gt;Do you see a gaping hole in what I'm doing? Am I missing something blatently
obvious? Let me know in the comments! :)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/my-development-environment/</guid><pubDate>Wed, 25 Jun 2014 03:12:55 +0000</pubDate></item><item><title>Your VM has become "inaccessible."</title><link>https://bradmontgomery.net/blog/your-vm-has-become-inaccessible/</link><description>
&lt;p&gt;Today I ran out of disk space on my Macbook Air. I mean, &lt;em&gt;completely&lt;/em&gt; out of
space. I use vagrant and
Virtualbox for work, and I knew that had
several large, but older snapshots of virtual machines that I could remove to
free up space.&lt;/p&gt;
&lt;p&gt;And that's how today fell apart.&lt;/p&gt;
&lt;p&gt;I also use the vagrant-vbox-snapshot
plugin, and that's the tool I typically use to take snapshots when I need them.&lt;/p&gt;
&lt;p&gt;So, looking into my project folder, I run the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant snapshot list

Name: 2013-11-05 (UUID: ... )
Name: 2014-01-26 (UUID: ... )
Name: 2014-02-07 (UUID: ... )
Name: 2014-02-22 (UUID: ... )
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I tend to name my snapshots after the date on which I take them. Each of these
is around 8Gb in size, so I decide to delete the oldest one.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant snapshot delete 2013-11-05
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Unfortunately, whenever you remove a snapshot, VirtualBox decides to write some
data to disk. Think about that for a second.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;You can't remove a snapshot if your disk is full!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This command attempted to remove a snapshot, then after a minute failed with
a scary message (which I forgot to copy, and have since lost). And because the
VM is hosed, vagrant will offer the following complaint:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your VM has become &amp;quot;inaccessible.&amp;quot; Unfortunately, this is a critical error
with VirtualBox that Vagrant can not cleanly recover from. Please open
VirtualBox and clear out your inaccessible virtual machines or find a way
to fix them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And if you run vagrant status, you'll see something like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Current machine states:

my\_vm inaccessible (virtualbox)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, I did what Vagrant told me, and opened up VirtualBox. Well, the GUI tools
listed &lt;em&gt;my_vm&lt;/em&gt;, but also had a label next to it that said, &lt;em&gt;inaccessible&lt;/em&gt;, and
as far as I could, there were no enabled options that would let me do anything.&lt;/p&gt;
&lt;p&gt;Needless to say, I was ready to freak out a little.&lt;/p&gt;
&lt;p&gt;All is not lost, however. You see, there's a directoy where VirtualBox stores
it's machine images and it's config data. For me, that's in ~/VirtualBox VMs/.&lt;/p&gt;
&lt;p&gt;Inside that directory, vagrant should create a directory for each of it's
vms. So, I had some data at ~/VirtualBox VMs/someproject_myvm_1234567890.
The contents fo this folder look something like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; .
 ‚îú‚îÄ‚îÄ Logs/
 ‚îú‚îÄ‚îÄ Snapshots/
 ‚îú‚îÄ‚îÄ box-disk1.vmdk
 ‚îú‚îÄ‚îÄ myproject\_myvm\_1234567890.vbox
 ‚îî‚îÄ‚îÄ myproject\_myvm\_1234567890.vbox-pre
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That file with the .vbox-pre is an automatically generated backup of the
VirtualBox config file, prior to it saving a VM. So, here's what I did:&lt;/p&gt;
&lt;p&gt;Replace the .vbox config with the .vbox-pre config:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat myproject\_myvm\_1234567890.vbox-pre &amp;gt; myproject\_myvm\_1234567890.vbox
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that, my both VirtualBox and vagrant appeared to work with my VMs.&lt;/p&gt;
&lt;p&gt;Crisis averted, and with only a couple hours lost.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/your-vm-has-become-inaccessible/</guid><pubDate>Fri, 21 Mar 2014 20:16:55 +0000</pubDate></item><item><title>Wrapping up the WORS with a 10k at Shelby Farms</title><link>https://bradmontgomery.net/blog/wrapping-wors-10k-shelby-farms/</link><description>
&lt;p&gt;Today marks the end of the 2014 Winter Off Road Race Series.
The race was a 10K at Shelby Farms, and
while I've run this distance several times in the past, I think this particular
race might have been my best (just over 51 minutes).&lt;/p&gt;
&lt;p&gt;It helps when you're having fun ;)&lt;/p&gt;
&lt;p&gt;Prior to signing up for this series, I'd know about MRTC,
but I'd never participated in any of their smaller events (and the 2012 St.
Jude Half has been the *only* event prior to these). I have to admit that this
series has been so much fun, that I'll definitely be running more of these
kinds of races!&lt;/p&gt;
&lt;p&gt;&lt;img src="https://photos-3.dropbox.com/t/0/AACCrkE4c7ml726bGfEvnDaZg8foIqX4mPQPlS4jEM2DdA/12/6417511/jpeg/1024x768/3/1392595200/0/2/2014-02-16%2016.08.55-2.jpg/VXbeFqHu_4QJpcHHPvN6uF0H3vT22K81FLvA0s6l-BY" alt="Goodby 61" /&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/wrapping-wors-10k-shelby-farms/</guid><pubDate>Sun, 16 Feb 2014 22:55:19 +0000</pubDate></item><item><title>WORS 8K+ at Stanky Creek</title><link>https://bradmontgomery.net/blog/wors-8k-stanky-creek/</link><description>
&lt;p&gt;Sunday afternoon was the WORS 8K at Stanky Creek. I'd already spent most of the weekend working at
GiveCamp Memphis, so I really didn't know how well I'd fare during this race.&lt;/p&gt;
&lt;p&gt;Turns out, it's possible to run an 8K quite well with very little sleep!&lt;/p&gt;
&lt;p&gt;I felt pretty good for most of the race. The weather was cool (36F) and the
trails were soppy, muddy, and slippery. There's really not much else to say
about this race, other than I'm really happy that I bought the
Salomons. They performed exactly as I'd hoped, keeping
me on track while many other runners were slipping and sliding all over the
place.&lt;/p&gt;
&lt;p&gt;Next week is the 10K at Shelby Farms (another amazing place to run). I'm looking
forward to the race, but I'm a little bummed to see this series end. It's been a blast!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/wors-8k-stanky-creek/</guid><pubDate>Wed, 12 Feb 2014 03:19:30 +0000</pubDate></item><item><title>GiveCamp 2014</title><link>https://bradmontgomery.net/blog/givecamp-2014/</link><description>
&lt;p&gt;This weekend is GiveCamp Memphis, and I'm
pretty excited to be a part of it. It's hosted this year by
Cowork Memphis, which is a pretty great local
coworking space.&lt;/p&gt;
&lt;p&gt;If you're not familiar with GiveCamp, it's a weekend-long event where the
&lt;em&gt;technically-inclined&lt;/em&gt; donate their time and skills to a select group of
local noprofit organizations. The end results may include anything from new
logos, to new web designs, to brand-new applications.&lt;/p&gt;
&lt;p&gt;Even though this will be the third year for GiveCamp weekend, this will be my
first year participating. As far as I can tell, the overall goal is this:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Help people be better at being awesome.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I'm not exactly sure what's in store for the weekend, but I do know that
infrastructure won't be a problem thanks to the generosity of Rackspace.&lt;/p&gt;
&lt;p&gt;Now, if you know me, you know I'm a fan of Rackspace's services (I've
written in the past
about CloudFiles),
so I'm happy about having some free CloudServers to power a few local &lt;em&gt;Good Causes&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;If you haven't checked out Rackspace's offerenings lately, consider taking a
look at their Developer Discount Program.
You can get $300 in free cloud services ($50/month for six months).&lt;/p&gt;
&lt;p&gt;To borrow the Rackspace tagline, &lt;em&gt;&amp;quot;Go make something awesome, on us&amp;quot;&lt;/em&gt;:
http://developer.rackspace.com/devtrial/&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/givecamp-2014/</guid><pubDate>Fri, 07 Feb 2014 04:17:34 +0000</pubDate></item><item><title>Old-school Skitch and CloudFiles with ftp-cloudfs</title><link>https://bradmontgomery.net/blog/old-school-skitch-and-cloudfiles-ftp-cloudfs/</link><description>
&lt;p&gt;I'm an unabashed fan of Skitch . The old one (pre-Evernote acquisition). A lot of folks have written about how to acquire this and how they use it. Until recently, I just used the built-in &lt;em&gt;SFTP&lt;/em&gt; support to upload files to a Rackspace CloudServer .&lt;/p&gt;
&lt;p&gt;Lately however, I've been trying to limit the amount of stuff I have on servers that I have to maintain. One way I've been doing that is to push everything that looks like a &lt;em&gt;static website&lt;/em&gt; into CloudFiles .&lt;/p&gt;
&lt;p&gt;So the question is, &amp;quot;&lt;strong&gt;How do I make the old Skitch work with CloudFiles?&lt;/strong&gt;&amp;quot; It's a little bit of work, but not too terribly bad. Here's how I made it happen. It's a little python-centric (which is OK by me, because I'm a python developer).&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a virtualenv . We're going to install an open-source python library. I named my virtualenv, ftp-cloudfs.&lt;/li&gt;
&lt;li&gt;Run pip install ftp-cloudfs.&lt;/li&gt;
&lt;li&gt;Now, you can run the following command: ftpcloudfs -a https://auth.api.rackspacecloud.com/v1.0&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This will run a local FTP server which will transparently push files up to CloudFiles. Now you need to configure Skitch (screenshot) .&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Access Skitch's Preferences&lt;/li&gt;
&lt;li&gt;Click on the Share tab.&lt;/li&gt;
&lt;li&gt;Add an FTP Account Type.&lt;/li&gt;
&lt;li&gt;Your Server should be 127.0.0.1&lt;/li&gt;
&lt;li&gt;The port is 2021 (the default for ftp-cloudfs, though you can change this)&lt;/li&gt;
&lt;li&gt;Use your Rackspace username.&lt;/li&gt;
&lt;li&gt;Your password should be your rackspace cloud API Key (find or create this in your Account Settings .&lt;/li&gt;
&lt;li&gt;The Directory will be the name of your CloudFiles container, and plus any subdirectory structure that you have. For example, I have a container named static, and I want my uploaded files to appear to be in an uploads directory. So, Skitch's Directory setting should be static/uploads.&lt;/li&gt;
&lt;li&gt;Finally, add your CloudFiles Container's target domain as Skitch's Base URL. I'm assuming that you created a container to use as a &lt;em&gt;Static Website&lt;/em&gt;. This look something like &lt;em&gt;http://some-really-long-hash.something.rackcdn.com/uploads&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you've done everything correctly so far, you should be able to Skitch and upload to CloudFiles. Keep in mind, though, that you'll have to make sure the ftpcloudfs command (from above) is running every time you want to upload an image. There are ways to do this automatically (see this SO question ), but I've just left the command running in a Terminal window.&lt;/p&gt;
&lt;p&gt;Be sure to take a look at ftpcloudfs --help to see what else is available in this nifty app. Enjoy!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/old-school-skitch-and-cloudfiles-ftp-cloudfs/</guid><pubDate>Tue, 28 Jan 2014 14:55:24 +0000</pubDate></item><item><title>WORS 5k at Stanky Creek</title><link>https://bradmontgomery.net/blog/wors-5k-stanky-creek/</link><description>
&lt;p&gt;Yesterday I ran the 5k portion of the winter off-road race series. It was at Stanky Creek (aka Nesbit Park), which is one of my favorite local trail-running locations.&lt;/p&gt;
&lt;p&gt;As expected, the pace for this race was a bit slower than the 3k, and I had a good time running this one. Apparently, I'm going to keep writing about this WORS experience, so here's some thoughts about race number two:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;*wow*. There were a lot of people. I'm still surprised by how many people ran this thing.&lt;/li&gt;
&lt;li&gt;*wow* there were a lot of kids! Towards the end of the race, I was really pushing myself to keep up with a rather swift young man (who appeared to be around 12 or 13 years old). I'm pretty sure I some someone at the beginning of the race who couldn't have been older than 7. It's awesome to see kids running these.&lt;/li&gt;
&lt;li&gt;This race really was *crowded*. There's really only enough room on the trail to run single-file. I've been told on multiple occasions to start at the front of the race or risk getting bottle-necked as soon as we hit trails, and this is *very* true. Even though the race directors asked the faster people to start at the front and the slower to start at the back, it might be time to set more formal pace groups‚Äìespecially at a place like Stanky Creek, which is fairly treacherous during a solo run.&lt;/li&gt;
&lt;li&gt;Yesterday was perfect weather for running. It was clear, about 60¬∫F, and not at all like *winter*.&lt;/li&gt;
&lt;li&gt;My new shoes, the Salomon Speedcross 3, are pretty awesome on soft ground. They still feel like *new shoes*, so I'm ready to break them in, but once they're a bit better worn, I think I'll really like them for trail running.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So that's race two. Next up is the 8K (also at Stanky) and then the 10K (at Shelby Farms).&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/wors-5k-stanky-creek/</guid><pubDate>Mon, 27 Jan 2014 14:45:36 +0000</pubDate></item><item><title>WORS 3k in the bag</title><link>https://bradmontgomery.net/blog/wors-3k-bag/</link><description>
&lt;p&gt;Today, I completed my second-ever &lt;em&gt;organized race&lt;/em&gt;. It was the
Winter Off Road Race Series 3k in Overton
Park. The weather was pretty &lt;em&gt;amazing&lt;/em&gt; (34¬∫F and raining), but I dressed
for it and had a great time.&lt;/p&gt;
&lt;p&gt;Being only my second race, there's a few things that I thought were interesting
about this particular race.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Lots of kids! I was somewhat amazed at the number of kids that ran this race;
many of them probably around 10-12 years old.&lt;/li&gt;
&lt;li&gt;A surprising number of people under-dress for cold weather. There are always
the &lt;em&gt;tough&lt;/em&gt; people who run in freezing weather wearing shorts and short
sleves, but I also saw a number of people who were probably wearing nothing
more than tights and a light jacket. I heard lots of people complaining
about the cold. Maybe I overdid it with &lt;em&gt;longjohns&lt;/em&gt; and extra layers, but
I felt quite toasty warm.&lt;/li&gt;
&lt;li&gt;The were a &lt;em&gt;lot&lt;/em&gt; of people at this race. I don't have an exact count, but
there's definitely a thriving community of runners in the Memphis area. It's
pretty awesome to be a part of it.&lt;/li&gt;
&lt;li&gt;A 3k (~1.8miles) is a really short race. My typical run is usually about
3 miles, so this went by really quickly. It &lt;em&gt;did&lt;/em&gt; give me a chance to turn
up the speed a little, which is something I rarely do.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I had a really good time running this race, and I'm looking forward to the next
in the series: A 5k at Stanky Creek.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/wors-3k-bag/</guid><pubDate>Sun, 05 Jan 2014 22:08:33 +0000</pubDate></item><item><title>Looking Back. Looking Forward.</title><link>https://bradmontgomery.net/blog/looking-back-looking-forward/</link><description>
&lt;p&gt;I don't often write one of those &lt;em&gt;year-end summary&lt;/em&gt; blog posts, but 2013 was
so incredible on so many levels, I thought I'd break with (a lack of) tradition
and start something new before the year's completion.&lt;/p&gt;
&lt;h2&gt;Failures&lt;/h2&gt;
&lt;p&gt;I actually grew up in a culture that seeks to limit or eliminate failure. In
other words, &lt;em&gt;failure is bad&lt;/em&gt;. Avoid at all costs. I still struggle with this
mindset, even though I know it's absolutely wrong.&lt;/p&gt;
&lt;p&gt;Therefore, one of my new resolutions is to more vocally celebrate my failures,
as well as the things that I learn from them. So without further ado, here are
a couple of my major failures from 2013:&lt;/p&gt;
&lt;h3&gt;Work for Pie.&lt;/h3&gt;
&lt;p&gt;It was really around late June or early July when we realized the end had come.
It's still painful to know that my first startup never got anywhere near where
we wanted it to go. Even though I know the lessons I've learned will stay with
me forever. I've learned so much about building a business, the challenges of a
real startup, the importance of working on &lt;em&gt;things that matter&lt;/em&gt;, and the
challenges of not just technical recruiting, but job search in general
(all of which will hopefully be the subject of future writing!).&lt;/p&gt;
&lt;p&gt;Overall, I really believe that I'm a better developer, product designer,
entrepreneur, and an all-around better person due to my time building Work for
Pie. I'm happy that Cliff and I had a
chance to give this a shot.&lt;/p&gt;
&lt;h3&gt;The St. Jude Marathon&lt;/h3&gt;
&lt;p&gt;My &lt;em&gt;one&lt;/em&gt; fitness goal for 2013 was to run a
marathon. Unfortunately the race was cancelled this year due to weather, but
I was nowhere near ready to run a full marathon. Between a summer-long battle
with plantar fasciitis and multiple rounds of something flu-like during the
fall, I just wasn't able to put in the miles. What I learned: You can't always
push yourself as hard you might want. Sometimes, you &lt;em&gt;do&lt;/em&gt; need to take a break
and rest.&lt;/p&gt;
&lt;h3&gt;Photography&lt;/h3&gt;
&lt;p&gt;This is one of my hobbies, but for most of 2013, I put
this aside for one reason or another. Yes, I did get some great holiday shots
of my family, but I don't feel that I've learned anything new. Here's to
stretching myself in 2014. What I learned: It's important to plan ahead. If I
don't stop and plan a shoot, life will just pass me by.&lt;/p&gt;
&lt;h3&gt;MEMpy&lt;/h3&gt;
&lt;p&gt;While I'm extremely happy to have seen
the Memphis python user group live to see it's second full year of meetings,
one of my goals for 2013 was to pull together a few events to introduce python
to hobbyists and people that might have no experience with any programming
language. Unfortunately, this just didn't happen. What I learned: There are a
lot of other people who would be interested in helping with this. I need to
&lt;em&gt;just do it&lt;/em&gt;, nudging my friends to help along the way.&lt;/p&gt;
&lt;h2&gt;Accomplishments&lt;/h2&gt;
&lt;p&gt;Now, as I look back, I realize that there are actually a lot of things that
I've accomplished (professionally) this year. So, in no particular order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I Presented at PyOhio:
My Adventures with Mock.&lt;/li&gt;
&lt;li&gt;I'm pretty happy about my Julython
efforts, which included a 30-day streak of open source contributions.&lt;/li&gt;
&lt;li&gt;MEMpy saw it's 2nd birthday (even tho I forgot to bring the cake!)&lt;/li&gt;
&lt;li&gt;I helped (albeit in a very small way) organize PyTennessee.&lt;/li&gt;
&lt;li&gt;I had an awesome opportunity to be a Thinkful Mentor (hi Carl!)&lt;/li&gt;
&lt;li&gt;I've released a few minor Open Source django apps.&lt;/li&gt;
&lt;li&gt;I participated in the very first HACKMemphis&lt;/li&gt;
&lt;li&gt;I've done quite a bit of reading (or audio-book
listening). In fact, I considered listing the books I've read, but apparently
amazon doesn't make it easy to list the things you read this year :(&lt;/li&gt;
&lt;li&gt;I learned a little bit of Lua playing with L√ñVE.&lt;/li&gt;
&lt;li&gt;I've started an amazing new journey with Dishcrawl.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Looking forward&lt;/h2&gt;
&lt;p&gt;I'm not good at setting goals. Especially &lt;em&gt;big&lt;/em&gt; goals. That's perhaps something
I should strive to improve upon. I know you should set &lt;em&gt;specific&lt;/em&gt; goals, but
at the moment, these are the things I'd like to accomplish in my professional
life in 2014.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Become a better PostgreSQL user. It's been
my database of choice for a long time, but there's so many great things
happening in this community, and I feel like I'm not really using this tool
to its full potential.&lt;/li&gt;
&lt;li&gt;Learn how to use a Graph Database (I'm looking at you Neo4j)&lt;/li&gt;
&lt;li&gt;Build something usable with Lua (I've started digging in, now it's time to
make something).&lt;/li&gt;
&lt;li&gt;Be a better open source citizen; this means submit fixes to things I use,
and merge those PRs to my own projects in a timely manner!&lt;/li&gt;
&lt;li&gt;Be more disciplined when it comes to testing.&lt;/li&gt;
&lt;li&gt;Do something interesting with Arduino.&lt;/li&gt;
&lt;li&gt;Write more. Share more.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now, personally (an more importantly), there are a few things I plan to do
better in the next year:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be a better husband. My poor wife has put up with a lot this year. I am
all-too-often a grumpy/stressed/short-tempered developer. I will strive to
chill more often.&lt;/li&gt;
&lt;li&gt;Shoot more interesting photos... and teach my daughter (who's interested
in photography) how to shoot.&lt;/li&gt;
&lt;li&gt;We acquired a set of Snap Circuits this year. I
want to see my kids build every single project.&lt;/li&gt;
&lt;li&gt;Finally start investing. A number of the the books I read in 2013 dealt with
financial education. I feel like I've learned quite a bit, and now it's time
to put that into practice.&lt;/li&gt;
&lt;li&gt;Run that marathon&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So there it is, all out in the open.&lt;/p&gt;
&lt;p&gt;Ok, 2014, let's do this.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/looking-back-looking-forward/</guid><pubDate>Tue, 31 Dec 2013 19:44:34 +0000</pubDate></item><item><title>The little things</title><link>https://bradmontgomery.net/blog/little-things/</link><description>
&lt;p&gt;I ran across an interesting line of code today, and thought I'd share some
insights. First, though we need a little context. Imagine reading several lines
of data from a csv file (using
&lt;a href="http://docs.python.org/2/library/csv.html"&gt;python's built-in
&lt;code&gt;csv&lt;/code&gt; module&lt;/a&gt;). You'll typically have some code that looks
something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import csv
with open('data.csv', 'rb') as csvfile:
    reader = csv.reader(csvfile)
    for row in reader:
        # Do some stuff with each row,
        # where the row is a list of strings.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, that's what we've got, and within the &lt;code&gt;for&lt;/code&gt; loop, I found
this code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;row = map(lambda x: x.strip(), row)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What does it do? It simply strips whitespace from the beginng and ending of
each item in our list of strings. But &lt;em&gt;how&lt;/em&gt; it accomplishes this is worth
picking apart.&lt;/p&gt;
&lt;p&gt;First, this code uses &lt;code&gt;map&lt;/code&gt; to apply a function to each item in
the list. Then, we construct an anonymous &lt;code&gt;lambda&lt;/code&gt; function which
accepts a parameter, calls the input's &lt;code&gt;strip&lt;/code&gt; method and returns
the result.&lt;/p&gt;
&lt;p&gt;Essentially, we call a function for each item in the list. Keep in mind,
we're also doing this inside a &lt;code&gt;for&lt;/code&gt; loop. That's a function call
for each cell in your CSV file.&lt;/p&gt;
&lt;p&gt;We can also achieve the same outcome with a list comprehension:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;row = [x.strip() for x in row]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OR with a generator! (note the parenthesis instead of square brackets)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;row = (x.strip() for x in row)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Measure it&lt;/h2&gt;
&lt;p&gt;Out of curiosity, I decided to time this with just a few rows of data
(10, in particular). I used &lt;code&gt;timeit&lt;/code&gt; to run this code on my
laptop (a late-2011 macbook air) with some simple data. Here's what I found:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import timeit
&amp;gt;&amp;gt;&amp;gt; timeit.timeit(
...    stmt=&amp;quot;map(lambda x: x.strip(), row)&amp;quot;,
...    setup=&amp;quot;row = [' {0} '.format(i) for i in range(10)]&amp;quot;
... )
2.491640090942383

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With 1,000,000 rows of data (the default number of test iterations, and
an admittedly unlikely scenario for a one-off CSV import) this code runs in
about two and a half seconds.&lt;/p&gt;
&lt;p&gt;Now lets see how the list comprehension and generator versions for the
same code stack up!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; timeit.timeit(
...    stmt=&amp;quot;[x.strip() for x in row]&amp;quot;,
...    setup=&amp;quot;row = [' {0} '.format(i) for i in range(10)]&amp;quot;
... )
1.6442670822143555

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quite a bit better! &lt;em&gt;Nearly&lt;/em&gt; a second faster. Let's see about
the generator:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; timeit.timeit(
...    stmt=&amp;quot;(x.strip() for x in row)&amp;quot;,
...    setup=&amp;quot;row = [' {0} '.format(i) for i in range(10)]&amp;quot;
... )
0.48253297805786133

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yep. About two whole seconds faster than our original code.&lt;/p&gt;
&lt;p&gt;So what's the take-away, here? Well,
&lt;a href="http://www.python.org/dev/peps/pep-0289/"&gt;generator expressions&lt;/a&gt;
are pretty amazing. &lt;strong&gt;Use them&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Finally, small things add up. Little decisions, like whether to use
&lt;code&gt;map&lt;/code&gt; + &lt;code&gt;lambda&lt;/code&gt; or a generator expression can have
fairly significant impact on the performance of your software.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/little-things/</guid><pubDate>Sun, 29 Dec 2013 18:50:15 +0000</pubDate></item><item><title>problems with django_extension's graph_models?</title><link>https://bradmontgomery.net/blog/problems-django_extensions-graph_models/</link><description>
&lt;p&gt;I recently ran into an issue when trying to generate an image of my project's models using &lt;a href="https://github.com/django-extensions/django-extensions"&gt;&lt;code&gt;django_extension&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;graph_models&lt;/code&gt; command. Unfortunately, googling for the error didn't turn up any solutions, so I'm dumping some info here (just in case!).&lt;/p&gt;
&lt;h2&gt;some background&lt;/h2&gt;
&lt;p&gt;For the record, I was using django_extensions, version 1.2.5 (the latest release as of this post), and Django 1.4.2 (yeah... it's old)&lt;/p&gt;
&lt;p&gt;Running the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./manage.py graph_models my_app &amp;gt; my_models.dot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Gave me the following error&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Traceback (most recent call last):
  File &amp;quot;./manage.py&amp;quot;, line 10, in 
 execute\_from\_command\_line(sys.argv)
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django/core/management/\_\_init\_\_.py&amp;quot;, line 443, in execute\_from\_command\_line
 utility.execute()
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django/core/management/\_\_init\_\_.py&amp;quot;, line 382, in execute
 self.fetch\_command(subcommand).run\_from\_argv(self.argv)
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django/core/management/base.py&amp;quot;, line 196, in run\_from\_argv
 self.execute(\*args, \*\*options.\_\_dict\_\_)
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django/core/management/base.py&amp;quot;, line 232, in execute
 output = self.handle(\*args, \*\*options)
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django\_extensions/management/commands/graph\_models.py&amp;quot;, line 72, in handle
 dotdata = generate\_dot(args, cli\_options=cli\_options, \*\*options)
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django\_extensions/management/modelviz.py&amp;quot;, line 168, in generate\_dot
 if field == pk:
 File &amp;quot;/home/vagrant/.virtualenvs/my\_app/local/lib/python2.7/site-packages/django/db/models/fields/\_\_init\_\_.py&amp;quot;, line 128, in \_\_cmp\_\_
 return cmp(self.creation\_counter, other.creation\_counter)
AttributeError: 'NoneType' object has no attribute 'creation\_counter'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;The problem?&lt;/h2&gt;
&lt;p&gt;I'm not entirely sure, but &lt;a href="https://github.com/django-extensions/django-extensions/issues/402"&gt;it seems related to this issue&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;The solution&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Rather, the solution that worked for me&lt;/em&gt; (YMMV): Uninstall your current version:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip uninstall django-extensions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then install the current development version from github:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install -e git+https://github.com/django-extensions/django-extensions.git#egg=django_extensions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hope that helps someone else!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/problems-django_extensions-graph_models/</guid><pubDate>Fri, 15 Nov 2013 20:14:01 +0000</pubDate></item><item><title>Getting the Most out of ack</title><link>https://bradmontgomery.net/blog/getting-most-out-ack/</link><description>
&lt;p&gt;&lt;code&gt;ack&lt;/code&gt; is an amazing tool. If you're not familiar with it,
it's a lot like grep (the official site is at &lt;a href="http://beyondgrep.com/"&gt;beyondgrep.com&lt;/a&gt;).
It's a command-line tool that helps you find things in files, particularly source code.
However, like a lot of command-line tools, it's all-too-easy to learn just the
basics and forget that many of these tools can do so much more!&lt;/p&gt;
&lt;p&gt;Without further ado, here are a few of the ways I frequently use &lt;code&gt;ack&lt;/code&gt; while working with Django.&lt;/p&gt;
&lt;h2&gt;Ignoring folders&lt;/h2&gt;
&lt;p&gt;It's so frustrating to search for a snippet of python code, only to have your
screen fill up with irrelevant results (I'm looking at you migrations and css files!)&lt;/p&gt;
&lt;p&gt;When this happens, just ignore the stuff you don't need:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --ignore-dir=myapp/migrations
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Ingoring files&lt;/h2&gt;
&lt;p&gt;While we're at it, you can also ignore specific files, or any file that matches
a regex. Perhaps you're looking for reference to a Django model, but you don't need
to know that it's in models.py, so just ignore that file!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --ignore-file=match:models.py SomeModel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Better, but you might also want to ignore that model.js file (or perhaps it's
called model_views.js). You can do that with a simple regex! And while we're at it,
lets go ahead and ignore any migrations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --ignore-file=match:/^model/ --ignore-dir=migrations/ SomeModel
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Just Python, please&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;ack&lt;/code&gt; also lets you restrict searches to specific file types:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --type=python SomeModel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There's also a shortcut for this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --python SomeModel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or ruby if you prefer:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --ruby 'def foo'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Similarly, you can tell ack to ignore any files that it doesn't understand with
the &lt;code&gt;-k&lt;/code&gt; or &lt;code&gt;--known-types&lt;/code&gt; flag.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack -k SomeCode
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To get a list of all the filetypes that &lt;code&gt;ack&lt;/code&gt; knows about, just run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --help-types
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Be insensitive!&lt;/h2&gt;
&lt;p&gt;For some reason, I sometimes forget that default searches are case sensitive.
If, like me, you're pronE tO TYpos, you can perform case insensitive searches with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack -i whatever
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Digging deeper&lt;/h2&gt;
&lt;p&gt;As you might have noticed, &lt;code&gt;ack&lt;/code&gt; comes with some default behavior.
You can inspect these defaults with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --dump
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, if you want to start customizing this behavior, create an &lt;code&gt;.ackrc&lt;/code&gt; file,
and tweak it to your heart's content. A good way to get started is to let ack generate
this file for you! (&lt;strong&gt;careful!&lt;/strong&gt; this command will overwrite your
&lt;code&gt;.ackrc&lt;/code&gt; file if you already have one.)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --create-ackrc &amp;gt; ~/.ackrc
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Have some fun&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;ack&lt;/code&gt; developers are not without a sense of humor. Certainly
you should take the time to investigate all of the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ack --bar
ack --cathy
ack --thpppt
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;There's &lt;em&gt;so much more&lt;/em&gt; to &lt;code&gt;ack&lt;/code&gt; than what I've listed here.
Do yourself a favor and periodically skim the output of &lt;code&gt;ack --help&lt;/code&gt;,
then take some time to look through the manpage (&lt;code&gt;man ack&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;Happing searching!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/getting-most-out-ack/</guid><pubDate>Sat, 12 Oct 2013 04:29:57 +0000</pubDate></item><item><title>An Attribute by any other name...</title><link>https://bradmontgomery.net/blog/attribute-any-other-name/</link><description>
&lt;p&gt;Let's explore some python attributes, shall we? (note: this is python 2.7.x)&lt;/p&gt;
&lt;h2&gt;Attributes&lt;/h2&gt;
&lt;p&gt;Let's consider a simple class, &lt;code&gt;N&lt;/code&gt;, with a single attribute,
&lt;code&gt;numbers&lt;/code&gt; containing values 0 - 9.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class N(object):
    numbers = range(10)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can create an instance of this class, then perform some operations on
the attribute (like accessing or setting its values).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n = N()

&amp;gt;&amp;gt;&amp;gt; n.numbers  # get the value of the attribute
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

&amp;gt;&amp;gt;&amp;gt; n.numbers = range(10, 20)  # Change the value of the attribute
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Simple enough, right? This is usually what you expect with attributes on
a python class. Just for the sake of completeness, let's look at another way
to create an attribute on a class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class N(object):
    def __init__(self, *args, **kwargs):
        self.numbers = range(10)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is analagous to our first example. The &lt;code&gt;__init__&lt;/code&gt; method is
called when we instantiate (or create an object from) the &lt;code&gt;N&lt;/code&gt;
class. We can still access and change the &lt;code&gt;numbers&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;In either case, you can list the attributes of the &lt;code&gt;n&lt;/code&gt; object,
and you should see a list containing &lt;code&gt;'numbers'&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dir(n)
['__class__', '__delattr__', '__dict__', ..., 'numbers']
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Properties&lt;/h2&gt;
&lt;p&gt;In the examples above, the &lt;code&gt;numbers&lt;/code&gt; attribute is simply a
variable referencing some value. Python also allows you to create a
&lt;em&gt;property&lt;/em&gt; (&lt;a href="http://goo.gl/iP3o6"&gt;one of python's built-in
functions&lt;/a&gt;). It's essentially a method that behaves as if it were an
attribute. Think of it as an attribute who's value is &lt;em&gt;calculated&lt;/em&gt; every
time it's accessed.&lt;/p&gt;
&lt;p&gt;What if we wanted an &lt;code&gt;even_numbers&lt;/code&gt; attribute?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class N(object):
    numbers = range(10)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

    @property
    def even_numbers(self):
        return [num for num in self.numbers if num % 2 == 0]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The &lt;code&gt;@property&lt;/code&gt; decorator converts our &lt;code&gt;even_numbers&lt;/code&gt;
method into a property. We can now access it like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n = N()
&amp;gt;&amp;gt;&amp;gt; n.numbers  # get the value of the attribute
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

&amp;gt;&amp;gt;&amp;gt; n.even_numbers
[0, 2, 4, 6, 8]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty cool! But what happens when we try to set the value of
&lt;code&gt;even_numbers&lt;/code&gt;?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n.even_numbers = range(10, 20)
---------------------------------------------------------------------------
Traceback (most recent call last)
----&amp;gt; 1 n.even_numbers = range(10, 20)

AttributeError: can't set attribute

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We've got to define a property's &lt;code&gt;setter&lt;/code&gt; if we want to do this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class N(object):
    numbers = range(10)

    @property
    def even_numbers(self):
        return [num for num in self.numbers if num % 2 == 0]

    @even_numbers.setter
    def even_numbers(self, values):
        # Just assign the input values to the ``numbers`` attribute.
        # You *could* do something more interesting here if you wanted.
        self.numbers = values

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can now set the value of our &lt;code&gt;even_numbers&lt;/code&gt; property.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n.even_numbers = range(10, 20)

&amp;gt;&amp;gt;&amp;gt; n.even_numbers
[10, 12, 14, 16, 18]

&amp;gt;&amp;gt;&amp;gt; n.numbers
[10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can read more about properties at Official Python Doc's section on
&lt;a href="http://docs.python.org/2/library/functions.html#property"&gt;built-in functions&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;__getattr__&lt;/h2&gt;
&lt;p&gt;Python has a number of &lt;em&gt;magic methods&lt;/em&gt; (aka &lt;em&gt;dunder methods&lt;/em&gt;), and
&lt;code&gt;__getattr__&lt;/code&gt; is one that defines the behavior of accessing
&lt;em&gt;non-existing&lt;/em&gt; attributes.&lt;/p&gt;
&lt;p&gt;Yes, you can access attributes that &lt;em&gt;don't exist&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;If you're interested in more about python's magic methods, see the excellent
&lt;a href="http://www.rafekettler.com/magicmethods.html#access"&gt;A Guide to
Python's Magic Methods&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's implement an &lt;code&gt;odd_numbers&lt;/code&gt; attribute using
&lt;code&gt;__getattr__&lt;/code&gt;. (This is probably a bad idea, but it illustrates the
point).&lt;/p&gt;
&lt;p&gt;Add the following method to our &lt;code&gt;N&lt;/code&gt; class:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    def __getattr__(self, name):
        if name == &amp;quot;odd_numbers&amp;quot;:
            return [num for num in self.numbers if num % 2 != 0]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let's try it out:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n = N()

&amp;gt;&amp;gt;&amp;gt; n.numbers
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

&amp;gt;&amp;gt;&amp;gt; n.even_numbers
[0, 2, 4, 6, 8]

&amp;gt;&amp;gt;&amp;gt; n.odd_numbers
[1, 3, 5, 7, 9]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pretty cool! However, there are a couple of caveats.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; dir(n)
['__class__', '__delattr__', ..., 'even_numbers', 'numbers']
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice anything missing? That's right. There's no &lt;code&gt;'odd_numbers'&lt;/code&gt;
attribute available. So much for &lt;em&gt;self-documenting code&lt;/em&gt;!&lt;/p&gt;
&lt;p&gt;What about this?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n.whoopsies

&amp;gt;&amp;gt;&amp;gt; type(n.whoopsies)
NoneType

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Aren't we supposed to get an &lt;code&gt;AttributeError&lt;/code&gt; if we access
an attribute that doesn't exist!? Yes. We are.&lt;/p&gt;
&lt;p&gt;Be careful implementing your own &lt;code&gt;__getattr__&lt;/code&gt; method. Make sure
it does what you want, but be sure to raise an appropriate exception if you
don't want non-existing attributes to silently return &lt;code&gt;None&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Here's an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    def __getattr__(self, name):
        if name == &amp;quot;odd_numbers&amp;quot;:
            return [num for num in self.numbers if num % 2 != 0]

        # Raise an AttributeError, for all other attribute names.
        raise AttributeError(&amp;quot;'N' object has no attribute '{0}'&amp;quot;.format(name))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, now we'd get:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n.whoopsies
---------------------------------------------------------------------------
Traceback (most recent call last)
AttributeError: 'N' object has no attribute 'asdf'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, you might also be thinking, &amp;quot;how would I assign a value to &lt;code&gt;odd_numbers&lt;/code&gt;?&amp;quot;
Well, there &lt;em&gt;is&lt;/em&gt; a &lt;code&gt;__setattr__&lt;/code&gt; method, but be careful!
&lt;strong&gt;Here be dragons&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;Unless you already know what you're doing and you have a good reason, it's
probably not a good idea to start changing the behavior of &lt;code&gt;__setattr__&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you really need to customize the behavior of assignment, you probably want
to use a &lt;em&gt;descriptor&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Descriptors&lt;/h2&gt;
&lt;p&gt;A descriptor is a class that defines behavior for getting and setting an
attribute.&lt;/p&gt;
&lt;p&gt;Let's keep building on our &lt;code&gt;N&lt;/code&gt; class. What if we only wanted to
access numbers that were primes? What if we wanted to be able to easily
store prime numbers in the &lt;code&gt;numbers&lt;/code&gt; attribute?&lt;/p&gt;
&lt;p&gt;First of all, lets write a little function to determine if a number is prime.
This is not the most efficient way to do it, but it's simple and concise:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def is_prime(number):
    &amp;quot;&amp;quot;&amp;quot;Determine if a number is prime. Shamelessly adapted from:
    http://stackoverflow.com/a/4117879/182778

    Returns True or False
    &amp;quot;&amp;quot;&amp;quot;
    return number &amp;gt; 1 and all(number % i for i in xrange(2, number))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, create a class called &lt;code&gt;PrimeNumbers&lt;/code&gt;. An instance of this
class will eventually be attached to our &lt;code&gt;N&lt;/code&gt; class.
We add a &lt;code&gt;__get__&lt;/code&gt; method that defines the behavior we want when
we access a value, and we define a &lt;code&gt;__set__&lt;/code&gt; method that defines
the behavior we want when we set a value.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class PrimeNumbers(object):
    &amp;quot;&amp;quot;&amp;quot;This class implements a descriptor (ie. a property or attribute) that
    will only store Prime Numbers. The class on which it is attached must have
    a ``numbers`` attribute.&amp;quot;&amp;quot;&amp;quot;

    def filter_primes(self, numbers):
        &amp;quot;&amp;quot;&amp;quot;Use the ``is_prime`` function to pluck only primes from a list of
        numbers.&amp;quot;&amp;quot;&amp;quot;
        return filter(is_prime, numbers)

    def __get__(self, instance, owner):
        &amp;quot;&amp;quot;&amp;quot;Get only the prime numbers from the ``numbers`` attribute on the
        ``instance`` object (an N object).

        Note:
            * ``instance`` will be an instance of our N class.
            * ``owner`` will be a reference to the N class (not an instance
              of it)

        &amp;quot;&amp;quot;&amp;quot;
        return self.filter_primes(instance.numbers)

    def __set__(self, instance, values):
        &amp;quot;&amp;quot;&amp;quot;Set the value of ``instance.numbers``, but *only* store primes.
        ``values`` is just a list of numbers.
        &amp;quot;&amp;quot;&amp;quot;
        instance.numbers = self.filter_primes(values)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, we need to update our &lt;code&gt;N&lt;/code&gt; class so it contains a
&lt;code&gt;prime_numbers&lt;/code&gt; attribute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class N(object):
    numbers = range(10)  # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    prime_numbers = PrimeNumbers()

    # ... 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, lets play around with this.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n = N()

&amp;gt;&amp;gt;&amp;gt; n.numbers
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

&amp;gt;&amp;gt;&amp;gt; n.prime_numbers
[2, 3, 5, 7]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Great! Our &lt;code&gt;PrimeNumbers.__get__&lt;/code&gt; method removes all non-prime
numbers from the list. Let's try setting some values:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n.prime_numbers = range(0,30)

&amp;gt;&amp;gt;&amp;gt; n.prime_numbers
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29]

&amp;gt;&amp;gt;&amp;gt; n.numbers
[2, 3, 5, 7, 11, 13, 17, 19, 23, 29]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interesting! Our &lt;code&gt;PrimeNumbers.__set__&lt;/code&gt; also removes all non-prime
numbers before storing the result in &lt;code&gt;n.numbers&lt;/code&gt;!&lt;/p&gt;
&lt;p&gt;Note that our &lt;code&gt;even_numbers&lt;/code&gt; method still works as expected:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; n.even_numbers
[2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Descriptors are powerful, and give you the tools to build re-usable properties
for your classes. For even more on Descriptors, see the
&lt;a href="http://docs.python.org/2/howto/descriptor.html"&gt;Descriptor HowTo Guide&lt;/a&gt;
and the excellent &lt;a href="http://nbviewer.ipython.org/urls/gist.github.com/ChrisBeaumont/5758381/raw/descriptor_writeup.ipynb"&gt;Python Descriptors Demystified&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;Well, that's it for now. I hope you've enjoyed this short tour of python
&lt;em&gt;attributes&lt;/em&gt;. If you want to see all the code at once, you can grab the
full example from &lt;a href="https://gist.github.com/bradmontgomery/6432860"&gt;https://gist.github.com/bradmontgomery/6432860&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/attribute-any-other-name/</guid><pubDate>Thu, 12 Sep 2013 04:24:13 +0000</pubDate></item><item><title>Metrics with Django and Redis</title><link>https://bradmontgomery.net/blog/metrics-django-and-redis/</link><description>
&lt;p&gt;So, you've got a shiny new Django-powered site, and now you'd like to start
recording metrics. Perhaps you've read &lt;a href="http://theleanstartup.com/"&gt;The
Lean Startup&lt;/a&gt;, and you know you've got to know how people are using your
site in order to know what to improve. Perhaps you're just a data nerd and you
like to count things. Either way, there are ton's of ways to measure things
on your site.&lt;/p&gt;
&lt;p&gt;You could use third-party applications like &lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt; or &lt;a href="https://mixpanel.com/"&gt;Mixpanel&lt;/a&gt; to see how
people interact with your site. Then there are services like &lt;a href="https://newrelic.com/"&gt;New Relic&lt;/a&gt; that give you amazing insights as to where your application is slow
or too memory hungry. All of these services are really good, and if you're building
a startup, you should be using them.&lt;/p&gt;
&lt;p&gt;But sometimes, you need a little more flexibility when &lt;em&gt;counting things&lt;/em&gt;.
That's the motivation behind &lt;a href="https://github.com/bradmontgomery/django-redis-metrics"&gt;&lt;code&gt;django-redis-metrics&lt;/code&gt;&lt;/a&gt;. It's a simple, lightweight Django app that
lets you easily record metrics in your Django apps.&lt;/p&gt;
&lt;p&gt;I use it on &lt;a href="https://workforpie.com"&gt;Work for Pie&lt;/a&gt; to measure
things such as:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User growth&lt;/li&gt;
&lt;li&gt;External API usage (e.g. how hard we're hitting the GitHub or StackOverflow APIs)&lt;/li&gt;
&lt;li&gt;User interaction (e.g. how frequently somone
&lt;a href="https://workforpie.com/companies/gallery/"&gt;follows a company&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once installed, it's fairly simple to start recording metrics. You can call
out to the &lt;code&gt;metric&lt;/code&gt; function anywhere in your code, and that will
increment a counter every time the function is called.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from redis_metrics import metric

metric(&amp;quot;thing-i-want-to-measure&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All data is stored in &lt;a href="http://redis.io/"&gt;Redis&lt;/a&gt; (which is a great
data store for this kind of thing). and there are very
few dependencies. &lt;code&gt;django-redis-metrics&lt;/code&gt; aims to be a fairly
minimalistic, and very simple to use out of the box.&lt;/p&gt;
&lt;p&gt;If you need a simple way to measure arbitrary events in a Django app, please
give it a look.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/metrics-django-and-redis/</guid><pubDate>Sun, 19 May 2013 02:38:29 +0000</pubDate></item><item><title>String Theory</title><link>https://bradmontgomery.net/blog/string-theory/</link><description>
&lt;p&gt;I'm not a physicist, but I've got some views on &lt;em&gt;string theory&lt;/em&gt;
that I'd like to share. Here goes:&lt;/p&gt;
&lt;p&gt;Brad's String Theory: Axiom I
While in motion, strings will become untied, regardless of advanced
techniques employed to fasten them.
Brad's String Theory: Axiom II
When at rest (i.e. upon completion of aforementioned motion), strings
will be resistant to any attempt at unfastening.&lt;/p&gt;
&lt;p&gt;These statements are, to best of my knowledge, universally true, based on
my experiences during daily runs for the past few years.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/string-theory/</guid><pubDate>Thu, 09 May 2013 16:02:35 +0000</pubDate></item><item><title>Django Manager Testing Woes</title><link>https://bradmontgomery.net/blog/django-manager-testing-woes/</link><description>
&lt;p&gt;I've recently run into some strange behavior while testing some
custom Django managers. While, I can't list all of the exact code (it's not
open source), I'll try to list some simple examples that illustrate the problem
so (hopefully), this post will be helpful for others.&lt;/p&gt;
&lt;p&gt;To get started, assume I have the following Model and Manager:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class DefaultThingManager(models.Manager):
    def things():
        # A custom method that retrieves some set of DefaultThing
        # objects. This doesn't override any Manager methods.

class DefaultThing(Model):
    # Some fields.

    objects = DefaultThingManager()

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've also got some other Manager and Model. Note that this model inherits from
&lt;code&gt;DefaultThingManager&lt;/code&gt; (there's some other behavior we want from that class).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class OtherThingManager(DefaultThingManager):
    def things():
        # Overridden to work with the OtherThing class.

class OtherThing(Model):
    # Some fields.

    objects = OtherThingManager()

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, that's really the gist of the models and managers. The managers don't
really do anything unusual, but I wanted to write unit tests for them, so
I created a test case that looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# defined in tests/defaultthingmanager.py

class TestDefaultThingManager(TestCase):

    def setUp(self):
        # This is my attempt to Fake a Model.
        class M(Model):
            objects = DefaultThingManager()
        self.M = M
        self.assertIsInstance(self.M.objects, DefaultThingManager)

    def test_things(self):
        # Heavily uses Mock to test stuff... eg, to test that the method
        # filtered something correctly, I do stuff like this:
        _f = self.M.objects.filter
        self.M.objects.filter = Mock()

        self.M.objects.things()
        self.M.objects.filter.assert_has_calls([
            # check for stuff here...
        ])
        self.M.objects.filter = _f

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, to test the &lt;code&gt;OtherThingManager&lt;/code&gt;, I created a similar test case&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# defined in tests/otherthingmanager.py

class TestOtherThingManager(TestCase):

    def setUp(self):
        class M(Model):
            objects = OtherThingManager()
        self.M = M
        self.assertIsInstance(self.M.objects, OtherThingManager)

    def test_things(self):
        # Similar to above

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is where things get a little confusing. While writing these test cases,
I'd run tests restricting them to the test case or the individual test, like
so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python manage.py test myapp.TestOtherThingManager
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python manage.py test myapp.TestOtherThingManager.test_things
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Doing this, all worked as expected. However, when I ran the full test suite
for an app, my &lt;code&gt;TestOtherThingManager&lt;/code&gt; case would start failing. For some
reason, the fake class's manager was an instance of &lt;code&gt;DefaultThingManager&lt;/code&gt;
instead of &lt;code&gt;TestOtherThingManager&lt;/code&gt;!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;======================================================================
ERROR: test_things (myapp.tests.otherthingmanager.TestOtherThingManager)
----------------------------------------------------------------------
Traceback (most recent call last):
  File &amp;quot;/Users/brad/django/myproject/myapp/tests/managers/otherthingmanager.py&amp;quot;, line 25, in setUp
    self.assertIsInstance(self.M.objects, OtherThingManager)
AssertionError: &amp;lt;myapp.models.DefaultThingManager object at 0x10ae80ed0&amp;gt; is not an instance of &amp;lt;class 'myapp.models.OtherThingManager'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now this &lt;em&gt;really&lt;/em&gt; made me scratch my head (as well as mutter a few choice words
under my breath). I still don't know why this happened, but here's how I
fixed it.&lt;/p&gt;
&lt;p&gt;Remember that fake Model class in &lt;code&gt;setUp&lt;/code&gt;? It's now named something different
in each TestCase.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# tests/otherthingmanager.py

class TestOtherThingManager(TestCase):

    def setUp(self):
        class O(Model):  # O for &amp;quot;Other&amp;quot; instead of &amp;quot;M&amp;quot; for Model
            objects = OtherThingManager()
        self.O = O
        self.assertIsInstance(self.O.objects, OtherThingManager)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that the fake Model class has a unique name, all tests pass when run
individually or during a full test suite.&lt;/p&gt;
&lt;p&gt;Unfortunately, I don't know whether or not I should blame Mock (it does magic
things at the module, level, right?) or if there's something going on behind
the scenes with Django's test suite that I don't understand. I'm happy my
tests run (100% coverage!), but I've still got a fairly significant uneasy
feeling about all of this.&lt;/p&gt;
&lt;p&gt;I'm certain that my method of faking a Model class in &lt;code&gt;setUp&lt;/code&gt; is probably
the real culprit, here, and I'd love to have someone &lt;em&gt;enlighten&lt;/em&gt; me!&lt;/p&gt;
&lt;p&gt;Thanks for reading this far!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; There's absolutely &lt;em&gt;no reason&lt;/em&gt; why you can't just instantiate an ModelManager by itself. For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# tests/otherthingmanager.py

class TestOtherThingManager(TestCase):

    def setUp(self):
        self.objects = OtherThingManager()  # This doesn't have to be attached to a Model
        self.assertIsInstance(self.objects, OtherThingManager)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lesson learned? Unless you absolutely need a model, don't make things harder than they need to be!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/django-manager-testing-woes/</guid><pubDate>Sun, 07 Apr 2013 21:19:19 +0000</pubDate></item><item><title>Python's zip, map, and lambda</title><link>https://bradmontgomery.net/blog/pythons-zip-map-and-lambda/</link><description>
&lt;p&gt;Many novice programmers (and even experienced programmers who are new to
python) often get confused when they first see &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;map&lt;/code&gt;, and
&lt;code&gt;lambda&lt;/code&gt;. This post will provide a simple scenario that (hopefully) clarifies
how these tools can be used.&lt;/p&gt;
&lt;p&gt;To start, assume that you've got two collections of values and you need to keep
the largest (or smallest) from each. These could be metrics from two different
systems, stock quotes from two different services, or just about anything. For
this example we'll just keep it generic.&lt;/p&gt;
&lt;p&gt;So, assume you've got &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;: two lists of integers. The goal is to
merge these into one list, keeping whichever value is the largest at each
index.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; a = [1, 2, 3, 4, 5]
&amp;gt;&amp;gt;&amp;gt; b = [2, 2, 9, 0, 9]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This really isn't difficult to do procedurally. You &lt;em&gt;could&lt;/em&gt; write a simple
function that compares each item from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;, then stores the largest
in a new list. It might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def pick_the_largest(a, b):
    result = []  # A list of the largest values

    # Assume both lists are the same length
    list_length = len(a)
    for i in range(list_length):
        result.append(max(a[i], b[i]))
    return result

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;While that's fairly straightforward and easy to read, there is a more concise,
more pythonic way to solve this problem.&lt;/p&gt;
&lt;h1&gt;zip&lt;/h1&gt;
&lt;p&gt;Lets first look at &lt;code&gt;zip&lt;/code&gt;. This function takes two equal-length collections,
and merges them together in pairs. If we use this on our list of values, we
get the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; zip(a, b)
[
    (1, 2),
    (2, 2),
    (3, 9),
    (4, 0),
    (5, 9)
]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You now have one list, but it contains pairs of items from &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;.
For more information, check out
&lt;a href="http://bit.ly/python-zip"&gt;zip in the python documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;lambda&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;lambda&lt;/code&gt; is just a shorthand to create an anonymous function. It's often used
to create a &lt;em&gt;one-off&lt;/em&gt; function (usually for scenarios when you need to pass
a function as a parameter into another function). It can take a parameter, and
it returns the value of an expression. For more information, see the Python
&lt;a href="http://bit.ly/python-lambdas"&gt;documentation on lambdas&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lambda &amp;lt;input&amp;gt;: &amp;lt;expression&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, assuming that you have a tuple (or a pair of values), you can create a
function that picks the larger of the pair:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lambda pair: max(pair)

&lt;/code&gt;&lt;/pre&gt;
&lt;h1&gt;map&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt; takes a function, and applies it to each item in an iterable (such as
a list). You can get a more complete definition of
&lt;a href="http://bit.ly/python-map"&gt;map from the python documentation&lt;/a&gt;, but it
essentially looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;map(some_function, some_iterable)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is where our &lt;code&gt;lambda&lt;/code&gt; expression comes in handy, and since &lt;code&gt;zip&lt;/code&gt;
returns an iterable, we can write a solution for our original problem as a
concise one-liner (which I'll break over 3 lines to make it readable). Try
reading this code from the bottom-up.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; map(  # apply the lambda to each item in the zipped list
        lambda pair: max(pair),  # pick the larger of the pair
        zip(a, b)  # create a list of tuples
    )
[2, 2, 9, 4, 9]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, putting it all together&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; a = [1, 2, 3, 4, 5]
&amp;gt;&amp;gt;&amp;gt; b = [2, 2, 9, 0, 9]
&amp;gt;&amp;gt;&amp;gt; map(lambda pair: max(pair), zip(a, b))
[2, 2, 9, 4, 9]

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Python's &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;lambda&lt;/code&gt;, and &lt;code&gt;zip&lt;/code&gt; are powerful and effective tools! I
hope this post has been informative. Thanks for reading :)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pythons-zip-map-and-lambda/</guid><pubDate>Mon, 01 Apr 2013 16:29:14 +0000</pubDate></item><item><title>How in the world do you Mock a name attribute?</title><link>https://bradmontgomery.net/blog/how-world-do-you-mock-name-attribute/</link><description>
&lt;p&gt;&lt;strong&gt;Or...&lt;/strong&gt;  My adventures with Mock. Part 1.&lt;/p&gt;
&lt;p&gt;I've been working a lot with
&lt;a href="http://www.voidspace.org.uk/python/mock/"&gt;Mock&lt;/a&gt;
lately (and by &lt;em&gt;lately&lt;/em&gt;, I meand for the last three months). Though it
takes a while to wrap your head around it, it's an amazing and powerful testing
tool.&lt;/p&gt;
&lt;p&gt;To get started, let's look at some of the neat things you can do with Mock.
Take this class, for example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Thing(object):
    shape = 'square'
    color = 'blue'

    def calculate(self):
        # ... do some stuff ...

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you were writing a test, and you wanted a Mocked &lt;code&gt;Thing&lt;/code&gt;, but
still wanted to ensure that your mock object had &lt;code&gt;shape&lt;/code&gt; and
&lt;code&gt;color&lt;/code&gt; attributes, you'd do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from mock import Mock
&amp;gt;&amp;gt;&amp;gt; thing = Mock(shape='square', color='blue')
&amp;gt;&amp;gt;&amp;gt; thing.shape
'square'
&amp;gt;&amp;gt;&amp;gt; thing.color
'blue'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cool! You get attributes whose values you can test against, and you still
have a mock object on which you can call methods:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from mock import Mock
&amp;gt;&amp;gt;&amp;gt; thing.calculate()  # pretend this calculates something
&amp;lt;Mock name='mock.calculate()' id='4338034768'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think Mock really shines when you're working with code that hits external
APIs (I do this a &lt;em&gt;lot&lt;/em&gt; with
&lt;a href="https://workforpie.com"&gt;Work for Pie&lt;/a&gt;). Imagine for a minute that
the &lt;code&gt;Thing.calculate()&lt;/code&gt; sent some data up to an external API, then
used the results to calculate and return a value. With a Mocked object, your
tests can run without hitting the api. This is a Good Thing! In order to write
that test, you'd do somethign like this&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from mock import calls

def test_calculate():
    thing = Mock(shape='square', color='blue')
    thing.calculate()
    thing.assert_has_calls([call.calculate()])
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;So what was that thing about &lt;code&gt;name&lt;/code&gt; attributes?&lt;/h2&gt;
&lt;p&gt;Now here's where things get tricky. For one reason or another, many of my
API-wrapper classes have a &lt;code&gt;name&lt;/code&gt; attribute. The Mock class also
has a keyword argument &lt;code&gt;name&lt;/code&gt;, that lets you give the Mock a name
(the &lt;a href="http://www.voidspace.org.uk/python/mock/mock.html#mock.Mock"&gt;docs&lt;/a&gt; say this is useful for debugging).&lt;/p&gt;
&lt;p&gt;So, how in the world am I supposed to write a Mock for something like this,
and still be able to specify the value of an attribute?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class SomeAPIWrapper(object):
    name = 'brad'
    token = 'secret'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Well, this &lt;strong&gt;does not work&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; api = Mock(name='brad', token='secret')
&amp;gt;&amp;gt;&amp;gt; api.token  # Ok, this looks fine.
'secret'
&amp;gt;&amp;gt;&amp;gt; api.name  # not what I want
&amp;lt;Mock name='important-thing-here.name' id='4337316944'&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Luckily, there's this neat class called a
&lt;a href="http://www.voidspace.org.uk/python/mock/mock.html#mock.PropertyMock"&gt;PropertyMock&lt;/a&gt;. It took me a bit to figure out how to use it, but it's
essentially used as a property or an attribute on another class (including
another mock). I honestly don't know if this is &lt;em&gt;supposed to work this
way&lt;/em&gt; or if this is a nasty hack (feel free to &lt;a href="/contact/"&gt;let me
know&lt;/a&gt; one way or another), but this is how I attached a &lt;code&gt;name&lt;/code&gt;
attribute to a Mock object:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from mock import Mock, PropertyMock
&amp;gt;&amp;gt;&amp;gt; # Create a Mock for my ``SomeAPIWrapper`` class above
&amp;gt;&amp;gt;&amp;gt; api = Mock(token='secret')
&amp;gt;&amp;gt;&amp;gt; # Create a PropertyMock representing the ``name`` attribute
&amp;gt;&amp;gt;&amp;gt; p = PropertyMock(return_value='brad')
&amp;gt;&amp;gt;&amp;gt; # Replace Mock's name with our new property
&amp;gt;&amp;gt;&amp;gt; type(api).name = p
&amp;gt;&amp;gt;&amp;gt;
&amp;gt;&amp;gt;&amp;gt; # Now see what happens
&amp;gt;&amp;gt;&amp;gt; api.token
'secret'
&amp;gt;&amp;gt;&amp;gt; api.name
'brad'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, your Mock objects can have a name attribute with an expected return
value.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/how-world-do-you-mock-name-attribute/</guid><pubDate>Fri, 15 Mar 2013 03:43:17 +0000</pubDate></item><item><title>Why I deleted Mailbox after only an hour.</title><link>https://bradmontgomery.net/blog/why-i-deleted-mailbox-after-only-hour/</link><description>
&lt;p&gt;I'll be honest; I was really excited about &lt;a href="http://www.mailboxapp.com/"&gt;Mailbox&lt;/a&gt;.
When I first heard about it, I'd become increasingly &lt;a href="http://markosullivan.ca/dont-suck-at-email/"&gt;Sucky at Email&lt;/a&gt;.
My inbox was a mess. I had &lt;strong&gt;five&lt;/strong&gt; different kinds of flags/stars,
multiple kinds of &lt;strong&gt;todo&lt;/strong&gt; flags, and I was one of those
&lt;em&gt;read-an-email-and-mark-it-as-unread&lt;/em&gt; people.&lt;/p&gt;
&lt;p&gt;So, when Mailbox showed up, I really did have high hopes that it'd help me
learn &lt;em&gt;A New Way&lt;/em&gt; of managing email. I wanted to be productive.&lt;/p&gt;
&lt;p&gt;But then, I had to wait for &lt;strong&gt;a half million people&lt;/strong&gt;. Honestly,
had this not happend, I'd probably be a happy Mailbox user.&lt;/p&gt;
&lt;p&gt;Instead, I stumbled upon &lt;a href="https://twitter.com/krarick"&gt;Keith Rarick&lt;/a&gt;'s
email system: &lt;a href="http://xph.us/2013/01/22/inbox-zero-for-life.html"&gt;Inbox Zero for Life&lt;/a&gt;.
It's Gmail-centric and incredibly simple. I enabled keyboard shortcuts (that alone is life-changing),
ditched my varaious flags and todo labels, and in about an hour and a half on a Saturday
morning, I hit &lt;strong&gt;Inbox Zero&lt;/strong&gt;. It was liberating.&lt;/p&gt;
&lt;p&gt;I then picked up the &lt;a href="https://itunes.apple.com/us/app/gmail-email-from-google/id422689480"&gt;Gmail app for iOS&lt;/a&gt;,
which lets me more easily use the same technique on my phone. This makes me happy.&lt;/p&gt;
&lt;p&gt;So, yesterday, I finally got access to the Mailbox app. I was still somewhat
excited to try it out, but it quickly became apparent that it just wasn't going to work.
The reason? It made things &lt;strong&gt;More Complex&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I went from having to deal with &lt;em&gt;Starred items&lt;/em&gt;, to having multiple types of
todo lists (Later Today, This Evening, Tomorrow, To Buy, To Read, To Watch, Oh My!).
This felt like a step backward. On top of that, it just didn't feel right when I went
back to the Gmail web interface, which is where I read &lt;em&gt;most&lt;/em&gt; of my email.
I'd finally found a system that really worked, and Mailbox disrupted it.
Seriously. I don't need these extra labels in Gmail:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[Mailbox]
    Later
    To Buy
    To Read
    To Watch
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I &lt;em&gt;do&lt;/em&gt; think Mailbox was a really well-written app. I like the aesthetic and
the interface. It just doesn't work with my preferred technique. So, after an hour
of using it, I deleted it from my phone.&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Mailbox is gone now, but the folks over at &lt;a href="https://www.getmailbird.com"&gt;mailbird&lt;/a&gt; asked if I'd link to their article about what might have happened. And so, &lt;a href="https://www.getmailbird.com/what-happened-to-mailboxapp-com/"&gt;here it is: what happened to mailbox&lt;/a&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/why-i-deleted-mailbox-after-only-hour/</guid><pubDate>Wed, 13 Mar 2013 15:44:30 +0000</pubDate></item><item><title>Calculate a Week Range for a Date</title><link>https://bradmontgomery.net/blog/calculate-week-range-date/</link><description>
&lt;p&gt;Math with dates and date ranges is often &lt;em&gt;fun &amp;amp; enlightening&lt;/em&gt;! As
a testament to the fun of calculating dates (particularly ranges of dates), I
present the following:&lt;/p&gt;
&lt;p&gt;Given a date, how would you find the range of dates that describe the week
during which your original date lies? In other words, assume today is &lt;em&gt;March
7, 2013&lt;/em&gt; (and it is... for now anyway). Can you answer these two questions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;What was last Sunday's date?&lt;/li&gt;
&lt;li&gt;What will be the date on Saturday?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;NOTE: I'm assuming weeks start on Sunday and end on Saturday. I'm in the
US and that's how people in my area typically define a &amp;quot;week&amp;quot;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here's some Python code that calculates this. (also available at
&lt;a href="https://gist.github.com/bradmontgomery/5110985"&gt;https://gist.github.com/bradmontgomery/5110985&lt;/a&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from datetime import timedelta

def week_range(date):
    &amp;quot;&amp;quot;&amp;quot;Find the first/last day of the week for the given day.
    Assuming weeks start on Sunday and end on Saturday.

    Returns a tuple of ``(start_date, end_date)``.

    &amp;quot;&amp;quot;&amp;quot;
    # isocalendar calculates the year, week of the year, and day of the week.
    # dow is Mon = 1, Sat = 6, Sun = 7
    year, week, dow = date.isocalendar()

    # Find the first day of the week.
    if dow == 7:
        # Since we want to start with Sunday, let's test for that condition.
        start_date = date
    else:
        # Otherwise, subtract `dow` number days to get the first day
        start_date = date - timedelta(dow)

    # Now, add 6 for the last day of the week (i.e., count up to Saturday)
    end_date = start_date + timedelta(6)

    return (start_date, end_date)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, playing with this in a python shell...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from datetime import datetime
&amp;gt;&amp;gt;&amp;gt; d = datetime(2013, 3, 7)
&amp;gt;&amp;gt;&amp;gt; week_range(d)
(datetime.datetime(2013, 3, 3, 0, 0),
 datetime.datetime(2013, 3, 9, 0, 0))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is also useful if you've got a Django site, and you want to find
the Users that joined during a certain week:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; from django.contrib.auth.models import User
&amp;gt;&amp;gt;&amp;gt; d = datetime(2013, 3, 7)
&amp;gt;&amp;gt;&amp;gt; week = week_range(d)
&amp;gt;&amp;gt;&amp;gt; User.objects.filter(date_joined__range=week)
[&amp;lt;User ...&amp;gt;, ...]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Cool, huh. Check out the docs for &lt;a href="http://docs.python.org/2/library/datetime.html#timedelta-objects"&gt;&lt;code&gt;timedelta&lt;/code&gt;&lt;/a&gt; and
&lt;a href="http://docs.python.org/2/library/datetime.html#datetime.date.isocalendar"&gt;&lt;code&gt;isocalendar&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/calculate-week-range-date/</guid><pubDate>Thu, 07 Mar 2013 19:39:54 +0000</pubDate></item><item><title>How to use a turning lane</title><link>https://bradmontgomery.net/blog/how-use-turning-lane/</link><description>
&lt;p&gt;&lt;img src="http://www.foib.us/im/how_to_use_a_turning_lane-20130223-142624.png" alt="how to use a turning lane" /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Stop in the middle of the road&lt;/li&gt;
&lt;li&gt;Slowly turn half-way into the turning lane&lt;/li&gt;
&lt;li&gt;Wait forever&lt;/li&gt;
&lt;/ol&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/how-use-turning-lane/</guid><pubDate>Sat, 23 Feb 2013 21:28:56 +0000</pubDate></item><item><title>The Minimum Working Thing</title><link>https://bradmontgomery.net/blog/the-minimum-working-thing/</link><description>
&lt;p&gt;&lt;em&gt;This was originally a guest post that appeared on Nibletz. The original link is here: &lt;a href="http://nibletz.com/2013/02/08/minimum-working-guest-post/"&gt;http://nibletz.com/2013/02/08/minimum-working-guest-post/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I've been pondering this post for a long time. Any student of startups is
probably familiar with the phrase &lt;em&gt;Minimum Viable Product&lt;/em&gt;. It's really a
simple idea, and I think it embodies an important philosophy for anyone starting
a company. The idea is that your &lt;em&gt;product&lt;/em&gt; (whatever it is; e.g. a service, a
physical thing, or some software) should be as small as possible, but still be
a working, viable product that customers will buy.&lt;/p&gt;
&lt;p&gt;The concept is fairly easy to understand, and I don't really think anyone
misudnerstands the idea. However, the &lt;em&gt;execution&lt;/em&gt; of that idea is incredibly
difficult. Who knows why this is the case, but I'm going to postulate that
the terminology is getting in the way.&lt;/p&gt;
&lt;p&gt;Let's get some definitions out of the way.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Minimum&lt;/strong&gt;. The least or smallest amount possible.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Viable&lt;/strong&gt;. Capable of working successfully.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Product&lt;/strong&gt;. An article or substance that is created or refined for sale.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I don't really think anyone has a problem with these terms individually, but put
them together, and I think many people have wildly varying interpretations of
their definitions. One reason, I think, is that people unknowingly emphasize
the wrong words. Let's break it down even further.&lt;/p&gt;
&lt;h2&gt;Minimum&lt;/h2&gt;
&lt;p&gt;This may be the most important word. Yet, I think it often gets the least amount
of emphasis. Honestly, if I were to change the phrase (and I am!), I'd keep this
word. It's perfect. We want to do the smallest amount of work possible, but
we need to strongly emphasize that.&lt;/p&gt;
&lt;p&gt;This is hard to do. People like to make things more complex than they need to be.&lt;/p&gt;
&lt;h2&gt;Viable&lt;/h2&gt;
&lt;p&gt;Here's where things start to get confusing. The problem is, that many
entrepreneurs (especially first-timers--myself, included!) very rarely
agree on what &lt;em&gt;will work&lt;/em&gt;. It's also very tempting to try to build a solution
without fully understanding the problem.&lt;/p&gt;
&lt;p&gt;I say it's OK to not fully understand what you're doing (that's what startups
are all about!), so it's even more important to adjust your definiton of
&lt;em&gt;viable&lt;/em&gt;. And, you know what? It's much smaller than you realize.&lt;/p&gt;
&lt;h2&gt;Product&lt;/h2&gt;
&lt;p&gt;This is where things really get confusing. When you say the word &lt;em&gt;product&lt;/em&gt;,
many people start thinking &lt;em&gt;features&lt;/em&gt;! Seriously, go to a business guy, an
engineer, or anyone that calls themselves an entrepreneur; sit down and
brainstorm a new &amp;quot;product&amp;quot;. Start making a bulleted list of all the &lt;em&gt;features&lt;/em&gt;
that you'd like to see, and then tell me how many pages you have after an hour.&lt;/p&gt;
&lt;p&gt;That's the problem. People envision a &lt;em&gt;product&lt;/em&gt; as a fully-featured, complete,
does-it-all-with-bells-and-whistles... thing. As soon as you speak the word
product, you've already started having feature-creep, and you've already
forgotten that all-important adjective: &lt;em&gt;minimum&lt;/em&gt;.&lt;/p&gt;
&lt;h2&gt;Build a Minimum Working Thing&lt;/h2&gt;
&lt;p&gt;I've complained long enough, so now I'm going to propose a solution. In the
tech-startup world, I suggest that we ditch the phrase &lt;em&gt;Minimum Viable Product&lt;/em&gt;,
and adopt the phrase &lt;em&gt;Minimum Working Thing&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Again, let's break it down:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Minimum&lt;/strong&gt;. Do the least amount of work possible. This is important! You
know why, right? If you're in a startup, you're going to have to go back
to the drawing board. You're going to have to re-work some things. Build
less up front in order to save yourself some time later on.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Working&lt;/strong&gt;. Deploy something that &lt;em&gt;works&lt;/em&gt;. Remember, you're
just as interested in failure as you are in success. Your first few
iterations don't have to launch your company into success. They have to teach
you the direction in which you need to travel. If people can use it to do
&lt;em&gt;something&lt;/em&gt;, then it's working. It doesn't have to be successful.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thing&lt;/strong&gt;. Don't build a product. Don't build features. Just build a &lt;em&gt;thing&lt;/em&gt;
Yes, I'm being intentionally vague, because your thing may be very different
from someone else's thing. In fact, take that long list of features that you
think your product needs, and circle the first item on the list. That's your
&lt;em&gt;thing&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So there you have it. Ultimately, forget what you think you need to build.
Instead, build something really small that &lt;em&gt;works&lt;/em&gt;, and let your customers
start using it. Then, pay close attention to what they do and how they use your
&lt;em&gt;minimum working thing&lt;/em&gt;. They'll guide you the rest of the way.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/the-minimum-working-thing/</guid><pubDate>Fri, 08 Feb 2013 19:06:17 +0000</pubDate></item><item><title>Division By Zero</title><link>https://bradmontgomery.net/blog/division-by-zero/</link><description>
&lt;p&gt;In a former life (&lt;em&gt;while a GA in graduate school&lt;/em&gt;), I ~~was forced
to~~ had the pleasure to teach elementary and intermediate algebra.
These courses are essentially the algebra curriculum you &lt;em&gt;should&lt;/em&gt; learn
during High School in the United States. Unfortunately, many college-bound
students don't master the material, and find themselves in a remedial class during
their college career. That's the class I was teaching.&lt;/p&gt;
&lt;p&gt;There are many concepts that are difficult for students to understand, but
one of the most perplexing is the concept of &lt;em&gt;Division by Zero&lt;/em&gt;.
Interestingly enough, &lt;em&gt;Multiplication by Zero&lt;/em&gt; is relatively easy for
students to master:&lt;code&gt;a √ó 0 = 0&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;But what is Division?&lt;/h2&gt;
&lt;p&gt;We start out teaching division by disguising it as a multiplication problem.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;3 √ó ____ = 12&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Read in english, this is &amp;quot;three times what number is twelve?&amp;quot; Then, somewhere
along the line, we introduce this new notation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;12 / 3 = ____&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In english, this is &amp;quot;twelve divided by three is what number?&amp;quot; It can also
be read as &amp;quot;three times what number is twelve?&amp;quot; Hey! this is the same as the
equation above!&lt;/p&gt;
&lt;p&gt;So, now we get to this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;5 / 0 = ____&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I've seen &lt;em&gt;so many people&lt;/em&gt; answer this with &amp;quot;zero&amp;quot; (which is incorrect).
In english, we're asking, &amp;quot;zero times what number is five?&amp;quot;&lt;/p&gt;
&lt;p&gt;This is essentially: &lt;code&gt;0 √ó ____ = 5&lt;/code&gt;. This problem makes no
sense. It's analogous to asking &amp;quot;Which part of the turkey makes a spaceship?&amp;quot; (OK,
that's a bad analogy, but Thanksgiving was yesterday, and I like spaceships).&lt;/p&gt;
&lt;p&gt;Since any number multiplied by zero is zero, there is no answer to this equation.
Mathematicians say the solution is &lt;a href="http://en.wikipedia.org/wiki/Undefined_(mathematics)"&gt;undefined&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm pretty sure these kinds of problems are just practical jokes played on us
by the Mathematicians of old.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/division-by-zero/</guid><pubDate>Fri, 23 Nov 2012 19:40:50 +0000</pubDate></item><item><title>Vim: Jumping around!</title><link>https://bradmontgomery.net/blog/vim-jumping-around/</link><description>
&lt;p&gt;So what happens when you open a file in vim, and you're presented with lots of content? Say, 5000 lines of something.&lt;/p&gt;
&lt;p&gt;Well, I typically start searching for things: &lt;code&gt;/keyword&lt;/code&gt;. That works great &lt;em&gt;when you know what you're
looking for&lt;/em&gt;. But it breaks down quickly when you don't. So, today's vim post is about &lt;em&gt;moving faster&lt;/em&gt; through pages of text.&lt;/p&gt;
&lt;h2&gt;Jumping to a line number&lt;/h2&gt;
&lt;p&gt;I have line numbers turned on by default (&lt;code&gt;:set nu&lt;/code&gt;, if you don't). There are a couple of ways you can jump to specific line numbers.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;:42&lt;/code&gt; will jump to line 42.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;6G&lt;/code&gt; will jump to line 6. (G is the &amp;quot;Go To&amp;quot; command).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;But jumping to line numbers still assumes you sort of know where you're going. (Well, kinda... I've got a bad habbit of just jumping to arbitrarily large line numbers; &lt;code&gt;:9999999&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;Screen Scrolling&lt;/h2&gt;
&lt;p&gt;Vim also lets you scoll through content either a full- or half-screen at a time. This is probably the more correct way to quickly skim through a file when you're unfamiliar with its content.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;^F&lt;/code&gt;: move &lt;em&gt;Forward&lt;/em&gt; a full screen (that's CTRL-F)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^B&lt;/code&gt;: move &lt;em&gt;Backward&lt;/em&gt; a full screen (that's CTRL-B)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^D&lt;/code&gt;: move &lt;em&gt;forward&lt;/em&gt; half-a screen (that's CTRL-D). D for &lt;em&gt;down&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^U&lt;/code&gt;: move &lt;em&gt;backward&lt;/em&gt; half-a screen (that's CTRL-U). U for &lt;em&gt;up&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also scroll the whole screen so that the current position of the cursor moves to top of the screen. That is, if your cursor is on line 53, line 53 moves to the top of the screen. Do that with &lt;code&gt;z+Enter&lt;/code&gt; (hit &lt;em&gt;z&lt;/em&gt;, then hit &lt;em&gt;Enter&lt;/em&gt; or &lt;em&gt;Return&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Happy Vimming!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/vim-jumping-around/</guid><pubDate>Mon, 12 Nov 2012 17:51:31 +0000</pubDate></item><item><title>Let's be a better vim user</title><link>https://bradmontgomery.net/blog/lets-be-a-better-vim-user/</link><description>
&lt;p&gt;It's November. For many, that means a month of writing (&lt;a href="http://www.nanowrimo.org/"&gt;NaNoWriMo&lt;/a&gt;).
For others, that's a month of cultivating a fine moustache (&lt;a href="http://us.movember.com/"&gt;Movember&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;I, however, am making an effort to become a better &lt;a href="http://www.vim.org/"&gt;vim&lt;/a&gt; user. Call it
&lt;em&gt;NoVIMber&lt;/em&gt; or &lt;em&gt;VIMmember&lt;/em&gt; or whatever. I'll try to periodically blog about what I'm doing, but
I'm not making any promises (other than to force myself to be more productive).&lt;/p&gt;
&lt;p&gt;I've been using vim for a long time (since grad-school... 2001ish), but for &lt;em&gt;far&lt;/em&gt; too long, I've
just been using what I already know, rather than continuously learning. So here's how I'm starting out...&lt;/p&gt;
&lt;h2&gt;Quicker Navigation&lt;/h2&gt;
&lt;p&gt;I still use the mouse (well, magic trackpad) for a lot of things, so I've got a very bad
habit of using the arrow keys to navigate through a file. This is the slow way of moving around,
so for the last couple of days, I've been retraining myself to use vim's basic (better) navigation.&lt;/p&gt;
&lt;p&gt;That's &lt;code&gt;h, j, k, l&lt;/code&gt;¬†(left, down, up, right) instead of arrow keys, and &lt;code&gt;w&lt;/code&gt; (skip ahead by word),
and &lt;code&gt;b&lt;/code&gt; (move back a word).&lt;/p&gt;
&lt;p&gt;All of these commands also take numeric arguments:
&lt;code&gt;5j&lt;/code&gt; to move down 5 lines;
&lt;code&gt;3w&lt;/code&gt; to move forward 3 words.&lt;/p&gt;
&lt;p&gt;Effectively navigating withing a file using these commands makes for much
quicker editing. So, from here on out, if you see my with my hands on the arrow keys,
please call me out.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/lets-be-a-better-vim-user/</guid><pubDate>Sun, 04 Nov 2012 15:16:47 +0000</pubDate></item><item><title>Customizing Django's password_change view</title><link>https://bradmontgomery.net/blog/customizing-djangos-password_change-view/</link><description>
&lt;p&gt;If you have a site where users have the traditional
&lt;em&gt;username&lt;/em&gt;/&lt;em&gt;password&lt;/em&gt; combination, you've got to provide some
way to let users &lt;strong&gt;change&lt;/strong&gt; their password. Luckily, this is
fairly easy to do with Django. The &lt;code&gt;auth&lt;/code&gt; app comes with a
&lt;a href="http://goo.gl/sMDqI"&gt;password_change&lt;/a&gt; view that does what you'd
probably expect.&lt;/p&gt;
&lt;p&gt;It's also fairly easy to set up. You add a line similar to the following
to your root URLConf:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url(r'^accounts/', include('django.contrib.auth.urls')),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You also have to set up some additional templates (e.g. &lt;code&gt;registration/password_change_form.html&lt;/code&gt;),
but once you've done that, users can change their password using a form that
looks something like this:&lt;/p&gt;
&lt;p&gt;Old password:&lt;/p&gt;
&lt;p&gt;New password:&lt;/p&gt;
&lt;p&gt;New password confirmation:&lt;/p&gt;
&lt;p&gt;Easy! Until...&lt;/p&gt;
&lt;h2&gt;What if I can't remember my old password?&lt;/h2&gt;
&lt;p&gt;Or worse, yet, what if your users don't have a usable password? If you're
using something like the excellent &lt;a href="http://django-social-auth.readthedocs.org/"&gt;django-social-auth&lt;/a&gt;, which lets users log in using OAuth or OpenID (i.e. via
Facebook, Twitter, Google, or some other source) you may run into this case.&lt;/p&gt;
&lt;p&gt;So, how can I omit the &lt;em&gt;Old Password&lt;/em&gt; requirement in the change
password form? We're in luck. The &lt;code&gt;password_change&lt;/code&gt; view accepts a
&lt;code&gt;password_change_form&lt;/code&gt; parameter that allows you to specify what form
is used. The &lt;code&gt;auth&lt;/code&gt; app also contains a form that doesn't require
entering the Old password (it's used in the admin app!). It's called,
&lt;code&gt;AdminPasswordChangeForm&lt;/code&gt;. So, all we have to do is update our
root URLConf yet again:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib.auth.forms import AdminPasswordChangeForm

ulrpatterns = patterns('', 
    
    # ...
    
    url(r'^accounts/password_change/$',  # hijack password_change's url
        'django.contrib.auth.views.password_change',
        {'password_change_form': AdminPasswordChangeForm},
        name=&amp;quot;password_change&amp;quot;),
    url(r'^accounts/', include('django.contrib.auth.urls')),
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Remember that the &lt;a href="http://goo.gl/A2pLz"&gt;url function&lt;/a&gt; allows you
to specify keword parameters for views, and that's exactly what we've done with
this: &lt;code&gt;{'password_change_form': AdminPasswordChangeForm}&lt;/code&gt;. That
customizes the form that gets used in the &lt;code&gt;password_change&lt;/code&gt; view.&lt;/p&gt;
&lt;p&gt;Now, when our users try to change their password, the form looks something
like this:&lt;/p&gt;
&lt;p&gt;New password:&lt;/p&gt;
&lt;p&gt;New password confirmation:&lt;/p&gt;
&lt;p&gt;Disclaimer: This &lt;em&gt;does&lt;/em&gt; remove one additional step that a potential
attacker would need to overcome in order to steal an account. So, make sure you
understand why you'd implement this before you do so.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/customizing-djangos-password_change-view/</guid><pubDate>Tue, 30 Oct 2012 21:30:49 +0000</pubDate></item><item><title>Thoughts on PyArkansas</title><link>https://bradmontgomery.net/blog/thoughts-on-pyarkansas/</link><description>
&lt;p&gt;I make a decent effort to keep up with what's happening in the Python
comunity, but‚Äî&lt;em&gt;gosh darnit&lt;/em&gt;‚Äîit's hard! I think that's why
conferences exist. They give you a day or two to focus solely on meeting people
and catching up with what's going on in the community.&lt;/p&gt;
&lt;p&gt;I particularly like the smaller, regional events like the one I attended this
weekend: &lt;a href="http://www.pyarkansas.org/"&gt;PyArkansas&lt;/a&gt;. Here's a few
reasons why:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cost: Smaller, regional conferences tend to be less expensive (&lt;em&gt;Free in
this case!&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;Travel: It's not thousands of miles away, so travelling isn't a huge burden.
&lt;em&gt;I rented a van, and took six of my good friends on a three-hour drive&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;Size: I think there were about 150 people there. Not too overwhelming, and
you can still meet a good deal of peple.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;So... what did I learn?&lt;/h2&gt;
&lt;p&gt;This is a bit of a brain dump (&lt;em&gt;don't worry, it'll be short&lt;/em&gt;), so
please forgive the terseness.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you work with &lt;a href="http://djano.me/geodjango"&gt;GeoDjango&lt;/a&gt;, you
really need to keep up with &lt;a href="https://github.com/adamfast"&gt;Adam Fast&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;I'm a big fan of Django, but it's always nice to have
&lt;a href="https://twitter.com/kennethreitz"&gt;Kenneth Reitz&lt;/a&gt; challenging
us to &lt;a href="https://speakerdeck.com/kennethreitz/flasky-goodness"&gt;re-think
how we build web apps&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/gabrielmgrant"&gt;Gabriel Grant&lt;/a&gt; talked about
&lt;a href="http://stackio.dotcloud.com/"&gt;Stack.io&lt;/a&gt; and about building rich
applications with Django using &lt;a href="http://django-rest-framework.org/"&gt;Django REST Framework&lt;/a&gt; and &lt;a href="http://emberjs.com/"&gt;Ember.js&lt;/a&gt;.
I'd seem Ember.js in passing, but somehow I'd completely missed (or forgot)
about Django REST Framework.&lt;/li&gt;
&lt;li&gt;Unfortunately, I walked in late to
&lt;a href="https://github.com/rubic"&gt;Jeff Bauer&lt;/a&gt;'s talk on
&lt;a href="http://saltstack.org/"&gt;Salt&lt;/a&gt;, but I caught just enough to really
whet my appetite. I'm a Chef user, but salt seems to have a much lower
barrier to entry, though I'm not sure it completely solves the same problems&lt;/li&gt;
&lt;li&gt;I also bumped into Larry Hastings. I'm not much of a podcast listener but
I'd highly suggest checking out his podcast:
&lt;a href="http://radiofreepython.com/"&gt;radio free python&lt;/a&gt;. It looks very
well-done, and some quick google searchs seem to indicate his listeners
think so, too. He also hooked me up with a cool sticker. Thanks, Larry!&lt;/li&gt;
&lt;li&gt;I also need to shout out to
&lt;a href="https://twitter.com/lyndsysimon"&gt;Lyndsy Simon&lt;/a&gt;, who created both
the PyArkansas and the &lt;a href="https://workforpie.com/"&gt;Work for Pie&lt;/a&gt;
decals in the swag bag. Great work! :)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'm sure I missed meeting many other awesome people, too. If you've
never been to a regional conference like this, make it a point to go! You won't
be sorry.&lt;/p&gt;
&lt;p&gt;Good Times!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/thoughts-on-pyarkansas/</guid><pubDate>Sun, 28 Oct 2012 15:08:44 +0000</pubDate></item><item><title>Django Models &amp; Mixins for cleaner code</title><link>https://bradmontgomery.net/blog/django-models-mixins-for-cleaner-code/</link><description>
&lt;p&gt;I've been using Mixins lately to DRY-ly
make certain behavior available to several different Django models. If you're not familiar
with mixins, there's a &lt;a href="http://goo.gl/rN3Ye"&gt;great discussion over on StackOverflow&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here's a simple example to illustrate what I've been doing. In building
&lt;a href="http://workforpie.com"&gt;Work for Pie&lt;/a&gt;, we've got a
&lt;code&gt;UserProfile&lt;/code&gt; model that looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class UserProfile(models.Model):
    user = models.OneToOneField(User)
    tagline = models.CharField(max_length=140)
    biography = models.TextField()
    avatar_url = models.URLField(max_length=256)

    # several other things, too...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But, we also have a number of other models that are associated with &lt;code&gt;User&lt;/code&gt;
objects, such as a &lt;code&gt;Score&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Score(models.Model):
    user = models.ForeignKey(User) 
    score = models.IntegerField()

    # some other stuff
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, there are a number of scenarios where you might want to display a User's
&lt;code&gt;Score&lt;/code&gt;, and that's not too difficult to do using the ORM. In fact,
we've got a &lt;a href="http://goo.gl/Jn1Bo"&gt;Manager method&lt;/a&gt;, &lt;code&gt;latest&lt;/code&gt;,
that lets us get the most recent &lt;code&gt;Score&lt;/code&gt; associated with a User.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;score = Score.objects.filter(user__username='bkmontgomery').latest()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However... that soon starts to feel redundant if you want to include a user's
score elsewhere‚Äîin an other app or a somewhat unrelated model, for example.
Image that we also have comments:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Comment(models.Model):
    user = models.ForeignKey(User, help_text=&amp;quot;The comment's author&amp;quot;) 
    content = models.TextField()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What if you always wanted to show a users score next to their comments? You
might do something like this in a template (&lt;em&gt;assume &lt;code&gt;comment&lt;/code&gt;
is a Comment instance&lt;/em&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&amp;quot;score&amp;quot;&amp;gt;{{ comment.user.score_set.latest }}&amp;lt;span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Likewise, if you wanted to link back to the user's profile, you might do
something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;{{ comment.user.userprofile.get_absolute_url }}&amp;quot;&amp;gt;view profile&amp;lt;a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This works, but it's fairly verbose.&lt;/p&gt;
&lt;h2&gt;Save some effort...&lt;/h2&gt;
&lt;p&gt;Here's where a Mixin can save you some work. First, let's assume that we
want to be able to access a user's score on any model that also has a ForeignKey
to &lt;code&gt;User&lt;/code&gt;. You could build a &lt;code&gt;ScoreMixin&lt;/code&gt; class like the
following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class ScoreMixin(object):
    &amp;quot;&amp;quot;&amp;quot;Mixin to another class to provide access to a User's ``Score``.&amp;quot;&amp;quot;&amp;quot;
    @property
    def score(self):
        &amp;quot;&amp;quot;&amp;quot;Get the latest score for the User who saved this Job.&amp;quot;&amp;quot;&amp;quot;
        if not hasattr(self, &amp;quot;_score&amp;quot;):
            self._score = self.user.score_set.latest()
        return self._score
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Keep in mind: this code assumes any model that inherits from this class
will have a &lt;code&gt;user&lt;/code&gt; attribute.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;We can now augment our &lt;code&gt;Comment&lt;/code&gt; class as follows, which will give
all &lt;code&gt;Comment&lt;/code&gt; instances a &lt;code&gt;score&lt;/code&gt; attribute:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Comment(ScoreMixin, models.Model):
    user = models.ForeignKey(User, help_text=&amp;quot;The comment's author&amp;quot;) 
    content = models.TextField()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, our template can be a bit more concise:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&amp;quot;score&amp;quot;&amp;gt;{{ comment.score }}&amp;lt;span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I've found that simple cases like this, let me easily reuse some behavior for models
that already have a common attribute or field.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/django-models-mixins-for-cleaner-code/</guid><pubDate>Wed, 26 Sep 2012 20:28:07 +0000</pubDate></item><item><title>Fixing Bugs.</title><link>https://bradmontgomery.net/blog/fixing-bugs/</link><description>
&lt;p&gt;&lt;img src="http://www.foib.us/im/fixing-bugs.png" alt="every. single. time." /&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/fixing-bugs/</guid><pubDate>Tue, 25 Sep 2012 22:44:13 +0000</pubDate></item><item><title>A Vision of the Future</title><link>https://bradmontgomery.net/blog/a-vision-of-the-future/</link><description>
&lt;p&gt;The year is 2213.&lt;/p&gt;
&lt;p&gt;The US has extended the term for patents from 20 to 100 years, and passed legislation granting greater powers to patent holders. Additionally, the richest nations of the world have organized the The World Patent Protection Agency (or WPPA).&lt;/p&gt;
&lt;p&gt;The WPPA consists of a judicial committee that has far-reaching powers to protect patents across national borders. This is accomplished through the levying of hefty fines and possible embargoes for nations that do not comply with their directives.&lt;/p&gt;
&lt;p&gt;Everything else is basically the same as it is today.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-vision-of-the-future/</guid><pubDate>Thu, 20 Sep 2012 18:20:16 +0000</pubDate></item><item><title>A scenario for the future.</title><link>https://bradmontgomery.net/blog/a-scenario-for-the-future/</link><description>
&lt;p&gt;Just jotting down a thought I had during my commute this morning...&lt;/p&gt;
&lt;p&gt;A large, multi-national corporation essentially has a monopoly on the seeds of a plant that's used as the world's major food source. It just so happens that they've also got a patent on a genetically modified version of this seed, which is the version of the seed that gets distributed to farmers.&lt;/p&gt;
&lt;p&gt;The corporation can detect their patented genes in any of the food grown from this particular seed.&lt;/p&gt;
&lt;p&gt;Years pass, and suddenly, someone realizes that this genetically modified food genetically alters any organisms that consume it (namely, humans). Additionally, the patented gene embeds itself into the DNA of those that consume the plant.¬†Essentially, the gene now becomes part of the organism. This gene is alos passed on to offspring of the organism.&lt;/p&gt;
&lt;p&gt;Now, millions of people have this gene as part of their DNA.&lt;/p&gt;
&lt;p&gt;Now the question: When they have children, are they liable for patent infringement?&lt;/p&gt;
&lt;p&gt;Let's just say, &amp;quot;yes&amp;quot;. So now, this corporation sues most of humanity, wins the lawsuit, but the vast majority of the population cannot afford to pay the damages. Rather than bankrupt the entire population, those who cannot afford to pay become indentured &amp;quot;employees&amp;quot;, until their debt can be paid.&lt;/p&gt;
&lt;p&gt;(dear scifi screenwriters... you're welcome)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-scenario-for-the-future/</guid><pubDate>Mon, 27 Aug 2012 17:20:53 +0000</pubDate></item><item><title>planning julython</title><link>https://bradmontgomery.net/blog/planning-julython/</link><description>
&lt;p&gt;A few days ago I saw &lt;a href="https://twitter.com/#!/jtauber"&gt;@jtauber&lt;/a&gt; tweet
something about &lt;a href="http://www.julython.org/"&gt;julython&lt;/a&gt;. Essentially it's a game
that &lt;em&gt;encourages&lt;/em&gt; you give a pet python project a little extra love during the
month of July.&lt;/p&gt;
&lt;p&gt;For me (and probably several others), this is a little push to spend some time
on projects that otherwise get neglected because there are &lt;strong&gt;more pressing&lt;/strong&gt;
things to do. So, without further ado, here's what I'd like to accomplish this
month (in order of importance!):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/copitux/python-github3"&gt;python-github3&lt;/a&gt;: I ran across
this a couple of weeks ago (yeah, I got bit by not keeping up with the news
regarding
&lt;a href="https://github.com/blog/1160-github-api-v2-end-of-life"&gt;v2 of the github api&lt;/a&gt;)
and I offered to add support for events
(&lt;a href="https://github.com/copitux/python-github3/issues/15"&gt;Issue #15&lt;/a&gt;). So that's
what I'm doing first.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;django-coffers: I keep up with my finances in spreadsheet that's modeled
after a checkbook register, and every time time I open it a little piece of me
dies. Granted, I'm a little OCD about tracking my spending, and I've long wanted
to build a web app that makes this easier to do. Around December 2010, I
started working on a django app and had even planned to turn it into a public
service (&lt;a href="http://fullcoffers.com"&gt;http://fullcoffers.com&lt;/a&gt;), but got &lt;em&gt;sidetracked&lt;/em&gt; by an
&lt;a href="http://workforpie.com/"&gt;even cooler idea&lt;/a&gt;. A lot of the intial work is done,
so I'm going to bring it up to date and open-source it. Then I'm going to
doogfood the crap out of it so I can bury the spreadsheet once and for all!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/bradmontgomery/elasticdict"&gt;elasticdict&lt;/a&gt;: I don't
really even know where this came from, but one day I thought, &amp;quot;What if a
python dict pushed it's data out to
&lt;a href="http://www.elasticsearch.org/"&gt;elasticsearch&lt;/a&gt;?&amp;quot; So, I started hacking
that together, but didn't really get very far. I'd like to play with this a bit
more and see what happens. I don't really have a use case for this, and I think
it only makes sense for a small subset of features offered by elasticsearch,
but I'll play with it untill my curiosity is sated (or until it explodes).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In addition, I'd like to get some of my local friends to join me, and see if
we can help &lt;a href="http://www.julython.org/location/memphis-tn/"&gt;Memphis, TN&lt;/a&gt; get
some sort of showing on the leaderboard. There's a rather
&lt;a href="http://mempy.org/"&gt;small group of pythonistas&lt;/a&gt; in the area, but I think we
can do enough to get noticed ;)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; Out of the blue I needed to use an older project of mine (&lt;a href="https://bitbucket.org/bkmontgomery/image-crawler/"&gt;image-crawler&lt;/a&gt;), so I've decided to give it an update as well. These changes will involve PEP8 improvements and the use of &lt;a href="http://pypi.python.org/pypi/requests/"&gt;requests&lt;/a&gt;. These will be some quick fixes, so I've decided to do them first!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/planning-julython/</guid><pubDate>Mon, 02 Jul 2012 02:36:24 +0000</pubDate></item><item><title>Building a Happy Potty</title><link>https://bradmontgomery.net/blog/building-a-happy-potty/</link><description>
&lt;p&gt;This past weekend, I particpated in Memphis's &lt;a href="http://www.launchmemphis.com/2012/05/14/48-hour-launch-on-june-8-10/"&gt;48 Hour Launch&lt;/a&gt;. It's a weekend-long event where anyone can
pitch a business or app idea on a Friday night, try to get enough
people to buy into the idea, and form your team. Then, you spend
the weekend building something, and on Sunday you get a chance to
showcase what you've accomplished.&lt;/p&gt;
&lt;p&gt;I was fortunate enough to team up with a few friends (and some
new ones!) to build an intial version of &lt;a href="http://happypottyapp.com"&gt;Happy
Potty&lt;/a&gt;: A mobile app that helps you find a clean place to... go.
Check it out! It's not quite available yet, but once it is, we hope
you'll have fun using it. Once it's ready, we'll start talking
about it on twiter (via &lt;a href="https://twitter.com/happypotty"&gt;@happypotty&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;One of the neat things about an event like 48hr launch is that
you often get a chance to dive into a few unfamiliar tools. We'd
originally planned to build an iOS app, though few of us felt
comfortable enough with the toolset to risk having nothing to show
at the end of the weekend. So, we decided to build the app using
some familiar tools (HTML &amp;amp; JavaScript), while also diving into
a few new things.&lt;/p&gt;
&lt;h2&gt;PhoneGap&lt;/h2&gt;
&lt;p&gt;I know it's nothing &lt;em&gt;new&lt;/em&gt;, per se, but this was
completely new to me; I've not really done any mobile work, but
PhoneGap really does make prototyping a mobile app increadibly
easy. You get access to a lot of the device's internals, while
using tools that are second nature to any seasoned web
developer.&lt;/p&gt;
&lt;p&gt;I'm sure there are some caveats here, but if you want a working
prototype for simple mobile app, definitely give &lt;a href="http://phonegap.com/"&gt;PhoneGap a
spin&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;jQuery Mobile&lt;/h2&gt;
&lt;p&gt;I really like jQuery, and I've known of &lt;a href="http://jquerymobile.com/"&gt;jQuery
Mobile&lt;/a&gt;'s existance for quite some time, but again, I'd never
played with it. I did run into a few quirks regarding the timing of
events (when is my code executing vs. jQuery mobile), but
all-in-all, this is a really nice toolchain.&lt;/p&gt;
&lt;p&gt;There's also, &lt;a href="http://codiqa.com/"&gt;codiqa&lt;/a&gt; which I'd totally pay for if I
spent much time at all building mobile apps. It's a really nice
drag &amp;amp; drop interface builder using jQuery mobile's
widgets.&lt;/p&gt;
&lt;h2&gt;Parse.com&lt;/h2&gt;
&lt;p&gt;I can't remember where I first heard about Parse, but we almost
passed over it this weekend. I'm really glad we didn't. Parse gives
you a really flexible, easy-to-use online data persistance. We just
used the Javascript API, and in a few minutes (ok, I spent an hour
fooling around with it) we were pushing data out for people to
share.&lt;/p&gt;
&lt;p&gt;Now, I can't comment on what it's like at scale, but it appears
that &lt;a href="https://parse.com/testimonials"&gt;some people like it&lt;/a&gt;, and their
&lt;a href="https://parse.com/plans"&gt;$0
basic plan&lt;/a&gt; gives you quite a bit of leeway for development
&amp;amp; testing.&lt;/p&gt;
&lt;p&gt;We weren't using Backbone.js on this project, but it appears
that Parse plays pretty nicely there, too.&lt;/p&gt;
&lt;h2&gt;Takeaway&lt;/h2&gt;
&lt;p&gt;I'd always toyed around with the idea of getting into mobile app
development, but had never jumped headlong into the fray. I didn't
realize just how accessible these tools are to web developers.&lt;/p&gt;
&lt;p&gt;If you spend your days in HTML &amp;amp; JavaScript land, and you're
curious about mobile app development, do yourself a favor and spend
a weekend playing with these tools. You'll have a working demo
before you know it!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/building-a-happy-potty/</guid><pubDate>Mon, 11 Jun 2012 16:44:51 +0000</pubDate></item><item><title>Easy Custom Vagrant Packages</title><link>https://bradmontgomery.net/blog/easy-custom-vagrant-packages/</link><description>
&lt;p&gt;I've been using Vagrant quite a bit lately, and one of the nice things you can do with it is to define your own package. This makes it easy to share your VMs with others. It's also nice to have the same stuff installed on every VM that you create! So, here's how you create a package.&lt;/p&gt;
&lt;p&gt;To do this, you'll need to Install VirtualBox and Vagrant. (At the time of writing, I'm using &lt;a href="https://www.virtualbox.org/wiki/Download_Old_Builds"&gt;VirtualBox 4.0.16&lt;/a&gt; and &lt;a href="http://vagrantup.com/"&gt;Vagrant 1.0.2&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Once you have those installed, we can get started. I'm using Ubuntu Lucid (10.04, 64-bit), but you could pick your own linux flavor. Look over the list at &lt;a href="http://vagrantbox.es/"&gt;http://vagrantbox.es/&lt;/a&gt;. First, set up a default box:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant box add lucid64 http://files.vagrantup.com/lucid64.box

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That may take a while to download the image. Once it complets, you can see a list of your boxes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant box list

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see one named lucid64 (unless you picked a differenc flavor). Now, intialize a Vagrant configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant init

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check out the created Vagrant file. I've stripped mine down to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant::Config.run do |config|
  config.vm.box = &amp;quot;lucid64&amp;quot;
  config.vm.network :hostonly, &amp;quot;192.168.111.111&amp;quot;
end

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Make sure the IP address for your VM doesn't conflict with any other networks on which your host machine may be connected.&lt;/p&gt;
&lt;p&gt;Create a virtual machine based on the default lucid64 box:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant up

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It'll take a just a little bit of time for the VM to boot, and you'll probably see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant up
[default] VM already created. Booting if it's not already running...
[default] Clearing any previously set forwarded ports...
[default] Forwarding ports...
[default] -- 22 =&amp;gt; 2222 (adapter 1)
[default] Creating shared folders metadata...
[default] Clearing any previously set network interfaces...
[default] Preparing network interfaces based on configuration...
[default] Booting VM...
[default] Waiting for VM to boot. This can take a few minutes.
[default] VM booted and ready for use!
[default] Configuring and enabling network interfaces...
[default] Mounting shared folders...
[default] -- v-root: /vagrant

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, now we want to log into the VM and update it. Run each of the following commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant ssh
$ sudo apt-get update
$ sudo apt-get upgrade -y
$ exit

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, run the following commands to reload vagrant (rebooting the VM) and install the Virtual Box Guest Additions:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant reload
$ vagrant ssh
$ sudo apt-get install build-essential module-assistant linux-headers-$(uname -r) dkms -y
$ wget -c http://download.virtualbox.org/virtualbox/4.0.16/VBoxGuestAdditions_4.0.16.iso
$ sudo mount VBoxGuestAdditions_4.0.16.iso -o loop /mnt
$ sudo sh /mnt/VBoxLinuxAdditions.run --nox11
$ exit

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reload the VM just to make sure all the new kernal modules are used:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant reload

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, you could install any other softward that you want available on all of your virtual machines. For example, I installed curl, git, htop, nmap, and I installed and configured Chef so all of my VMs can easily connect to our Chef server and register themselves. So, install your favorite tools:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo aptitude install curl git-core htop nmap -y

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, create a package that you can use as a base box or distribute to others:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant package

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should now have a package.box file, which you can use as a base box for future VMs. To use this as your base box, run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vagrant box add base package.box

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, when you run vagrant up, your VM will be created from the box you just created!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/easy-custom-vagrant-packages/</guid><pubDate>Mon, 16 Apr 2012 18:44:44 +0000</pubDate></item><item><title>Running with Zombies.</title><link>https://bradmontgomery.net/blog/running-with-zombies/</link><description>
&lt;p&gt;I picked up the &lt;a href="https://www.zombiesrungame.com/"&gt;Zombies, Run!&lt;/a&gt; app today, and I'm pretty excited about it. If you haven't heard about it, check out their video:&lt;/p&gt;
&lt;p&gt;I've only had one run with the game, but the story felt very well-done, and I really like how they've added an extra element of fun to my run. Of course, I'm a fan of all things &amp;quot;&lt;a href="http://en.wikipedia.org/wiki/Zombie_apocalypse#Zombie_apocalypse"&gt;Zombie Apocalypse&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;If you do &lt;a href="http://itunes.apple.com/us/app/zombies-run!/id503519713"&gt;pick up a copy&lt;/a&gt;, spend some time setting up a decent play list. The story unfolds in small bits of dialog, but then launches into your own music. You'll hear a bit more of the story between each song.&lt;/p&gt;
&lt;p&gt;I'm pretty happy about my playlist, even though I only got through the first 17 songs today. Here it is:&lt;/p&gt;
&lt;p&gt;Zombies, Run! Playlist (22 Songs, 1.3 hours)| Song |  Artist  |  Time (seconds) |
| --- | --- | --- |
|  Micro Cuts  |  Muse  |  218  |
|  Them Bones  |  Alice in Chains  |  149  |
|  Name of the Game  |  The Crystal Method  |  255  |
|  Rebirth  |  Boy Hits Car  |  242  |
|  Still Running  |  Chevelle  |  223  |
|  Unreal Tournament - Go Down  |  Epic Games  |  178  |
|  Bloody Cape  |  Deftones  |  217  |
|  Excessive Reaction  |  Nonpoint  |  171  |
|  Cotopaxi  |  The Mars Volta  |  218  |
|  Unreal - Isotoxin  |  Epic Games  |  246  |
|  Darkening Days  |  Switched  |  219  |
|  Licking Cream  |  Sevendust  |  197  |
|  Insatiable  |  Helmet  |  154  |
|  Closer To The Edge  |  30 Seconds To Mars  |  273  |
|  Temptation  |  VAST  |  189  |
|  Jesus Or A Gun  |  Fuel  |  238  |
|  Endure  |  Nonpoint  |  178  |
|  We've Had Enough  |  Alkaline Trio  |  168  |
|  Crawl  |  Staind  |  269  |
|  Jambi  |  Tool  |  448  |
|  Until The End [Explicit]  |  Breaking Benjamin  |  252  |
|  Maybe  |  Faktion  |  296  |&lt;/p&gt;
&lt;h2&gt;Complaints&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Missions don't auto-progress&lt;/strong&gt;. After you finish a mission, the app enters &amp;quot;radio mode&amp;quot;. This means it plays music interspersed with dialog. I like this mode, but I wish I had a way to tell the game to just move to the next mission once I finished on. I mean, I did an 8 mile run, and I only completed two missions! &lt;code&gt;:-(&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The audio mix is buggy&lt;/strong&gt;. I don't know if anyone else has had this problem, but during the second mission, the audio started acting funny. I could hear the dialog just fine, but once a song started playing, the audio was really suppressed until I picked up some supplies. At that point, my music played at a normal volume. This was really annoying because I either had to fumble with the volume on my phone or go halfway through a song without being able to hear.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Takeaway&lt;/h2&gt;
&lt;p&gt;I like the game. It's a neat idea, and I'm pretty curious to see how it unfolds. I'd already been running, but this will definitely make me look forward to that next run just a bit more. If you don't run, it could still be a fun game. Got for a 15 minute walk and give it a try &lt;code&gt;:)&lt;/code&gt;&lt;/p&gt;
&lt;h2&gt;PS:&lt;/h2&gt;
&lt;p&gt;You can export a playlist in iTunes. Just right-click on the playlist, then choose &lt;em&gt;Export&lt;/em&gt; and save it in a plain text file. You get lots of information about each song, but I pulled out the bits I wanted with this awk command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;awk -F\t '{print $1, &amp;quot; --- &amp;quot; $2, &amp;quot; --- &amp;quot;, $8 }' Zombies.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also, here's a map of my run.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/running-with-zombies/</guid><pubDate>Sat, 10 Mar 2012 21:43:49 +0000</pubDate></item><item><title>Streaming Replication in PostgreSQL 9.1</title><link>https://bradmontgomery.net/blog/streaming-replication-in-postgresql-91/</link><description>
&lt;p&gt;Not long ago, I set up &lt;em&gt;synchronous&lt;/em&gt;, streaming replication in PostgreSQL 9.1 in order to build a &lt;em&gt;Hot Standby&lt;/em&gt; system. This is the story of that journey.&lt;/p&gt;
&lt;p&gt;This post is mostly based on the &lt;a href="http://wiki.postgresql.org/wiki/Binary_Replication_Tutorial#5_Minutes_to_Simple_Replication"&gt;5-minute simple replication&lt;/a&gt; tutorial from the PostgreSQL wiki, but with a few modifications and clarifications. There's also lots of good information in the &lt;a href="http://wiki.postgresql.org/wiki/Streaming_Replication"&gt;Streaming Replication wiki&lt;/a&gt; from the PostgreSQL wiki.&lt;/p&gt;
&lt;p&gt;For the remainder of this post, assume that you have a Master at 111.111.111.111 (host named &lt;code&gt;db0&lt;/code&gt;) and a Standby at 222.222.222.222 (host named &lt;code&gt;db1&lt;/code&gt;).&lt;/p&gt;
&lt;h2&gt;Configure the Master&lt;/h2&gt;
&lt;p&gt;In &lt;code&gt;postgresql.conf&lt;/code&gt;, you need to set the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;listen_address = '*'
wal_level = hot_standby
max_wal_senders = 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There is one caveat of running a hot standby system: if the standby crashes, the master will continue to wait for a response on every transaction. This is a Bad Thing. You should adequately monitor this so you know when it happens!&lt;/p&gt;
&lt;p&gt;Now, in &lt;code&gt;pg_hba.conf&lt;/code&gt;, you need to add this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;host replication all 222.222.222.222/32 trust
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This gives your standby server permissions to connect to the master.&lt;/p&gt;
&lt;h2&gt;Configure the Standby&lt;/h2&gt;
&lt;p&gt;Now, on the standby machine, edit &lt;code&gt;postgresql.conf&lt;/code&gt; so that it includes:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hot_standby = on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, add a &lt;code&gt;recovery.conf&lt;/code&gt; file. This ususally goes in PostgreSQL's data directory, which defaults to &lt;code&gt;/var/lib/postgresql/9.1/main&lt;/code&gt; on Ubuntu. This file should contain:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;standby_mode = 'on'
primary_conninfo = 'host=111.111.111.111 application_name=db1'
&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Data Transfer&lt;/h2&gt;
&lt;p&gt;Just to make sure the appropriate processes are running, verify that there's a &lt;code&gt;sender&lt;/code&gt; process that will run on the master and a &lt;code&gt;receiver&lt;/code&gt; process that will run on the standby. You can check for those with &lt;code&gt;ps -ef | grep sender&lt;/code&gt; and &lt;code&gt;ps -ef | grep receiver&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;At this point, we've got to make sure the Standby contains an exact copy of the data from the Master. Shut down the PostgreSQL service on the master and standby (e.g. with a command such as &lt;code&gt;invoke-rc.d postgresql stop&lt;/code&gt;). Then copy data files from the master to the standby. You must exclude any config files if you've put any there (we haven't in this tutorial) as well as the &lt;code&gt;pg_xlog&lt;/code&gt; directory.:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rsync -av --exclude pg_xlog
    /var/lib/postgresql/9.1/main
    222.222.222.222:/var/lib/postgresql/9.1/main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, start the standby and the master (&lt;code&gt;invoke-rc.d postgresql start&lt;/code&gt; on both systems).&lt;/p&gt;
&lt;h2&gt;Verify&lt;/h2&gt;
&lt;p&gt;Now it's time to test this setup. Log into the master (&lt;code&gt;ssh root@111.111.111.111&lt;/code&gt;) and create a sample database:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ su postgres
$ createdb sampledb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, access the postgresql command prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ psql -d sampledb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Create a simple table and populate it with some data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE table samples (
    id integer  PRIMARY KEY,
    name varchar(25),
    stuff text
);

INSERT into samples values (1, 'foo', 'lots of foo');
INSERT into samples values (2, 'bar', 'lots of bar');
INSERT into samples values (3, 'baz', 'lots of baz');
INSERT into samples values (4, 'bin', 'lots of bin');
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, in another shell, log into your standby (&lt;code&gt;ssh root@222.222.222.222&lt;/code&gt;), and fire up the &lt;code&gt;psql&lt;/code&gt; prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ su postgres
$ psql -d sampledb

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Look at a list of the tables:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sampledb=# \d
          List of relations
 Schema |  Name   | Type  |  Owner
--------+---------+-------+----------
 public | samples | table | postgres
(1 row)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then query the &lt;code&gt;samples&lt;/code&gt; table:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sampledb=# select * from samples;
 id | name |    stuff
----+------+-------------
  1 | foo  | lots of foo
  2 | bar  | lots of bar
  3 | baz  | lots of baz
  4 | bin  | lots of bin
(4 rows)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, try to insert some more data:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sampledb=# insert into samples values (5, 'asdf', 'more asdf');
ERROR:  cannot execute INSERT in a read-only transaction

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Whoops! The standby server gives you &lt;em&gt;Read-Only&lt;/em&gt; access to the data.&lt;/p&gt;
&lt;h2&gt;Checking the WAL Status&lt;/h2&gt;
&lt;p&gt;On the master, you can run the following command to see the current WAL write location:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT pg_current_xlog_location();

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then on the standby, you can run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT pg_last_xlog_receive_location();

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT pg_last_xlog_replay_location();

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you get the same values, then replication is up-to-date... otherwise there is some lag. We haven't set up synchronous replication, yet, so in a production environment (with a lot of data getting written to the database) it's possible the Standby would lag behind the master. If you &lt;em&gt;need&lt;/em&gt; both systems to always be idendical, you can flip on &lt;em&gt;synchronous replication&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;Synchronous Replication&lt;/h1&gt;
&lt;p&gt;Enabling Synchronous Replaction just takes a couple of additional steps. Keep in mind though, that this &lt;em&gt;should only be done when there's little latency between the master and the standby&lt;/em&gt;! That's because each query on the master will wait for a responce from the standby, which has to go over the network. I would only configure synchronous replication if both the master and standby are connected over a local (preferably private) network.&lt;/p&gt;
&lt;p&gt;Ok, to make it happen, add the following to &lt;code&gt;postgresql.conf&lt;/code&gt; on the Master:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;synchronous_standby_names = 'db1'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Where the value here is a comma-separated list of your standby servers. You can have more than one, but only the first one will be used. If for some reason the first one dies, the second will become the standby.&lt;/p&gt;
&lt;p&gt;Restart postgresql, then check out the status of your data synchronization (still on the master):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ su posgresql
$ psql

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT usename, application_name, client_addr, client_hostname, sync_state FROM pg_stat_replication;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;usename   | application_name |  client_addr    | client_hostname | sync_state
----------+------------------+-----------------+-----------------+------------
 postgres | db1              | 222.222.222.222 |                 | sync

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, just for fun, go back and insert a bunch of data in your master, then query on your standby machine. You should see the same results on both machines!&lt;/p&gt;
&lt;h1&gt;What Next?&lt;/h1&gt;
&lt;p&gt;Now that you've got this set up, it's probably not a bad idea to read more about what's going on. The official PostgreSQL Docs make a good reference:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.postgresql.org/docs/9.1/interactive/runtime-config-wal.html"&gt;18.5. Write Ahead Log&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.postgresql.org/docs/9.1/interactive/runtime-config-replication.html"&gt;18.6. Replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.postgresql.org/docs/9.1/interactive/high-availability.html"&gt;25. High Availability, Load Balancing, and Replication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Basically the whole &lt;a href="http://www.postgresql.org/docs/9.1/interactive/admin.html"&gt;Server Administration Section&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/streaming-replication-in-postgresql-91/</guid><pubDate>Sat, 03 Mar 2012 15:29:24 +0000</pubDate></item><item><title>Net::HTTPServerException: 412 "Precondition Failed"</title><link>https://bradmontgomery.net/blog/nethttpserverexception-412-precondition-failed/</link><description>
&lt;p&gt;So, I've been working with &lt;a href="http://www.opscode.com/chef/"&gt;Chef&lt;/a&gt; quite a bit, lately. Every once in a while, I'll bootstrap a new node and it fails with this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Net::HTTPServerException: 412 &amp;quot;Precondition Failed&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Every single time this has happened to me, I've had stop and scratch my head. &lt;em&gt;Why can't I remember what causes this!?&lt;/em&gt; Well, in my case it's usually a misspelled cookbook or recipe name. For example, I might have a &lt;code&gt;role&lt;/code&gt; that looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name &amp;quot;sample-server&amp;quot;
description &amp;quot;sample apache server&amp;quot;
run_list &amp;quot;role[apache::default]&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Can you spot the problem? The opscode cookbook for apache is named &lt;strong&gt;apache2&lt;/strong&gt;!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name &amp;quot;sample-server&amp;quot;
description &amp;quot;sample apache server&amp;quot;
run_list &amp;quot;role[apache2::default]&amp;quot;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, one complaint that I have about chef is that &lt;code&gt;Net::HTTPServerException: 412 &amp;quot;Precondition Failed&amp;quot;&lt;/code&gt; should probably say something like &lt;code&gt;Net::HTTPServerException: 412 &amp;quot;Couldn't find cookbook 'apache'&amp;quot;&lt;/code&gt;. Oh well... &lt;em&gt;C'est la vie&lt;/em&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/nethttpserverexception-412-precondition-failed/</guid><pubDate>Sun, 05 Feb 2012 20:15:19 +0000</pubDate></item><item><title>PostgreSQL 9.1.2 via homebrew on OS X 10.7.2</title><link>https://bradmontgomery.net/blog/postgresql-912-via-homebrew-on-os-x-1072/</link><description>
&lt;p&gt;I just picked up a snazzy new Macbook Air, and I'm working on setting up my development
environment(s). For the most part this has been fairly easy. I pull in my repos from
&lt;a href="https://github.com/bradmontgomery"&gt;github&lt;/a&gt; and &lt;a href="https://bitbucket.org/bkmontgomery"&gt;bitbucket&lt;/a&gt;,
and I use &lt;a href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt; and &lt;a href="http://www.pip-installer.org/"&gt;pip&lt;/a&gt;
to organize all my python packages (mostly installing from
&lt;a href="http://www.pip-installer.org/en/latest/requirements.html"&gt;requirements files&lt;/a&gt;). Most of the other
command-line tools get intalled with &lt;a href="http://mxcl.github.com/homebrew/"&gt;homebrew&lt;/a&gt;, and this time around I
decided to install PostgreSQL with homebrew.&lt;/p&gt;
&lt;p&gt;I didn't keep track of all the steps I followed, but I'm pretty sure I just kept all the defaults
while installing. I set up a new database cluster with &lt;code&gt;initdb&lt;/code&gt; and then I created a
local user (no password) and set up a database for one of my Django apps. But then I got this
error when running syncdb:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;OperationalError: could not connect to server: Permission denied
    Is the server running locally and accepting
    connections on Unix domain socket &amp;quot;/var/pgsql_socket/.s.PGSQL.5432&amp;quot;?

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's odd. I did some digging and didn't really find much info that seem relevant
(though there is this ticket: &lt;a href="https://trac.macports.org/ticket/30125"&gt;https://trac.macports.org/ticket/30125&lt;/a&gt;).
However, when I explicitly specified a &lt;code&gt;HOST&lt;/code&gt; value in my django settings, things just started working.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;DATABASES = { 
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'somedb',  
        'USER': 'someuser', 
        'PASSWORD': '', 
        'HOST': 'localhost',
        'PORT': '', 
    }   
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'm not quite sure what's going on here, or if this is a bug in PostgreSQL. Other than that little
snag, everything seems to be working swell.&lt;/p&gt;
&lt;p&gt;Apparently reinstalling &lt;code&gt;psycopg2&lt;/code&gt; also fixes this problem:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install -U psycopg2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thanks to &lt;a href="https://twitter.com/lukeman"&gt;@lukeman&lt;/a&gt; for the tip, and to &lt;a href="https://twitter.com/dstufft"&gt;@dstufft&lt;/a&gt; who helped him!&lt;/p&gt;
&lt;p&gt;:)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/postgresql-912-via-homebrew-on-os-x-1072/</guid><pubDate>Thu, 22 Dec 2011 06:20:39 +0000</pubDate></item><item><title>Chosen.js in the Django admin</title><link>https://bradmontgomery.net/blog/chosenjs-in-the-django-admin/</link><description>
&lt;p&gt;&lt;strong&gt;Update Nov 23, 2013&lt;/strong&gt;: I've written a little app (&lt;a href="https://github.com/bradmontgomery/django-chosenadmin"&gt;django-chosenadmin&lt;/a&gt;) that'll automatically add this to every app.&lt;/p&gt;
&lt;p&gt;Quite some time ago, I ran across the &lt;a href="http://harvesthq.github.com/chosen/"&gt;chosen.js&lt;/a&gt;
plugin for jQuery and Prototype (I'm using the jQuery flavor). My first thought upon seeing
this was, &amp;quot;&lt;em&gt;This would rock in Django's admin app.&lt;/em&gt;&amp;quot; Yet for some reason, I didn't make that
happen.&lt;/p&gt;
&lt;p&gt;Until recently.&lt;/p&gt;
&lt;p&gt;I maintain a project where about 10 people use the admin app extensively. They manage several apps that
have foreign keys to django's &lt;code&gt;User&lt;/code&gt; model. This works well enough, but there are a few thousand
user accounts. That makes the default &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements fairly unwieldy, and the
&lt;code&gt;&amp;lt;select multiple&amp;gt;&lt;/code&gt; widgets are just horrendous!&lt;/p&gt;
&lt;p&gt;Fortunately, the &lt;code&gt;chosen.js&lt;/code&gt; plugin is fairly straighforward to install for the
admin. You'll first need to grab a copy of &lt;code&gt;chosen.js&lt;/code&gt; and (if you want to use them) the default CSS and sprite files.
I just grabbed the most current version from &lt;a href="https://github.com/harvesthq/chosen"&gt;github&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;chosen.js&lt;/code&gt;:
&lt;a href="https://github.com/harvesthq/chosen/blob/master/chosen/chosen.jquery.min.js"&gt;https://github.com/harvesthq/chosen/blob/master/chosen/chosen.jquery.min.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chosen.css&lt;/code&gt;:
&lt;a href="https://github.com/harvesthq/chosen/blob/master/chosen/chosen.css"&gt;https://github.com/harvesthq/chosen/blob/master/chosen/chosen.css&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;chosen-sprite.png&lt;/code&gt;:
&lt;a href="https://github.com/harvesthq/chosen/blob/master/chosen/chosen-sprite.png"&gt;https://github.com/harvesthq/chosen/blob/master/chosen/chosen-sprite.png&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My static files are organized as follows. Note that I put chosen's CSS &amp;amp; sprite
files in a subdirectory named &lt;code&gt;chosen&lt;/code&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;project_directory/
    static/
        css/
            chosen/
                chosen.css
                chosen-sprite.png
        js/
            chosen.js
    

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, you can override the admin app's
&lt;a href="https://github.com/django/django/blob/master/django/contrib/admin/templates/admin/change_form.html"&gt;change_form.html&lt;/a&gt;
template (be sure to get a copy for &lt;em&gt;your&lt;/em&gt; version of django. You can do this by putting your
own copy of the template in your project's templates directory (see your &lt;code&gt;TEMPLATE_DIRS&lt;/code&gt; setting).
For me, that looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;project_directory/
    templates/
        admin/
            change_form.html

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In that template, there's an &lt;code&gt;extrahead&lt;/code&gt; block. At the bottom of that block, you need to include a
link to the plugin and the css file. Since this is a jQuery plugin, you'll also need to include a link to jQuery.
(&lt;em&gt;Even though django's admin comes bundled with jQuery, it's namespaced, so to use a 3rd-party plugin, you need
your own copy of the library. See
&lt;a href="https://docs.djangoproject.com/en/dev/ref/contrib/admin/#modeladmin-media-definitions"&gt;this note&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script 
    src=&amp;quot;https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js&amp;quot; 
    type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script 
    src=&amp;quot;{{ STATIC_URL }}js/chosen.jquery.min.js&amp;quot; 
    type=&amp;quot;text/javascript&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ STATIC_URL }}css/chosen/chosen.css&amp;quot;/&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, you can apply the chosen plugin to all &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
$(document).ready(function() {
    $('select').chosen();
});
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, this has one unfortunate side effect. Django's admin app contains a custom multi-select widget,
that normally looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://files.bradmontgomery.net/images/django-admin-multi-select.png" alt="django admin custom multi-select" /&gt;&lt;/p&gt;
&lt;p&gt;The chosen plugin dutifully mangles the custom widget, which is probably not what you want:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://files.bradmontgomery.net/images/django-admin-broken-multi-select.png" alt="django admin custom multi-select" /&gt;&lt;/p&gt;
&lt;p&gt;The admin app's custom widget includes javascript that gets loaded after the page loads. Luckily, it includes a &lt;code&gt;filtered&lt;/code&gt;
class on the elements to which it is applied. So, we need the &lt;code&gt;chosen&lt;/code&gt; plugin to load &lt;em&gt;after&lt;/em&gt; the admin app's javascript
has run.&lt;/p&gt;
&lt;p&gt;The only what I got that to work was to use &lt;code&gt;setTimeout&lt;/code&gt;. This is definitely a hack, and I'd love to see a more elegant
solution... but it works. So, the previous code to initialize the chosen plugin would be replaced with the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
setTimeout(function() {
    $('select').not('.filtered').chosen();
}, 1000);
&amp;lt;/script&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now the plugin gets loaded about 1 second after the page is finished loading, so you get &lt;em&gt;both&lt;/em&gt; the admin app's
custom multi-select widget and the &lt;code&gt;chosen.js&lt;/code&gt; plugin. There's a visible delay before the plugin gets loaded,
but you could tweak the second argument to minimize this somewhat. For my needs, the benefits of the more usable interface
for &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; elements outweigh the cost of loading the plugin.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/chosenjs-in-the-django-admin/</guid><pubDate>Tue, 13 Dec 2011 16:00:48 +0000</pubDate></item><item><title>Think Different.</title><link>https://bradmontgomery.net/blog/think-different/</link><description>
&lt;p&gt;There's a lot of buzz on the net about &lt;a href="http://www.nytimes.com/2011/10/06/business/steve-jobs-of-apple-dies-at-56.html"&gt;Steve Job's death&lt;/a&gt;, and rightly so. For those of us that work in or around the tech world, he was a giant. I fully attribute his company's products (the iPhone and the iPad) to what I like to think of as a renaissance in computing. These devices have changed the way we think about computers, the web, and what software can be‚Äîmobile &amp;amp; fully integrated into our daily lives. And not just integrated because we have to use this software, but because we want to use it!&lt;/p&gt;
&lt;p&gt;So about Jobs. It's absolutely amazing to me just how many people admire his life and work. He's the quintessential example of the American Dream‚Äîsomething that I think most Americans have forgotten about. So what is it that makes him admirable?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;He was passionate about his work&lt;/li&gt;
&lt;li&gt;He was uncompromising&lt;/li&gt;
&lt;li&gt;He was tenacious. Indomitable.&lt;/li&gt;
&lt;li&gt;He was hard-working.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I can't know for certain, but I suspect that Steve Jobs' guiding desire was not &amp;quot;to get rich&amp;quot;. He wanted to change the world by changing the way people used computers. There's a lesson to us all, here. We need to revive the American Dream, and it's guiding principle should be, &amp;quot;&lt;em&gt;Change the World. Think Different.&lt;/em&gt;&amp;quot;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/think-different/</guid><pubDate>Thu, 06 Oct 2011 13:00:00 +0000</pubDate></item><item><title>SiteSprint III - An update</title><link>https://bradmontgomery.net/blog/sitesprint-iii-an-update/</link><description>
&lt;p&gt;This post, a followup to &lt;a href="/blog/sitesprint-iii-the-reclaimation/"&gt;my previous post&lt;/a&gt;, is now about 2 months overdue. I have to admit, I'm glad I participated in &lt;a href="http://sitesprint.info/"&gt;SiteSprint&lt;/a&gt;, but I'm fairly disappointed in the amount of work that I accomplished. So, without further ado, here's the update on what happened.&lt;/p&gt;
&lt;h2&gt;Success!&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Set up a Django stack running nginx, gunicorn, postgresql&lt;/li&gt;
&lt;li&gt;Set up &lt;a href="http://github.com/stephenmcd/mezzanine"&gt;Mezzanine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Migrated my blog posts and comments from Blogger&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For a weekend of work, this really wasn't too bad. I like Mezzanine for publishing, and I like being in¬†control¬†of my own content and web stack again. ¬†I still have plans for integrating other apps for my own personal use, so having this stack available is worth a lot to me.&lt;/p&gt;
&lt;h2&gt;Failure&lt;/h2&gt;
&lt;p&gt;These are the things that I &lt;em&gt;knew&lt;/em&gt; would be most difficult to accomplish.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Design &amp;amp;¬†Typography.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Modern&lt;/em&gt; HTML&lt;/li&gt;
&lt;li&gt;Housecleaning - fixing imported blog posts&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I really don't like the current design of this blog. ¬†It's close to what I want, but not quite. ¬†The &lt;a href="http://960.gs/"&gt;960&lt;/a&gt;¬†CSS framework comes bundled with¬†Mezzanine, so I tried to use that. ¬†I'm much more familiar with &lt;a href="http://www.blueprintcss.org/"&gt;Blueprint&lt;/a&gt;, and at some point, I'd like to completely revise the layout and design of this site using it.&lt;/p&gt;
&lt;p&gt;I actually did spend quite a bit of time reading about typography (specifically &lt;a href="http://webtypography.net/toc/" title="Go to table of contents"&gt;The Elements¬†of¬†Typographic Style Applied¬†to the¬†Web&lt;/a&gt;). I think I learned quite a bit, but still just enough to know that for the most part, &lt;em&gt;I'm doing it wrong&lt;/em&gt;. I'd like to remedy this, as typography is an incredibly important subject.&lt;/p&gt;
&lt;p&gt;I'd also planned on using more modern markup for the layout of this site with elements such as &lt;nav&gt;, &lt;header&gt;, and &lt;footer&gt; for page layout and &lt;article&gt; for blog entries. ¬†In addition, many of the entries imported from Blogger are littered with horrendous markup. ¬†These posts really need to be cleaned up, especially since much of the code snippets are now completely unreadable.&lt;/p&gt;
&lt;p&gt;So, as you can see, there's still a lot of work to be done, and I need to &lt;em&gt;buckle down&lt;/em&gt; and get this stuff done.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/sitesprint-iii-an-update/</guid><pubDate>Mon, 24 Jan 2011 15:56:59 +0000</pubDate></item><item><title>Fix: Leopard libedit detected.</title><link>https://bradmontgomery.net/blog/fix-leopard-libedit-detected/</link><description>
&lt;p&gt;If you use &lt;a href="http://ipython.scipy.org/"&gt;iPython&lt;/a&gt; on OS X, you've probably seen this: &lt;code&gt;Leopard libedit detected.&lt;/code&gt;, and then noticed some very quirky behavior related to spacing, and command history. In short, that behavior is related to default version of the &lt;code&gt;readline&lt;/code&gt; library bundled in OS X (It's not GNU readline).&lt;/p&gt;
&lt;p&gt;If you use pip and virtualenv, just instalilng readline doesn't help. So, how do you fix this?¬†Well, the &lt;em&gt;quick and dirty&lt;/em&gt; way to fix this is with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;easy_install -a readline
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For the whole story, see this discussion:
&lt;a href="https://groups.google.com/forum/#!topic/python-virtualenv/BEQAurh9EZw/discussion"&gt;https://groups.google.com/forum/#!topic/python-virtualenv/BEQAurh9EZw/discussion&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Many thanks to &lt;a href="http://twitter.com/idangazit/"&gt;@idangazit&lt;/a&gt; for &lt;a href="http://twitter.com/idangazit/status/22268724274798593"&gt;this tweet&lt;/a&gt; which helped me find this &amp;quot;&lt;em&gt;solution&lt;/em&gt;&amp;quot;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/fix-leopard-libedit-detected/</guid><pubDate>Wed, 05 Jan 2011 15:58:04 +0000</pubDate></item><item><title>SiteSprint III - The Reclaimation</title><link>https://bradmontgomery.net/blog/sitesprint-iii-the-reclaimation/</link><description>
&lt;p&gt;My personal website is a disgrace. As a web developer, I find it embarrassing that my own site is a cobbled-together mess of PHP and static html. Only slightly less embarrassing is my blog, which is obviously hosted on Blogger. Even though Blogger has recently added a few new themes, I'm still unhappy with the look-and-feel of my blog. So, since &lt;a href="http://sitesprint.info/"&gt;SiteSprint III&lt;/a&gt; has officially started, I'm taking this opportunity to Reclaim‚Ñ¢ my personal website.&lt;/p&gt;
&lt;h2&gt;Tech Specs - the easy part&lt;/h2&gt;
&lt;p&gt;I've thoroughly enjoyed using Django over the last couple of years, and as any self-respecting djangonaught would, I'm moving my site over to that platform. Here's the planned tech:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nginx + gunicorn + postgresql on rackspace cloud&lt;/li&gt;
&lt;li&gt;&lt;a href="http://github.com/stephenmcd/mezzanine"&gt;mezzanine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;a revamp of my own &lt;a href="http://bitbucket.org/bkmontgomery/django-notes"&gt;django-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Design - the not so easy part&lt;/h2&gt;
&lt;p&gt;I'm not a graphic designer by any means, but I know I can do better than what I've got. I like Minimal designs, and I'd really like to focus on typography in my site. I've still got a lot of homework to do here. I also want make use of as much HTML5 as is feasible. In the next few days I'll be reading up on:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.modernizr.com/"&gt;modernizr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;font foundries (&lt;a href="http://typekit.com/"&gt;typekit&lt;/a&gt;, &lt;a href="http://www.typotheque.com/"&gt;Typotheque&lt;/a&gt;, or &lt;a href="http://kernest.com/"&gt;kernest&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://code.google.com/p/typogrify/"&gt;django-typogrify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Wish me luck, and feel free to point out any tools I might find interesting.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/sitesprint-iii-the-reclaimation/</guid><pubDate>Tue, 02 Nov 2010 17:22:00 +0000</pubDate></item><item><title>Python: stray commas cause tuples?</title><link>https://bradmontgomery.net/blog/python-stray-commas-cause-tuples/</link><description>
&lt;p&gt;As I try to debug a strange problem in a Django view, I notice a stray comma after a dictionary definition. So I jump over to a python shell, and guess what? Ending a literal dict with a comma creates a tuple.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; d = {1:'foo'},  
&amp;gt;&amp;gt;&amp;gt; type(d)  
&amp;lt;type 'tuple'&amp;gt;  
&amp;gt;&amp;gt;&amp;gt; d  
({1: 'foo'},)  
&amp;gt;&amp;gt;&amp;gt;   

&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/python-stray-commas-cause-tuples/</guid><pubDate>Fri, 15 Oct 2010 11:26:00 +0000</pubDate></item><item><title>A case for values_list</title><link>https://bradmontgomery.net/blog/a-case-for-values_list/</link><description>
&lt;p&gt;Here's the Scenario: I have a model (lets call it Contact) with two Foreign Keys, one of which is related to User in Django's contrib.auth app. I need to build a form that lets me select an existing object, and a new user.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class ContactType(Model):  
    name = CharField(max_length=128)  
  
class Contact(Model):  
    user = ForeignKey(User)  
    contact_type = ForeignKey(ContactType)  
    # possibly more fields...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I need to select from existing models, so my first thought might be to build a form that uses two &lt;code&gt;[ModelChoiceField](http://docs.djangoproject.com/en/1.2/ref/forms/fields/#django.forms.ModelChoiceField)&lt;/code&gt;'s. I also want to modify the way that my form displays each choice, so I &lt;em&gt;could&lt;/em&gt; extend ModelChoiceField by overriding the &lt;code&gt;label_from_instance&lt;/code&gt; method:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class UserModelChoiceField(ModelChoiceField):  
    def label\_from\_instance(self, obj):  
        return &amp;quot;%s (%s)&amp;quot;%(obj.get_full_name(), obj.username)  
  
class ContactModelChoiceField(ModelChoiceField):  
    def label\_from\_instance(self, obj):  
        return '%s (%s)' % (obj.type, obj.user.get_full_name())  
  
class CopyContactForm(forms.Form):  
    contact = ContactModelChoiceField(Contact.objects.all())  
    new_user = UserModelChoiceField(User.objects.all().order_by('first\_name', 'last\_name', 'username')) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This actually provides a solution to my original problem, but it's not very efficient. Notice that both the &lt;code&gt;UserModelChoiceField&lt;/code&gt; and the &lt;code&gt;ContactModelChoiceField&lt;/code&gt; call methods on each object with the latter accessing a foreign key. In an app with 600 Users and 600 Contacts, this form would generate around 1200 queries!&lt;/p&gt;
&lt;p&gt;There's actually a very efficient way to generate the same sort of form using &lt;code&gt;[values\_list](http://docs.djangoproject.com/en/dev/topics/db/optimization/#use-queryset-values-and-values-list)&lt;/code&gt;, especially, when you realize that the form really just needs to contain something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select&amp;gt;  
&amp;lt;option value=&amp;quot;1&amp;quot;&amp;gt;John Doe&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;2&amp;quot;&amp;gt;Jane Doe&amp;lt;/option&amp;gt;  
  
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So a more efficient solution to my problem looks something like the code below, which yields two queries.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class CopyContactForm(forms.Form):  
    contact = forms.ChoiceField(choices=[(c[0], '%s (%s %s)'%(c[1],c[2],c[3])) \  
        for c in Contact.objects.values_list('id', 'type\_\_name', 'user\_\_first\_name', 'user\_\_last\_name')])  
    new_user = forms.ChoiceField(choices=[(u[0], '%s %s (%s)'%(u[1],u[2],u[3])) \  
        for u in User.objects.values_list('id', 'first\_name', 'last\_name', 'username')])  

&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-case-for-values_list/</guid><pubDate>Mon, 19 Jul 2010 16:25:00 +0000</pubDate></item><item><title>PyGraphviz on OS X (SL) with virtualenv</title><link>https://bradmontgomery.net/blog/pygraphviz-on-os-x-sl-with-virtualenv/</link><description>
&lt;p&gt;There's this cool project called &lt;a href="http://github.com/django-extensions/"&gt;django-extensions&lt;/a&gt; that (among other things) adds a lot of commands to django's &lt;code&gt;manage.py&lt;/code&gt; offerings. One of which is &lt;code&gt;./manage.py graph_models [appname]&lt;/code&gt; which will generate a nice graph displaying the relationships among all of your Models. This comand needs pyGraphViz, though, and I was a little disappointed when i discovered I couldn't install pyGraphViz with &lt;code&gt;pip install pygraphviz&lt;/code&gt;. (ok, a lot disappointed).&lt;/p&gt;
&lt;p&gt;I eventually got this working, and here's how:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;First, install the development snapshot of GraphViz: &lt;a href="http://graphviz.org/Download_macos.php"&gt;http://graphviz.org/Download_macos.php&lt;/a&gt; (I used graphviz-2.27.20100713.0445.pkg)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, download the pygraphviz source code from &lt;a href="http://networkx.lanl.gov/pygraphviz/download.html"&gt;http://networkx.lanl.gov/pygraphviz/download.html&lt;/a&gt;. (Again, I got pygraphviz-0.99.1/ )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Here's the fun part. You need to edit pygraphviz's setup.py file (located at pygraphviz-0.99.1/setup.py for me). Find the following two lines of code:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;  
library_path=None  
include_path=None
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And change them to&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
library_path='/usr/local/lib/graphviz/'  
include_path='/usr/local/include/graphviz/'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You also might want to verify that the above directories exist.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Now, active your virtualenv (workon &amp;lt;whatever_your_virtualenv_is_named&amp;gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finally, just run &lt;code&gt;python setup.py install&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's it! This installed pygraphviz in my activated virtualenv, and I can now use &lt;code&gt;./manage.py graph_models&lt;/code&gt; to my heart's desire.&lt;/p&gt;
&lt;p&gt;I should mention that I'm using &lt;a href="http://pypi.python.org/pypi/distribute"&gt;distribute&lt;/a&gt; (and it may be safe to assume that if you're using virtualenv, you're probably also using distribute).&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pygraphviz-on-os-x-sl-with-virtualenv/</guid><pubDate>Wed, 14 Jul 2010 22:14:00 +0000</pubDate></item><item><title>Vim Syntax highlighting for Apache Config Files</title><link>https://bradmontgomery.net/blog/vim-syntax-highlighting-for-apache-config-files/</link><description>
&lt;p&gt;I use Django with Apache and mod_wsgi. Each project that I work on has different apache config files, so I like to keep those in the same mercurial repo that contains my django project's code.&lt;/p&gt;
&lt;p&gt;For some time now, it's been bugging me that vim doesn't do syntax highlighting for those apache configs (nor the wsgi files). I finally decided to do something about it, and I'm glad I did, because it's a fairly simple fix:&lt;/p&gt;
&lt;p&gt;My project directory layout often look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
~/django_projects/projectname/  
    __init__.py  
    apache_configs/  
        projectname  
        projectname.wsgi  
    manage.py  
    settings.py  
    myapp/  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vim does syntax highlighting for apache files based on their path. To get vim to recognize the files in the &lt;em&gt;apache_configs&lt;/em&gt; directory, you need to edit (or create) &lt;em&gt;~/.vim/filetype.vim&lt;/em&gt; and add the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
au BufNewFile,BufRead ~/django_projects/de_concierge/apache_configs/*wsgi setf python  
au BufNewFile,BufRead ~/django_projects/de_concierge/apache_configs/* setf apache   

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You'd have to add variants of this for each separate project, but this works well for me.&lt;/p&gt;
&lt;p&gt;There's several other ways you can modify this, and the solution that I used comes from &lt;a href="http://groups.google.com/group/vim_mac/browse_thread/thread/26c3a097e6e69c5f"&gt;this thread on the vim_mac mailing list&lt;/a&gt;. (There's also a lot of good info in &lt;em&gt;:help new-filetype&lt;/em&gt; ).&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/vim-syntax-highlighting-for-apache-config-files/</guid><pubDate>Wed, 09 Jun 2010 09:12:00 +0000</pubDate></item><item><title>Convert Tables to Unordered Lists</title><link>https://bradmontgomery.net/blog/convert-tables-to-unordered-lists/</link><description>
&lt;p&gt;If you've ever had the pleasure of working with old HTML content, you've surely seen some &lt;table&gt;'s where they don't belong. Lately, that's the sort of thing I've been dealing with on a regular basis, and for some reason, I often see a list of information in a table.&lt;/p&gt;
&lt;p&gt;Wouldn't it be nice if there were an easy way to turn these tables into unordered lists? Thanks to &lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;BeautifulSoup&lt;/a&gt;, this is really not that difficult.&lt;/p&gt;
&lt;p&gt;Here's the code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from BeautifulSoup import BeautifulSoup, Tag   
  
def table2ul(content, flatten_rows=False):  
    &amp;quot;&amp;quot;&amp;quot;   
 Convert a &amp;lt;table&amp;gt; into a &amp;lt;ul&amp;gt;.  
 Each cell, &amp;lt;td&amp;gt;, gets converted into a list item &amp;lt;li&amp;gt; unless  
 the flatten\_rows paramter is given. In this case, all content from   
 a table row, &amp;lt;tr&amp;gt;, gets converted into a list item.  
 &amp;quot;&amp;quot;&amp;quot;  
    soup = BeautifulSoup(content, convertEntities=BeautifulSoup.HTML_ENTITIES, smartQuotesTo=&amp;quot;html&amp;quot;)  
  
    for table in soup.findAll('table'):  
        ul = Tag(soup, 'ul')  
  
        if flatten_rows:  
            for row in table.findAll('tr'):  
                li = Tag(soup, 'li')  
                for cell in row.findAll('td'):  
                    li.contents.extend(cell.contents)  
                ul.append(li)  
        else:  
            for cell in table.findAll('td'):  
                li = Tag(soup, 'li')  
                li.contents = cell.contents  
                ul.append(li)  
        table.replaceWith(ul)  
  
    return soup.prettify()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, suppose we had the following HTML snippet:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;Some heading&amp;lt;/h1&amp;gt;  
&amp;lt;p&amp;gt;Some paragraph with stuff in it&amp;lt;/p&amp;gt;  
&amp;lt;table&amp;gt;  
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt; row 1, &amp;lt;strong&amp;gt;col1&amp;lt;/strong&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;row 1, col2&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;  
&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt; row 2, col1&amp;lt;/td&amp;gt;&amp;lt;td&amp;gt;&amp;lt;em&amp;gt;&amp;lt;a href=&amp;quot;http://google.com&amp;quot;&amp;gt;row 2&amp;lt;/a&amp;gt;&amp;lt;/em&amp;gt;, col2&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;  
&amp;lt;/table&amp;gt;  
  
&amp;lt;h2&amp;gt;A second heading&amp;lt;/h2&amp;gt;  
&amp;lt;p&amp;gt;more peee&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Passing this in to &lt;strong&gt;table2ul&lt;/strong&gt; would convert each cell into a list item, &lt;li&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; table2ul(content)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;  
 Some heading  
&amp;lt;/h1&amp;gt;  
&amp;lt;p&amp;gt;  
 Some paragraph with stuff in it  
&amp;lt;/p&amp;gt;  
&amp;lt;ul&amp;gt;  
 &amp;lt;li&amp;gt;  
  row 1,  
  &amp;lt;strong&amp;gt;  
   col1  
  &amp;lt;/strong&amp;gt;  
 &amp;lt;/li&amp;gt;  
 &amp;lt;li&amp;gt;  
  row 1, col2  
 &amp;lt;/li&amp;gt;  
 &amp;lt;li&amp;gt;  
  row 2, col1  
 &amp;lt;/li&amp;gt;  
 &amp;lt;li&amp;gt;  
  &amp;lt;em&amp;gt;  
   &amp;lt;a href=&amp;quot;http://google.com&amp;quot;&amp;gt;  
    row 2  
   &amp;lt;/a&amp;gt;  
  &amp;lt;/em&amp;gt;  
  , col2  
 &amp;lt;/li&amp;gt;  
&amp;lt;/ul&amp;gt;  
&amp;lt;h2&amp;gt;  
 A second heading  
&amp;lt;/h2&amp;gt;  
&amp;lt;p&amp;gt;  
 more peee  
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;But what if we don't want each &lt;td&gt; converted into an &amp;lt;li%gt&amp;gt;? What if we want all the content from entire row in an &lt;li&gt;? In that case, just set the optional &lt;strong&gt;flatten_rows&lt;/strong&gt; parameter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; table2ul(content, flatten_rows=True)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;h1&amp;gt;  
 Some heading  
&amp;lt;/h1&amp;gt;  
&amp;lt;p&amp;gt;  
 Some paragraph with stuff in it  
&amp;lt;/p&amp;gt;  
&amp;lt;ul&amp;gt;  
 &amp;lt;li&amp;gt;  
  row 1,  
  &amp;lt;strong&amp;gt;  
   col1  
  &amp;lt;/strong&amp;gt;  row 1, col2  
 &amp;lt;/li&amp;gt;  
 &amp;lt;li&amp;gt;  
  row 2, col1  
  &amp;lt;em&amp;gt;  
   &amp;lt;a href=&amp;quot;http://google.com&amp;quot;&amp;gt;  
    row 2  
   &amp;lt;/a&amp;gt;  
  &amp;lt;/em&amp;gt;  
  , col2  
 &amp;lt;/li&amp;gt;  
&amp;lt;/ul&amp;gt;  
&amp;lt;h2&amp;gt;  
 A second heading  
&amp;lt;/h2&amp;gt;  
&amp;lt;p&amp;gt;  
 more peee  
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This has been somewhat useful for me. Hope it's useful for you!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/convert-tables-to-unordered-lists/</guid><pubDate>Fri, 28 May 2010 15:39:00 +0000</pubDate></item><item><title>Pretty options for Django's auth.User</title><link>https://bradmontgomery.net/blog/pretty-options-for-djangos-authuser/</link><description>
&lt;p&gt;Several of my Django Apps have Foreign Key relationships to django.contrib.auth.model.User. In Django's admin app, these show up a select elements displaying the username attribute. For some people, that may be OK, but for most of the people with which I work, it's not. We want to see &lt;em&gt;prettier&lt;/em&gt; options, i.e. each User's full name as the options in that select element.&lt;/p&gt;
&lt;p&gt;So, here's how it works. We override the ModelChoiceField (for ForeignKeys) and the ModelMultipleChoiceField (for ManyToMany Fields):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.forms import ModelChoiceField, ModelMultipleChoiceField  
  
class UserModelChoiceField(ModelChoiceField):  
    '''   
 A ModelChoiceField to represent User   
 select boxes in the Auto Admin   
 '''  
    def label\_from\_instance(self, obj):  
        return &amp;quot;%s (%s)&amp;quot;%(obj.get_full_name(), obj.username)  
  
class UserModelMultipleChoiceField(ModelMultipleChoiceField):  
    '''   
 Similar to UserModelChoiceField, provide a nicer-looking   
 list of user names for ManyToMany Relations...  
 '''  
    def label\_from\_instance(self, obj):  
        return &amp;quot;%s (%s)&amp;quot;%(obj.get_full_name(), obj.username)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, to customize the admin, you need to create a custome ModelForm for your Model. So, if I had a Model that looked like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyModel(models.Model):  
    user = models.ForeignKey(User)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You'd need to create the following ModelForm:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyModelAdminForm(forms.ModelForm):  
    user = UserModelChoiceField(User.objects.all().order_by('first\_name', 'last\_name', 'username'))  
  
    class Meta:  
        model = MyModel  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, when you create a ModelAdmin class for the MyModel, you specify the above form:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from models import MyModel  
from forms import MyModelAdminForm  
  
class MyModelAdmin(admin.ModelAdmin):  
    form = MyModelAdminForm  
admin.site.register(MyModel, MyModelAdmin)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, the choices for User objects in the admin should contain the user's full name and their username in parenthesis.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pretty-options-for-djangos-authuser/</guid><pubDate>Thu, 22 Apr 2010 09:07:00 +0000</pubDate></item><item><title>Dealing with Unicode and ASCII using Python</title><link>https://bradmontgomery.net/blog/dealing-with-unicode-and-ascii-using-python/</link><description>
&lt;p&gt;Dealing with Character Encodings is (sometimes) hard. It's especially confusing for those who've never done it before. Converting text from unicode to ascii can be tricky.&lt;/p&gt;
&lt;p&gt;A lot of times, I'll import some data from a text file, and I just want to convert everything to ASCII and ignore anything that's not ascii (like MS Word's smart quotes). Luckily, this is fairly easy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mystring = mystring.decode('ascii', 'ignore')
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There's tons of great Python resources (and code!) for all your character encoding needs. In no particular order, here are a few I've found:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.pyzine.com/Issue008/Section_Articles/article_Encodings.html"&gt;A Crash Course in Character Encoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://diveintopython.org/xml_processing/unicode.html"&gt;Dive Into Python's Chapter on Unicode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;Beautiful Soup&lt;/a&gt; gives you [Unicode, Dammit](http://www.crummy.com/software/BeautifulSoup/documentation.html#Beautiful Soup Gives You Unicode, Dammit) and there's the companion: &lt;a href="http://www.crummy.com/cgi-bin/msm/map.cgi/ASCII,+Dammit"&gt;ASCII, Dammit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;There's also &lt;a href="http://effbot.python-hosting.com/file/stuff/sandbox/text/unaccent.py"&gt;unaccent.py&lt;/a&gt;, which seems to convert various unicode characters to their ascii equivalent.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's probably more, but most of these have helped me get the job done.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/dealing-with-unicode-and-ascii-using-python/</guid><pubDate>Thu, 25 Mar 2010 15:21:00 +0000</pubDate></item><item><title>On select_related()</title><link>https://bradmontgomery.net/blog/on-select_related/</link><description>
&lt;p&gt;If you use &lt;a href="http://www.djangoproject.com"&gt;Django&lt;/a&gt;, and your models have relationships that span across multiple tables, you need to read this: &lt;a href="http://docs.djangoproject.com/en/dev/ref/models/querysets/#id4"&gt;http://docs.djangoproject.com/en/dev/ref/models/querysets/#id4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;select_related() is awesome.&lt;/p&gt;
&lt;p&gt;That is all.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/on-select_related/</guid><pubDate>Tue, 23 Mar 2010 15:02:00 +0000</pubDate></item><item><title>Building PIL on OS X: Snow Leopard</title><link>https://bradmontgomery.net/blog/building-pil-on-os-x-snow-leopard/</link><description>
&lt;p&gt;There are &lt;a href="http://jetfar.com/libjpeg-and-python-imaging-pil-on-snow-leopard/"&gt;several&lt;/a&gt; &lt;a href="http://stackoverflow.com/questions/1438270/installing-python-imaging-library-pil-on-snow-leopard-with-updated-python-2-6-2"&gt;places&lt;/a&gt; &lt;a href="http://proteus-tech.com/blog/cwt/install-pil-in-snow-leopard/"&gt;online&lt;/a&gt; that discuss problems installing PIL on Mac OS X Snow Leopard&lt;/p&gt;
&lt;p&gt;This is how I got it to work.&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;Install lib jpeg using &lt;a href="http://github.com/mxcl/homebrew"&gt;homebrew&lt;/a&gt; (which is super-aweseome!)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;brew intall jpeg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;.This installs the library into&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/Cellar/jpeg/7
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="4"&gt;
&lt;li&gt;
&lt;p&gt;Install &lt;a href="http://www.freetype.org/"&gt;libfreetype&lt;/a&gt; the old-fashioned way (./configure, make, sudo make install). I used &lt;em&gt;freetype-2.1.10.pre-20050511&lt;/em&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download, unpack PIL (I used &lt;a href="http://effbot.org/downloads/Imaging-1.1.6.tar.gz"&gt;Imaging-1.1.6&lt;/a&gt;). I had to make the following changes to setup.py&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;FREETYPE_ROOT = &amp;quot;/usr/local&amp;quot;  
JPEG_ROOT = (&amp;quot;/usr/local/Cellar/jpeg/7/lib&amp;quot;, &amp;quot;/usr/local/Cellar/jpeg/7/include&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="8"&gt;
&lt;li&gt;Then, build PIL:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;python setup.py build_ext -i
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="10"&gt;
&lt;li&gt;If the build works without any errors, you can run the tests:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;python selftest.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which should yield the following: &lt;strong&gt;57 tests passed.&lt;/strong&gt;&lt;/p&gt;
&lt;ol start="12"&gt;
&lt;li&gt;(optional) I like to use virtualenv, so I activate that:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;workon myproject
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="14"&gt;
&lt;li&gt;Install PIL:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;python setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At this point, code like the following works for me:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import Image  
im = Image.open(&amp;quot;/path/to/pretty/picture.jpg&amp;quot;)  
im.show()
&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/building-pil-on-os-x-snow-leopard/</guid><pubDate>Thu, 25 Feb 2010 15:40:00 +0000</pubDate></item><item><title>Specialization</title><link>https://bradmontgomery.net/blog/specialization/</link><description>
&lt;p&gt;Thanks to &lt;a href="http://twitter.com/mxcl/"&gt;@mxcl&lt;/a&gt; for &lt;a href="http://twitter.com/mxcl/status/9585025686"&gt;tweeting a link&lt;/a&gt; to this: &lt;a href="http://gist.github.com/313640"&gt;http://gist.github.com/313640&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Things I've done (or similar)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;change a diaper&lt;/li&gt;
&lt;li&gt;plan an invasion (warcraft counts, right?)&lt;/li&gt;
&lt;li&gt;butcher a ~~hog~~ squirrel&lt;/li&gt;
&lt;li&gt;design a building (with legos!)&lt;/li&gt;
&lt;li&gt;write a ~~sonnet~~ song&lt;/li&gt;
&lt;li&gt;balance accounts&lt;/li&gt;
&lt;li&gt;build a ~~wall~~ fence&lt;/li&gt;
&lt;li&gt;comfort the dying&lt;/li&gt;
&lt;li&gt;take orders&lt;/li&gt;
&lt;li&gt;give orders&lt;/li&gt;
&lt;li&gt;cooperate&lt;/li&gt;
&lt;li&gt;act alone&lt;/li&gt;
&lt;li&gt;solve equations&lt;/li&gt;
&lt;li&gt;analyze a new problem&lt;/li&gt;
&lt;li&gt;pitch manure&lt;/li&gt;
&lt;li&gt;program a computer&lt;/li&gt;
&lt;li&gt;cook a tasty meal (yum!)&lt;/li&gt;
&lt;li&gt;fight efficiently (yay for taekwondo!)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;...not quite there yet:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;conn a ship&lt;/li&gt;
&lt;li&gt;set a bone&lt;/li&gt;
&lt;li&gt;die gallantly (here's hoping!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hooray for Humanity!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/specialization/</guid><pubDate>Wed, 24 Feb 2010 13:50:00 +0000</pubDate></item><item><title>Adventures in Bread-Baking: Part 1</title><link>https://bradmontgomery.net/blog/adventures-in-bread-baking-part-1/</link><description>
&lt;p&gt;Last weekend I attempted to make Mark Bittman's &lt;a href="http://www.nytimes.com/2008/10/08/dining/081mrex.html?_r=1&amp;amp;ref=dining"&gt;Speedy No-Knead Bread&lt;/a&gt;... sort of. Being the adventurous experimenter that I am, I altered the ingredients:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2 cups whole-grain flour + 1 cup all purpose flour&lt;/li&gt;
&lt;li&gt;2 cups of really warm water (instead of the 1.5 cups)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I followed the rest of the recipe perfectly. However, the results were really unsatisfactory. The center was super dense and gooey, and the bread had a really really hard crust (ok, I also cooked it an extra 30 minutes because of the gooey center).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I didn't take any pictures, because the results were so embarrassing.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Here's what I learned: &lt;strong&gt;Bread Flour != All Purpose Flour&lt;/strong&gt; (for the non-programmer, that means they are NOT the same thing!)&lt;/p&gt;
&lt;p&gt;Fortunately, there are &lt;a href="http://www.ehow.com/how_2316531_make-bread-flour.html"&gt;several&lt;/a&gt; &lt;a href="http://www.nestle.com/NutritionHealthAndWellness/Cooking/AskGilla/CookingTips/Bread+flour.htm"&gt;articles&lt;/a&gt; online that expound on the &lt;a href="http://www.ochef.com/97.htm"&gt;differences between bread flour and all-purpose flour&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The secret is &lt;em&gt;wheat gluten&lt;/em&gt; (or &lt;em&gt;gluten additive&lt;/em&gt;). Essentially, you must add 1tsp to each cup of all-purpose flour to create bread flour. Unfortunately, this is not something I keep. So part 2 will have to wait until I go shopping...&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/adventures-in-bread-baking-part-1/</guid><pubDate>Sat, 23 Jan 2010 09:57:00 +0000</pubDate></item><item><title>Add JSON syntax highlighting in Vim on OS X</title><link>https://bradmontgomery.net/blog/add-json-syntax-highlighting-in-vim-on-os-x/</link><description>
&lt;p&gt;This is how I got Vim to do syntax highlighting for JSON files (Max OS X - Snow Leopard)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the syntax file from &lt;a href="http://www.vim.org/scripts/script.php?script_id=1945"&gt;http://www.vim.org/scripts/script.php?script_id=1945&lt;/a&gt;. (I got &lt;strong&gt;json.vim&lt;/strong&gt; version 0.4)&lt;/li&gt;
&lt;li&gt;If it doesn't already exist, create a &lt;strong&gt;.vim/ftplugin&lt;/strong&gt; in your home directory.&lt;/li&gt;
&lt;li&gt;Put &lt;strong&gt;json.vim&lt;/strong&gt; into &lt;strong&gt;.vim/ftplugin&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Add the following lines in your &lt;strong&gt;.vimrc&lt;/strong&gt; file (mine is located at ~/.vimrc)&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;au BufRead,BufNewFile *.json set filetype=json  
au! Syntax json source /Users/brad/.vim/ftplugin/json.vim
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that you'll have to change the path to your json.vim file so that it works on your computer.
5. Now, got edit a .json file!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/add-json-syntax-highlighting-in-vim-on-os-x/</guid><pubDate>Fri, 15 Jan 2010 15:03:00 +0000</pubDate></item><item><title>Resize the iTunes Window</title><link>https://bradmontgomery.net/blog/resize-the-itunes-window/</link><description>
&lt;p&gt;My Macbook Pro is my main machine. At the office, I connect it to a 20&amp;quot; Cinema display. At home, I connect it to a 24&amp;quot; Samsung Monitory (Model 2494SW Glossy Black, which I really like, btw.)&lt;/p&gt;
&lt;p&gt;There's a down-side to all this, though. I mostly just notice it with iTunes. When I'm working on the laptop without an external monitor, my iTunes window is larger than my screen :( Unfortunately, clicking the Maximize button doesn't do what I want (which is to make the window fit in the screen. So here's a little Applescript to to fix it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tell application &amp;quot;iTunes&amp;quot;  
 set the bounds of the first window to {50, 50, 1024, 640}  
end tell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The arguments are the distance from the top and left of the screen (both 50), the width of the iTunes window (1024) followed by its height (640).&lt;/p&gt;
&lt;p&gt;I just saved this in a file called &lt;em&gt;resize_itunes.scpt&lt;/em&gt; and put it in my &lt;em&gt;Documents/Applescripts/&lt;/em&gt; folder. I'm a big fan of &lt;a href="http://www.blacktree.com/projects/quicksilver.html"&gt;Quicksilver&lt;/a&gt;, so when I need to resize my iTunes window, I just activate Quicksilver (Ctrl+Spacebar), type in &amp;quot;resize&amp;quot; (which finds the applescript file), and then hit &amp;quot;enter&amp;quot; to run the script. Easy.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/resize-the-itunes-window/</guid><pubDate>Thu, 14 Jan 2010 09:47:00 +0000</pubDate></item><item><title>Ubuntu Audio, YES! Windows XP, NO.</title><link>https://bradmontgomery.net/blog/ubuntu-audio-yes-windows-xp-no/</link><description>
&lt;p&gt;I run a dual-boot Ubuntu64&lt;a href="#one"&gt;[1]&lt;/a&gt; and Windows XP system. The windows partition really exists for a &lt;a href="http://en.wikipedia.org/wiki/Unreal_Tournament_2004"&gt;single purpose&lt;/a&gt;, and I occasionally just reboot the machine, choose the XP partition from the Grub menu, and all is well.&lt;/p&gt;
&lt;p&gt;However, a few weeks ago, I upgraded Ubuntu, but when I rebooted the machine and chose the XP partition, I noticed the sound&lt;a href="#two"&gt;[2]&lt;/a&gt; stopped working. What!? The audio worked fine in ubuntu!&lt;/p&gt;
&lt;p&gt;The Secret: &lt;strong&gt;I had to &lt;em&gt;completely power down the machine&lt;/em&gt; before booting into Windows.&lt;/strong&gt; Then, audio works just fine.&lt;/p&gt;
&lt;p&gt;Unfortunately, I didn't discover this until I'd re-installed the windows drivers (which didn't work), reformatted/reinstalled windows and all drivers (which only worked because I powered down in the process), &lt;a href="http://www.howtogeek.com/howto/ubuntu/reinstall-ubuntu-grub-bootloader-after-windows-wipes-it-out/"&gt;fixed my grub boot loader&lt;/a&gt;, and incorrectly assumed the problem was fixed until I booted back into Ubuntu and back into Windows only to find that the problem remained.&lt;/p&gt;
&lt;p&gt;Sheesh. So, if this has happened to you, I'm sure you've found the myriad article on how to get sound working in Linux... which for me, has always worked just fine.&lt;/p&gt;
&lt;p&gt;[1] Output of &lt;strong&gt;uname -a&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Linux homeserver 2.6.31-16-generic #53-Ubuntu SMP Tue Dec 8 04:02:15 UTC 2009 x86_64 GNU/Linux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[2] A Soundblaster Audigy LS. Output of &lt;strong&gt;lspci&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;02:02.0 Multimedia audio controller: Creative Labs CA0106 Soundblaster
&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/ubuntu-audio-yes-windows-xp-no/</guid><pubDate>Sun, 13 Dec 2009 14:57:00 +0000</pubDate></item><item><title>Gahhh!! Django, virtualenv, and cx_Oracle</title><link>https://bradmontgomery.net/blog/gahhh-django-virtualenv-and-cx_oracle/</link><description>
&lt;p&gt;UPDATE: Thanks in advance to the comments from &lt;a href="http://blog.dscpl.com.au/"&gt;Graham Dumpleton&lt;/a&gt; whose comments below pointed me in the right direction!&lt;/p&gt;
&lt;p&gt;This was~~is~~ a plea for help.&lt;/p&gt;
&lt;p&gt;I've got django installed and configured with apache and virtualenv. I also have one particular app (named &lt;strong&gt;myapp&lt;/strong&gt;) that queries an Oracle database directly (django is configured to use MySQL). All of the apps work, &lt;strong&gt;except&lt;/strong&gt; for anything thatbrequires the &lt;strong&gt;myapp&lt;/strong&gt; app... which includes the admin!&lt;/p&gt;
&lt;p&gt;Requesting any view that uses cx_Oracle results in a cryptic error simiar to:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ViewDoesNotExist at /some/url/&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;Could not import myproject.myapp.views. Error was: libclntsh.so.10.1: cannot open shared object file: No such file or directory&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The full traceback follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Environment:  
  
Request Method: GET  
Request URL: http://mydomain.com/myapp/foo/  
Django Version: 1.1.1  
Python Version: 2.6.2  
Installed Applications:  
['django.contrib.auth',  
 'django.contrib.contenttypes',  
 'django.contrib.sessions',  
 'django.contrib.sites',  
 'django.contrib.admin',  
 'django.contrib.admindocs',  
 'django.contrib.flatpages',  
 'django_extensions',  
 'myproject.userprofile',  
 **'myproject.myapp',**  
  
 ... *snip*...  
  
 'myproject.utils']  
Installed Middleware:  
('django.middleware.gzip.GZipMiddleware',  
 'django.middleware.common.CommonMiddleware',  
 'django.contrib.sessions.middleware.SessionMiddleware',  
 'django.contrib.auth.middleware.AuthenticationMiddleware',  
 'django.middleware.doc.XViewMiddleware')  
  
  
Traceback:  
File &amp;quot;/home/django/.virtualenvs/myproject/lib/python2.6/site-packages/django/core/handlers/base.py&amp;quot; in get_response  
  83.                     request.path_info)  
File &amp;quot;/home/django/.virtualenvs/myproject/lib/python2.6/site-packages/django/core/urlresolvers.py&amp;quot; in resolve  
  218.                     sub_match = pattern.resolve(new_path)  
File &amp;quot;/home/django/.virtualenvs/myproject/lib/python2.6/site-packages/django/core/urlresolvers.py&amp;quot; in resolve  
  218.                     sub_match = pattern.resolve(new_path)  
File &amp;quot;/home/django/.virtualenvs/myproject/lib/python2.6/site-packages/django/core/urlresolvers.py&amp;quot; in resolve  
  125.             return self.callback, args, kwargs  
File &amp;quot;/home/django/.virtualenvs/myproject/lib/python2.6/site-packages/django/core/urlresolvers.py&amp;quot; in _get_callback  
  134.             raise ViewDoesNotExist, &amp;quot;Could not import %s. Error was: %s&amp;quot; % (mod_name, str(e))  
  
Exception Type: ViewDoesNotExist at /myapp/foo/  
Exception Value: Could not import myproject.myapp.views. Error was: libclntsh.so.10.1: cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The strange thing is that tests using cx_Oracle run correctly (as does code typed into the interpreter via ./manage.py shell), so cx_Oracle is installed correctly in the virtualenv. Orignally, I thought that apache was somehow misconfigured. The problem, however, is that Apache just doesn't know where to find the shared libraries for cx_Oracle's C extension modules. On my system (Ubuntu), shared libraries are located in /usr/lib and /usr/local/lib .&lt;/p&gt;
&lt;p&gt;When building cx_Oracle, you must include an environment variable for ORACLE_HOME and update the LD_LIBRARY_PATH so that it also includes ORACLE_HOME. While logged in as the &lt;em&gt;django&lt;/em&gt; user, I updated .bashrc so that it includes the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export ORACLE\_HOME=/home/django/oracle/instantclient_10_2  
export LD\_LIBRARY\_PATH=$ORACLE\_HOME:$LD_LIBRARY_PATH  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For me, all of the cx_Oracle shared libraries are located in &lt;strong&gt;/home/django/oracle/instantclient_10_2&lt;/strong&gt;. So, (with my virtualenv activated) I built, installed, and tested cx_Oracle, and everything worked fine, because my user environment was set up so that these shared libraries are available.&lt;/p&gt;
&lt;p&gt;To make these available to Apache, I created &lt;strong&gt;hard&lt;/strong&gt; links to all of the shared libraries from /usr/local/lib, and then ran ldconfig. Note that ldconfig ignores symbolic links!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/local/lib  
sudo ln /home/django/oracle/instantclient_10_2/libclntsh.so.10.1  
# also creating links to all other libs  
sudo ldconfig  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After restarting Apache, my django apps worked as expected. For the curious, my wsgi script and apache config follows.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My .wsgi script&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys  
import site  
import os  
  
vepath = '/home/django/.virtualenvs/myproject/lib/python2.6/site-packages'  
prev_sys_path = list(sys.path)  
  
# add the site-packages of our virtualenv as a site dir  
site.addsitedir(vepath)  
  
# add the app's directory to the PYTHONPATH  
sys.path.append('/home/django/django\_projects/myproject\_root/myproject/')  
sys.path.append('/home/django/django\_projects/myproject\_root/')  
os.environ['PYTHON\_EGG\_CACHE'] = '/home/django/.python-eggs'  
  
new_sys_path = [p for p in sys.path if p not in prev_sys_path]  
for item in new_sys_path:   
    sys.path.remove(item)  
sys.path[:0] = new_sys_path  
  
from django.core.handlers.wsgi import WSGIHandler  
os.environ['DJANGO\_SETTINGS\_MODULE'] = 'myproject.settings'  
application = WSGIHandler()  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;The Pertinent part of the Apache Config, located within a VirtualHost Directive:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Alias /media/ /var/www/media/  
Alias /site\_media/ /var/www/static/  
  
# Run WSGI in Daemon Mode:  
WSGIDaemonProcess myproject user=www-data group=www-data threads=25  
WSGIProcessGroup myproject  
WSGIScriptAlias / /home/django/django\_projects/myproject\_root/apache\_mod\_wsgi\_conf/myproject.wsgi  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;NOTE: Graham Dumpleton suggests four options to get around the original problem (and I paraphrase):&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Rebuild cx_Oracle setting the LD_RUN_PATH&lt;/em&gt; - I tried this, but was unnsuccessful.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Put the shared libraries in /usr/lib&lt;/em&gt; - I hard linked to the libraries from /usr/local/lib. This is the solution that worked.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Modify /etc/ld.conf so that it includes the path to the shared libraries&lt;/em&gt; - I considered adding a file to /etc/ld.so.conf.d/ which would have included the path to my ORACLE_HOME directory. However, the above options worked, so I went with that instead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;em&gt;Edit /etc/apache/envvars so that it includes the appropriate environment variables&lt;/em&gt; - I also tried this approach, including the same environment variables that I added to my .bashrc, but this also did not work&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hope this helps someone else!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/gahhh-django-virtualenv-and-cx_oracle/</guid><pubDate>Tue, 24 Nov 2009 13:47:00 +0000</pubDate></item><item><title>Sticky Groups</title><link>https://bradmontgomery.net/blog/sticky-groups/</link><description>
&lt;p&gt;I often deploy web projects in a directory that's not &lt;em&gt;owned&lt;/em&gt; by the user under which my webserver runs. Therefor, I often have to change permissions so the webserver can read from or write to certain files. So, for this example, let's assume I'm logged in to my linux box as &lt;em&gt;brad&lt;/em&gt;, and I'm using apache which runs under the user &lt;em&gt;www-data&lt;/em&gt;.&lt;br /&gt;
To give apache access to my public_html directory, I'd change ownership for the directory and all of its contents:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chown -R brad:www-data public_html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I may also need to allow apache to write to a certain directory:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod g+w public_html/somedir
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, if I modify any files in &lt;em&gt;public_html&lt;/em&gt;, I don't want to have to change the group permissions (that is, apache's permissions), so lets make the group ownership &lt;strong&gt;sticky&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod g+s public_html
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, any new files that I add beneath the &lt;em&gt;public_html&lt;/em&gt; directory will be part of the &lt;em&gt;www-data&lt;/em&gt; group.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/sticky-groups/</guid><pubDate>Tue, 24 Nov 2009 12:07:00 +0000</pubDate></item><item><title>Mercurial installation woes on Mac OS X</title><link>https://bradmontgomery.net/blog/mercurial-installation-woes-on-mac-os-x/</link><description>
&lt;p&gt;I started using mercurial around version 1.2, and I'm pretty sure I used the Mac OS X installer (from &lt;a href="http://mercurial.berkwood.com/"&gt;http://mercurial.berkwood.com/&lt;/a&gt;) to install 1.2.1. This placed hg in /Library/Frameworks/Python.framework/Versions/Current/bin/.&lt;/p&gt;
&lt;p&gt;Now, I've decided to upgrade to 1.3.1, and I again grab the Mac OS X installer (again from &lt;a href="http://mercurial.berkwood.com/"&gt;http://mercurial.berkwood.com/&lt;/a&gt;), which installs hg in /usr/local/bin/.&lt;/p&gt;
&lt;p&gt;Ok, but my path is set up so that the older version is used by default... Is there a preferred way to remove the older version of mercurial?&lt;/p&gt;
&lt;p&gt;I just renamed the file: /Library/Frameworks/Python.framework/Versions/Current/bin/hg to hg-1.2.1, and source'd my .profile so that the new version (/usr/local/bin/hg) gets used instead.&lt;/p&gt;
&lt;p&gt;This does not seem like a good way to upgrade. :(&lt;/p&gt;
&lt;p&gt;&lt;em&gt;this is all relevant to Mac OS X 10.5.8&lt;/em&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/mercurial-installation-woes-on-mac-os-x/</guid><pubDate>Wed, 30 Sep 2009 12:15:00 +0000</pubDate></item><item><title>A for AJAX - OR - Dynamically generating options for a select element.</title><link>https://bradmontgomery.net/blog/a-for-ajax-or-dynamically-generating-options-for-a-select-element/</link><description>
&lt;p&gt;I don't do a lot of AJAXy web development, but when I do, I usually make use of &lt;a href="http://prototypejs.org/"&gt;Prototype&lt;/a&gt;. I've recently created a form containing a &lt;em&gt;&lt;select&gt;&lt;/em&gt; element whose *&lt;option&gt;*s are dynamically generated via an AJAX request. The problem however, is that a &lt;em&gt;&lt;strong&gt;selected&lt;/strong&gt; option&lt;/em&gt; was already in the form. So before the AJAX request, my HTML looked something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select name=&amp;quot;s&amp;quot; id=&amp;quot;s&amp;quot;&amp;gt;  
&amp;lt;option value=&amp;quot;val1&amp;quot;&amp;gt;Value 1&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val2&amp;quot; selected=&amp;quot;selected&amp;quot;&amp;gt;Value 2&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val3&amp;quot;&amp;gt;Value 3&amp;lt;/option&amp;gt;  
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can then use &lt;a href="http://prototypejs.org/api/ajax/request"&gt;Ajax.Request&lt;/a&gt; method to dynamically add items into this list. (Note here that &lt;em&gt;http://example.com/dynamic/options/&lt;/em&gt; would be a server-side script giving us our dynamically generated &lt;em&gt;&lt;option&gt;&lt;/em&gt; tags.)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;new Ajax.Request('http://example.com/dynamic/options/', {  
    method: 'post',  
    onSuccess: function(transport) {  
        if (transport.responseText)  
            Element.insert($('s'), transport.responseText);  
    }  
}); 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Our resulting HTML might look something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select name=&amp;quot;s&amp;quot; id=&amp;quot;s&amp;quot;&amp;gt;  
&amp;lt;option value=&amp;quot;val1&amp;quot;&amp;gt;Value 1&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val2&amp;quot; selected=&amp;quot;selected&amp;quot;&amp;gt;Value 2&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val3&amp;quot;&amp;gt;Value 3&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val4&amp;quot;&amp;gt;Value 4&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val5&amp;quot;&amp;gt;Value 5&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;val6&amp;quot;&amp;gt;Value 6&amp;lt;/option&amp;gt;  
&amp;lt;/select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;One problem that arises, is that once the above &lt;em&gt;&lt;option&gt;s&lt;/em&gt; are inserted into the original &lt;em&gt;&lt;select&gt;&lt;/em&gt; element, the originally selected option is no longer selected. (In my experiments using Firefox 3.5 on OS X, the last item ‚Äî in this case, &lt;em&gt;Value 6&lt;/em&gt;‚Äî becomes selected).&lt;/p&gt;
&lt;p&gt;That's not so bad, though, because a little more code will just set the correct &lt;option&gt; as selected. The following code looks at all the options until it finds one with the attribute: &lt;em&gt;selected=&amp;quot;selected&amp;quot;&lt;/em&gt;, and then ... selects it!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var selected_index = 0;  
while (!$('s').down(selected_index).defaultSelected) {  
    selected_index += 1;  
}                 
$('s').selectedIndex = selected_index;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;However...&lt;/strong&gt; one must be careful where one puts this code! You &lt;strong&gt;must&lt;/strong&gt; take into account that the Ajax Request is &lt;strong&gt;asynchronous&lt;/strong&gt; (that's the &lt;em&gt;A&lt;/em&gt; in AJAX)!&lt;/p&gt;
&lt;p&gt;Here's what NOT to do:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function append_options() {  
    // Request the dynamically generated options  
    new Ajax.Request('http://example.com/dynamic/options/', {  
        method: 'post',  
        onSuccess: function(transport) {  
            if (transport.responseText)  
                Element.insert($('s'), transport.responseText);  
        }     
    });   
    // Make sure the correct on is selected. var selected\_index = 0;  
    while (!$('s').down(selected_index).defaultSelected) {  
        selected_index += 1;  
    }  
    $('s').selectedIndex = selected_index;  
}  
document.observe('dom:loaded', function() {  
    append_options();  
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Ajax request is sent, but the portion of the code that selects the option containing selected=&amp;quot;selected&amp;quot; may get run &lt;strong&gt;before&lt;/strong&gt; there is a response to that Request. Therefore, the selected option gets set, then the dynamically generated options get inserted. This is not what we want!&lt;/p&gt;
&lt;p&gt;The proper way to do this is to use the &lt;em&gt;onComplete&lt;/em&gt; callback in Ajax.Request. This will ensure that the code to select the appropriate option is run &lt;strong&gt;after&lt;/strong&gt; the Request is completed.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function append_options() {  
    // Request the dynamically generated options  
    new Ajax.Request('http://example.com/dynamic/options/', {  
        method: 'post',  
        onSuccess: function(transport) {  
            if (transport.responseText)  
                Element.insert($('s'), transport.responseText);  
        },    
        onComplete: function(transport) {  
            // Make sure the correct on is selected.  
            var selected_index = 0;  
            while (!$('s').down(selected_index).defaultSelected) {  
                selected_index += 1;  
            }  
            $('s').selectedIndex = selected_index;  
        }  
    });   
}  
document.observe('dom:loaded', function() {  
    append_options();  
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is fairly basic AJAX behavior, but for those of us who don't live, breathe, eat, and sleep AJAX, this is an easy mistake to make.&lt;/p&gt;
&lt;p&gt;So the moral of this story? Know your tools! It's always good to *Know what's going on!*‚Ñ¢&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-for-ajax-or-dynamically-generating-options-for-a-select-element/</guid><pubDate>Tue, 14 Jul 2009 11:42:00 +0000</pubDate></item><item><title>My PYTHONPATH bit me.</title><link>https://bradmontgomery.net/blog/my-pythonpath-bit-me/</link><description>
&lt;p&gt;I'd just finished the first version of a new django app (&lt;em&gt;myapp&lt;/em&gt;), and so I pushed it out to my development server. All the new code was in place, so I ran &lt;em&gt;python manage.py syncdb&lt;/em&gt;. The result?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
Traceback (most recent call last):  
  File &amp;quot;manage.py&amp;quot;, line 11, in &amp;lt;module&amp;gt;  
    execute_manager(settings)  
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/core/management/__init__.py&amp;quot;, line 340, in execute_manager  
      
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/core/management/__init__.py&amp;quot;, line 295, in execute  
      
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/core/management/base.py&amp;quot;, line 192, in run_from_argv  
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/core/management/base.py&amp;quot;, line 210, in execute  
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/utils/translation/__init__.py&amp;quot;, line 73, in activate  
      
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/utils/translation/__init__.py&amp;quot;, line 43, in delayed_loader  
      
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/utils/translation/trans_real.py&amp;quot;, line 209, in activate  
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/utils/translation/trans_real.py&amp;quot;, line 198, in translation  
  File &amp;quot;/usr/local/lib/python2.6/site-packages/django/utils/translation/trans_real.py&amp;quot;, line 181, in _fetch  
AttributeError: 'module' object has no attribute 'myapp'  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;What!?&lt;/strong&gt; I had all the correct files in place, and &lt;em&gt;myapp&lt;/em&gt; was listed in my settings' INSTALLED_APPS. I was confused. As it turns out, my PYTHONPATH pointed to my production code (which is actually on the same system, configured for a separate virtual host). So no, it couldn't find my new app because my path said to look in my production code.... :(&lt;/p&gt;
&lt;p&gt;So, I just temporarily reset my PYTHONPATH, ran my &lt;em&gt;python manage.py syncdb&lt;/em&gt;, and I'm rolling for now...&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/my-pythonpath-bit-me/</guid><pubDate>Tue, 30 Jun 2009 14:23:00 +0000</pubDate></item><item><title>"Adding" Q objects in Django</title><link>https://bradmontgomery.net/blog/adding-q-objects-in-django/</link><description>
&lt;p&gt;I've got a Django app with the following Model:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
class Story(models.Model):  
    title = models.CharField(max_length=255)  
    content = models.TextField()  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Problem:&lt;br /&gt;
I wanted to build a simple search feature that OR'ed all the search terms. Essentially, I wanted SQL resembling the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;SELECT \* from myapp_stories where   
    title LIKE '%term1%' OR content LIKE '%term1%' OR   
    title LIKE '%term2%' OR content LIKE '%term2%';   

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Solution:&lt;br /&gt;
You can &lt;em&gt;add&lt;/em&gt; django's Q objects together! This is a feature not currently discussed in the docs, but I dug through the source code and I discovered that a Q object is really just a node in a Tree! More specifically, Q is a subclass of django.utils.tree.Node (check it out, it's cool!) A Node has a attribute called a &lt;em&gt;connector&lt;/em&gt;. Q objects have two possible connectors: &lt;em&gt;AND&lt;/em&gt; and &lt;em&gt;OR&lt;/em&gt;. But how do we connect Q objects? Well, a Node has a handy &lt;em&gt;add(node, conn_type)&lt;/em&gt; method whose parameters include another Node and a connection type.&lt;/p&gt;
&lt;p&gt;As previously mentioned, the possible connection types for Q objects are &lt;em&gt;AND&lt;/em&gt; and &lt;em&gt;OR&lt;/em&gt;, so Q objects can be added together by doing something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ANDing Q objects  
q_object = Q()  
q_object.add(Q(), Q.AND)  
  
# ORing Q objects  
q_object = Q()  
q_object.add(Q(), Q.OR)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, the solution to my Search view is as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
from django.db.models import Q  
from models import Story  
  
def search(request):  
    '''   
 Generic Search: GET should contain the following:   
 terms - the search keywords separated by spaces  
 '''  
    terms = request.GET.get('terms', None)  
    term_list = terms.split(' ')  
  
    stories = Story.objects.all()  
  
    q = Q(content__icontains=term_list[0]) | Q(title__icontains=term_list[0])  
    for term in term_list[1:]:  
        q.add((Q(content__icontains=term) | Q(title__icontains=term)), q.connector)  
  
    stories = stories.filter(q)  
  
    return render_to_response('myapp/search.html', locals(), \  
            context_instance=RequestContext(request))  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Needless to say, Q objects are quite powerful!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/adding-q-objects-in-django/</guid><pubDate>Fri, 26 Jun 2009 09:47:00 +0000</pubDate></item><item><title>Data Truncated Errors</title><link>https://bradmontgomery.net/blog/data-truncated-errors/</link><description>
&lt;p&gt;I recently ran into some of the &lt;strong&gt;Data truncated for column ...&lt;/strong&gt; errors in my django apps. After a little digging, I've discovered that my particular problem lie in the structure of the underlying MySQL tables. Particularly with &lt;em&gt;varchar&lt;/em&gt; columns.&lt;/p&gt;
&lt;p&gt;I have a model that contains a FileField:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class MyModel(models.Model):  
    file = models.FileField(upload_to=&amp;quot;files/%Y/%m/%d&amp;quot;)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the MySQL table generated by this model will look something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;+-------------+--------------+------+-----+---------------------+----------------+  
| Field       | Type         | Null | Key | Default             | Extra          |  
+-------------+--------------+------+-----+---------------------+----------------+  
| id          | int(11)      |      | PRI | NULL                | auto_increment |  
| file        | varchar(100) |      |     |                     |                |  
+-------------+--------------+------+-----+---------------------+----------------+  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;See the &lt;strong&gt;varchar(100)&lt;/strong&gt;! If you're users are uploading files with long names (mine are!), this may not be enough! Note that my model also has an &lt;em&gt;upload_to&lt;/em&gt; that includes a year, month, and day. That's already 17 characters...&lt;/p&gt;
&lt;p&gt;So when someone tries to upload a file named:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Who_Said_One_Hundred_Characters_Would_Ever_Be_Enough_For_A_REALLY_LONG_Filename_draft_one_.docx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It will get pre-pended with '/files/2009/05/06/', and what gets stored in your table?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;files/2009/05/06/Who_Said_One_Hundred_Characters_Would_Ever_Be_Enough_For_A_REALLY_LONG_Filename_draft_one_.docx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's 112 characters... and it won't work!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The solution?&lt;/strong&gt;&lt;br /&gt;
You could alter your table so that the file column is a varchar(255)... which may help.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alter table myapp_mymodel modify file varchar(255);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;OR, use shorter filenames!&lt;/p&gt;
&lt;p&gt;Good Luck!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/data-truncated-errors/</guid><pubDate>Wed, 06 May 2009 15:03:00 +0000</pubDate></item><item><title>Have Apache Force File Downloads</title><link>https://bradmontgomery.net/blog/have-apache-force-file-downloads/</link><description>
&lt;p&gt;I have a Django app that lets users upload files. Any kind of file. It's nice that Apache will let me force file downloads based on the files extension.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;LocationMatch &amp;quot;\.(gz|tar|pdf|docx|doc|xls|xlsx|bz2|zip)$&amp;quot;&amp;gt;  
    SetHandler None  
    Header set Content-Disposition attachment  
&amp;lt;/LocationMatch&amp;gt;  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, in my HTML/templates: all I have to do is this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;a href=&amp;quot;SomFile.docx&amp;quot;&amp;gt;Some File&amp;lt;/a&amp;gt;  

&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/have-apache-force-file-downloads/</guid><pubDate>Fri, 01 May 2009 14:27:00 +0000</pubDate></item><item><title>Push Your SSH Public keys using Fabric</title><link>https://bradmontgomery.net/blog/push-your-ssh-public-keys-using-fabric/</link><description>
&lt;p&gt;This came across my twitter radar today from &lt;em&gt;&lt;a href="http://twitter.com/bitprophet/"&gt;@bitprophet&lt;/a&gt;&lt;/em&gt; (aka: Jeff Forcier), who just happens to be the new maintainer for &lt;a href="http://www.nongnu.org/fab/"&gt;Fabric&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def push\_key():  
    keyfile = '/tmp/%s.pub' % env.user  
    run('mkdir -p ~/.ssh &amp;amp;&amp;amp; chmod 700 ~/.ssh')  
    put('~/.ssh/id\_rsa.pub', keyfile)  
    run('cat %s &amp;gt;&amp;gt; ~/.ssh/authorized\_keys' % keyfile)  
    run('rm %s' % keyfile)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Everything you need to push your public key to an external server using Fabric.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/push-your-ssh-public-keys-using-fabric/</guid><pubDate>Thu, 30 Apr 2009 15:45:00 +0000</pubDate></item><item><title>Restricting Access by Group in Django</title><link>https://bradmontgomery.net/blog/restricting-access-by-group-in-django/</link><description>
&lt;p&gt;Django's &lt;a href="http://docs.djangoproject.com/en/1.0/topics/auth/"&gt;authentication&lt;/a&gt;
system provides built-in support for Groups. When developing an app, you may
want to prevent users in a particular group from accessing part of your app.&lt;/p&gt;
&lt;p&gt;For example, if you were building a tool to be used by &lt;em&gt;Faculty&lt;/em&gt;
and &lt;em&gt;Students&lt;/em&gt;, it's quite possible that there would be parts of the
app you wouldn't want &lt;em&gt;Students&lt;/em&gt; to access (like the part that allows a
User to change grades!). Luckily, there's a decorator called
&lt;em&gt;&lt;a href="http://docs.djangoproject.com/en/1.0/topics/auth/#limiting-access-to-logged-in-users-that-pass-a-test"&gt;user_passes_test&lt;/a&gt;&lt;/em&gt;
that allows you to easily perform this sort of thing. Let's see an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib.auth.decorators import login_required, user_passes_test  
  
@login\_required  
@user\_passes\_test(lambda u: u.groups.filter(name='Student').count() == 0, login_url='/myapp/denied/')  
def some\_view(request):  
  
    # Do whatever this view should do  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The view above (which lacks any content) actually uses two decorators.
The first &lt;em&gt;login_required&lt;/em&gt; simply requires that a user be logged in.
The second, &lt;em&gt;user_passes_test&lt;/em&gt;, requires a function as the first argument.
This function must accept a User object and return True or False.
If True, the User can view the page. If False, the user cannot view the page.&lt;/p&gt;
&lt;p&gt;We define this function using a python
&lt;a href="http://docs.python.org/reference/expressions.html#lambdas"&gt;Lambda Expression&lt;/a&gt;.
It simply uses the ORM to check if a User is in the &lt;em&gt;Student&lt;/em&gt; group.
In this example, &lt;strong&gt;u&lt;/strong&gt; would be an instance of django.contrib.auth.models.User.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lambda u: u.groups.filter(name='Student').count() == 0  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, you can specify the keyword argument &lt;em&gt;login_url&lt;/em&gt; to the
&lt;em&gt;user_passes_test&lt;/em&gt; decorator. Normally, if the user failed the test this
would redirect them to a login page. However, in our case, they're already
logged in (because of the &lt;em&gt;login_required&lt;/em&gt; decorator), so this just acts
as a redirect page. In this example, it would redirect to a url that we've
specified which might contain an Access Denied message (&lt;em&gt;with giant red
blinking letters&lt;/em&gt;!)&lt;/p&gt;
&lt;p&gt;Just kidding.&lt;/p&gt;
&lt;p&gt;UPDATE: There is one slight caveat to this solution so far... it breaks if
your user is not already logged in. In fact, this will result in&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;AttributeError&lt;/strong&gt;:&lt;code&gt;'NoneType' object has no attribute '_meta'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So, to account for that, we need to put the logic that tests for
Student-group membership into its own function. The result would look
something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def not\_in\_student\_group(user):  
    if user:  
        return user.groups.filter(name='Student').count() == 0  
    return False
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This makes sure the user object exists before trying the test, and if not,
we assume the test fails (by returning False). Now, our decorator will look
something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;@login\_required  
@user\_passes\_test(not_in_student_group, login_url='/advising/denied/')  
def some\_view(request):  
    # ...  

&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/restricting-access-by-group-in-django/</guid><pubDate>Fri, 24 Apr 2009 18:36:00 +0000</pubDate></item><item><title>Dynamically Displaying Fields in a ModelForm</title><link>https://bradmontgomery.net/blog/dynamically-displaying-fields-in-a-modelform/</link><description>
&lt;p&gt;&lt;strong&gt;The Problem&lt;/strong&gt;: I want to dynamically include some fields in a ModelForm based on some external criteria. Sometimes I want the fields displayed, sometimes I don't.&lt;/p&gt;
&lt;p&gt;I'm going to try to explain this scenario through a (albeit contrived) example. I have a Model that looks like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Suff(models.Model):  
    foo = models.CharField(max_length=255)  
    bar = models.BooleanField(default=False, blank=True)  
  
    def is\_foo\_bar(self):  
        ''' is this model's foo attribute set to 'bar' '''  
        return self.foo == 'bar'  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Normally, if I needed a Form for this Model, I would subclass a ModelForm like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class StuffForm(models.ModelForm):  
    class Meta:  
        model = Stuff  
        fields = ('foo', 'bar')  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, if I do NOT want the 'bar' field to be displayed by default I would need to remove it from the ModelForms list of fields (or use something like &lt;em&gt;exclude = ('bar', )&lt;/em&gt; ). But, if this form is created with an instance of Stuff whose &lt;em&gt;foo&lt;/em&gt; attribute contains the string &lt;em&gt;bar&lt;/em&gt;, I would like for the Form's 'bar' field to be displayed.&lt;/p&gt;
&lt;p&gt;I originally tried to accomplish this task by overridding StuffForm's __init__ method, and adding a new BooleanField when the desired circumstances arose... However, I stumpled across Ross Poulton's &lt;a href="http://www.rossp.org/blog/2008/dec/15/modelforms/"&gt;Dynamic ModelForms in Django&lt;/a&gt;, and then I realized it would be much easier to &lt;strong&gt;prevent a ModelForm's Field from being displayed&lt;/strong&gt; than it would be to dynamically create one.&lt;/p&gt;
&lt;p&gt;In order to accomplish this, the StuffForms's __init__ method would look something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def \_\_init\_\_(self, \*args, \*\*kwargs):  
    super(StuffForm, self).__init__(\*args, \*\*kwargs)  
      
    # If this form is created without an instance, OR  
    # If the instance's foo field is != 'bar'  
    if not kwargs.has_key('instance') or (kwargs.has_key('instance') and \  
        not kwargs['instance'].is_foo_bar()):  
        # Remove this field from the form.  
        del self.fields['bar']  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Done. I get all the benefits of a ModelForm, and the &lt;em&gt;bar&lt;/em&gt; field is not displayed unless it should be.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/dynamically-displaying-fields-in-a-modelform/</guid><pubDate>Tue, 21 Apr 2009 13:31:00 +0000</pubDate></item><item><title>How to Set up a Foreign Key Constraint in MySQL</title><link>https://bradmontgomery.net/blog/how-to-set-up-a-foreign-key-constraint-in-mysql/</link><description>
&lt;p&gt;The default &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/storage-engines.html"&gt;storage engine&lt;/a&gt; in MySQL (&lt;a href="http://dev.mysql.com/doc/refman/5.0/en/myisam-storage-engine.html"&gt;MyISAM&lt;/a&gt;) does not support Foreign Key constraints. If you want to use Foreign Keys in Mysql, you need to use &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/using-innodb-tables.html"&gt;InnoDB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following is a simple example that illustrates Foreign Key constraints, we'll create tables to store information about Authors and their Books. The Foreign key will link a book to an Author. Note, that in MySQL we need to use the &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/using-innodb-tables.html"&gt;InnoDB&lt;/a&gt; storage engine to support &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/innodb-foreign-key-constraints.html"&gt;Foreign Key Constraints&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, we need to create a simple table for Authors. There are only two columns: a primary key and the author's name&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE author (id integer primary key auto_increment, name text) ENGINE=InnoDB;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next, we create a simple table for Books. Again, we need a primary key (id), the title of the book, and the column that will be used as the Foreign Kye (author_id). The author_id column will be a Foreign Key that references the author table's id column (i.e. it's primary key).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;CREATE TABLE books (id integer primary key auto_increment, title text, author_id integer NOT NULL) ENGINE=InnoDB;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Finally, we alter the books table to add the Foreign Key constraint. Below, the &lt;em&gt;author_id_refs&lt;/em&gt; is just a name for the constraint, and this could be anything that we want (as long as it's sensible!)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ALTER TABLE `books` ADD CONSTRAINT author_id_refs FOREIGN KEY (`author_id`) REFERENCES `author` (`id`);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Another example is available in the MySQL documentation that covers &lt;a href="http://dev.mysql.com/doc/refman/5.0/en/innodb-foreign-key-constraints.html"&gt;Foreign Key Constraints&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;An Example&lt;/h2&gt;
&lt;p&gt;Insert a couple of Authors:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;insert into author (name) values ('Brad Montgomery');  
insert into author (name) values ('John Doe');
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let's see what's in the author table:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
mysql&amp;gt; select * from author;  
+----+-----------------+  
| id | name            |  
+----+-----------------+  
|  1 | Brad Montgomery |   
|  2 | John Doe        |   
+----+-----------------+  
2 rows in set (0.00 sec)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets put some stuff in the Books table. Note that author_id column corresponds to the id column in the author table above.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;insert into books (title, author_id) values ('Brads book', 1);  
insert into books (title, author_id) values ('John Does book', 2);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Lets see what the books table looks like and what's in it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
mysql&amp;gt; describe books;  
+-----------+---------+------+-----+---------+----------------+  
| Field     | Type    | Null | Key | Default | Extra          |  
+-----------+---------+------+-----+---------+----------------+  
| id        | int(11) | NO   | PRI | NULL    | auto_increment |   
| title     | text    | YES  |     | NULL    |                |   
| author_id | int(11) | NO   | MUL | NULL    |                |   
+-----------+---------+------+-----+---------+----------------+  
3 rows in set (0.00 sec)  
  
mysql&amp;gt; select * from books;  
+----+----------------+-----------+  
| id | title          | author_id |  
+----+----------------+-----------+  
|  1 | Brads book     |         1 |   
|  2 | John Does book |         2 |   
+----+----------------+-----------+  
2 rows in set (0.00 sec)  

&lt;/code&gt;&lt;/pre&gt;
&lt;h2&gt;Try to Delete Something&lt;/h2&gt;
&lt;p&gt;When you try to delete an author, an Error will occur&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;delete from author where id=2;  
ERROR 1451 (23000): Cannot delete or update a parent row: a foreign key constraint fails   
(`brad/books`, CONSTRAINT `author_id_refs` FOREIGN KEY (`author_id`) REFERENCES `author` (`id`))  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This happens because the data in the books table depends on the data in the author table. The Default constraint prevents you from deleting these books, without first deleting the author&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
mysql&amp;gt; delete from books where author_id=2;  
Query OK, 1 row affected (0.00 sec)  
  
mysql&amp;gt; delete from author where id=2;  
Query OK, 1 row affected (0.01 sec)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When you delete the author's books first, the author no longer has any dependencies. You can therefore delete the author.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/how-to-set-up-a-foreign-key-constraint-in-mysql/</guid><pubDate>Wed, 01 Apr 2009 14:49:00 +0000</pubDate></item><item><title>Public Keys don't like write access!</title><link>https://bradmontgomery.net/blog/public-keys-dont-like-write-access/</link><description>
&lt;p&gt;The first part of my &lt;a href="http://bradmontgomery.blogspot.com/2007/01/automatic-backups-with-cron-tar-and-ssh.html"&gt;Automatic Backups with cron, tar, and SSH&lt;/a&gt; details how to set up remote login (sans passwords) using RSA public key.&lt;/p&gt;
&lt;p&gt;Apparently this doesn't work if your home directory allows groups or others write access. So if used &lt;em&gt;ssh-keygen -t rsa&lt;/em&gt; to generate a public key which you added to a remote host (under &lt;em&gt;.ssh/authorized_keys&lt;/em&gt;), but ssh is still prompting you for a password, try setting your home directory's permissions to something like 0755 (or remove write permissions from other and groups)!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/public-keys-dont-like-write-access/</guid><pubDate>Wed, 25 Mar 2009 15:20:00 +0000</pubDate></item><item><title>mod_python checks your blood pressure</title><link>https://bradmontgomery.net/blog/mod_python-checks-your-blood-pressure/</link><description>
&lt;p&gt;I'm deploying a &lt;a href="http://www.djangoproject.com/"&gt;django&lt;/a&gt; project using &lt;a href="http://www.modpython.org/"&gt;mod_python&lt;/a&gt;... now, usually I will just use my package management tools to install a binary version, but this time I need to build it from source.&lt;/p&gt;
&lt;p&gt;As I get ready to go through the whole configure/make/make install process, I peruse the output of configure just to make sure everything is ok...&lt;/p&gt;
&lt;p&gt;checking for gcc... gcc&lt;br /&gt;
checking for C compiler default output file name... a.out&lt;br /&gt;
checking whether the C compiler works... yes&lt;br /&gt;
checking whether we are cross compiling... no&lt;br /&gt;
checking for suffix of executables...&lt;br /&gt;
checking for suffix of object files... o&lt;br /&gt;
checking whether we are using the GNU C compiler... yes&lt;br /&gt;
checking whether gcc accepts -g... yes&lt;br /&gt;
checking for gcc option to accept ANSI C... none needed&lt;br /&gt;
checking for ar... ar&lt;br /&gt;
checking for a BSD-compatible install... /usr/bin/install -c&lt;br /&gt;
checking whether make sets $(MAKE)... yes&lt;br /&gt;
checking for main in -lm... yes&lt;br /&gt;
checking for an ANSI C-conforming const... yes&lt;br /&gt;
&lt;strong&gt;checking your blood pressure... a bit high, but we can proceed&lt;/strong&gt;&lt;br /&gt;
configure: checking whether apxs is available...&lt;br /&gt;
checking for --with-apxs... /usr/sbin/apxs executable, good&lt;br /&gt;
checking Apache version... 2.0.52&lt;br /&gt;
checking for Apache libexec directory... /usr/lib/httpd/modules&lt;br /&gt;
checking for Apache include directory... -I/usr/include/httpd&lt;br /&gt;
checking for --with-python... /usr/local/bin/python2.6&lt;br /&gt;
checking Python version... 2.6&lt;br /&gt;
checking Python install prefix... /usr/local&lt;br /&gt;
checking checking where python libraries are installed... /usr/local/lib/python2.6&lt;br /&gt;
checking for Py_NewInterpreter in -lpython2.6... yes&lt;br /&gt;
checking what libraries Python was linked with... -lpython2.6 -lpthread -ldl -lutil -lm&lt;br /&gt;
checking linker flags used to link Python...&lt;br /&gt;
checking where Python include files are... -I/usr/local/include/python2.6&lt;br /&gt;
checking for --with-python-src... /home/bkmontgomery/Python-2.6.1/src&lt;br /&gt;
checking for --with-mutex-dir... no&lt;br /&gt;
Using MUTEX_DIR /tmp&lt;br /&gt;
checking for --with-max-locks... 32&lt;br /&gt;
Using 32 MAX_LOCKS.&lt;br /&gt;
checking for --with-flex... /usr/bin/flex&lt;br /&gt;
found /usr/bin/flex, we'll use this. Use --with-flex to specify another.&lt;br /&gt;
checking flex version... configure: WARNING: Flex version 2.5.4 found.&lt;br /&gt;
Version 2.5.31 or greater is required. You can generally ignore this&lt;br /&gt;
warning unless you need to regenerate psp_parser.c from psp_parse.l.&lt;br /&gt;
If you do need regenerate psp_parser.c, use --with-flex to specify the&lt;br /&gt;
location of the correct flex version. See the README for more information.&lt;br /&gt;
configure: creating ./config.status&lt;br /&gt;
config.status: creating Makefile&lt;br /&gt;
config.status: creating src/Makefile&lt;br /&gt;
config.status: creating Doc/Makefile&lt;br /&gt;
config.status: creating src/include/mod_python.h&lt;br /&gt;
config.status: creating test/Makefile&lt;br /&gt;
config.status: creating test/testconf.py&lt;br /&gt;
config.status: creating dist/setup.py&lt;br /&gt;
config.status: creating dist/Makefile&lt;/p&gt;
&lt;p&gt;Thank you for caring for my health, mod_python.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/mod_python-checks-your-blood-pressure/</guid><pubDate>Tue, 24 Mar 2009 09:28:00 +0000</pubDate></item><item><title>Scheduled Tasks (or cron jobs) with Django</title><link>https://bradmontgomery.net/blog/scheduled-tasks-or-cron-jobs-with-django/</link><description>
&lt;p&gt;This is my take on setting up cron jobs for the apps in a Django project. It is based on my own convention, and it solves my initial problems where I want to perform some action on all of my Django apps at a periodic interval (currently this is a once-a-day task).&lt;/p&gt;
&lt;p&gt;In order for this to work, I create a &lt;em&gt;cron.py&lt;/em&gt; module for all of my INSTALLED_APPS. This module &lt;strong&gt;must&lt;/strong&gt; contain a &lt;em&gt;run&lt;/em&gt; method. Other than that, it can work just like any other python module (using django's internals as necessary).&lt;/p&gt;
&lt;p&gt;For example, if you had an app called utils (possibly located at mysite/utils/), and if you just wanted to delete all sessions with old expire_dates, your &lt;em&gt;cron.py&lt;/em&gt; (which you would put in mysite/utils/cron.py) might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from datetime import datetime  
from django.contrib.sessions.models import Session  
  
def delete\_old\_sessions():  
    Session.objects.filter(expire_date__lt=datetime.now()).delete()  
  
def run():  
    delete_old_sessions()  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the meat of this solution checks for the cron.py module in all of the apps in mysite.settings.INSTALLED_APPS, and invokes its run() method. I've also named this module &lt;em&gt;cron.py&lt;/em&gt;, but this gets stored in Django's project directory (e.g. mysite)... the same directory where your &lt;em&gt;settings.py&lt;/em&gt; is located.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/usr/bin/env python  
&amp;quot;&amp;quot;&amp;quot;  
Project-wide Cron Job... A Command-line Django Script.  
  
This script gets scheduled and run by cron (or whatever).  
It then calls the `run` method of each app's cron module,   
if it exists (should be `appname/cron.py`)  
  
This script should be invoked after setting the   
DJANGO\_SETTINGS\_MODULE environment variable.  
  
You chould do this in a BASH script as follows:  
 export DJANGO\_SETTINGS\_MODULE=mysite.settings  
 python /path/to/mysite/cron.py  
&amp;quot;&amp;quot;&amp;quot;  
from django.conf import settings  
  
def my\_import(name):  
    '''  
 \_\_import\_\_ helper function to import modules inside packages  
 e.g.: where name is something like 'package.module.mod\_i\_want',  
 would return mod\_i\_want  
   
 See: http://www.python.org/doc/2.5.2/lib/built-in-funcs.html  
 '''  
    mod = \_\_import\_\_(name)  
    components = name.split('.')  
    for comp in components[1:]:  
        mod = getattr(mod, comp)  
    return mod  
  
def run():  
    for app in settings.INSTALLED_APPS:  
        if not app.startswith('django'):  
            output_info = '%s.cron'%app  
            ## Dynamically import a module called 'cron'  
            ## from each INSTALLED\_APP (if it exists)  
            try:  
                cron_mod = my_import(app+'.cron')  
                output_info += '... FOUND'  
                print output_info  
                ## 3. Execute the cron's run method (if it exists)  
                if hasattr(cron_mod, 'run'):  
                    #print '---&amp;gt; calling run()'  
                    cron_mod.run()  
            except ImportError:  
                # ignore packages that don't have a cron module  
                output_info += '... SKIPPED'  
                print output_info  
  
if __name__ == &amp;quot;\_\_main\_\_&amp;quot;:  
    run()  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The final piece of this puzzle lies in the BASH script used to invoke the above python module. It makes sure the appropriate environment variables are set and then it invokes the above module. I also store this in my django project directory (as cron.sh), and I use cron to schedule it to run.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash  
# This is a Django, Project-specific Cron script.  
# Separate Projects would need a copy of this script   
# with appropriate Settings export statments.  
  
PYTHONPATH=&amp;quot;${PYTHONPATH}:/path/to/django/project/directory&amp;quot;  
export PYTHONPATH  
export DJANGO\_SETTINGS\_MODULE=mysite.settings  
  
python/path/to/django/project/directory/mysite/cron.py  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Using cron, you'd schudule this to run every morning at 6am by editing your crontab and adding the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#m h dom mon dow command  
  0   6    *        *      *     /path/to/django/project/directory/cron.sh  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's it. This has been working for me, but there is at least one major pitfall: All of your app's cron tasks get run at the same time. This works well if your apps need to do something once a day (which has been my requirement), but this probably won't work well if you have some apps that need to run tasks at differing times.&lt;/p&gt;
&lt;p&gt;There are also other solutions to this (none of which I've tried). There's a snippet at &lt;a href="http://www.djangosnippets.org/snippets/1126/"&gt;http://www.djangosnippets.org/snippets/1126/&lt;/a&gt; which looks interesting. Then there's the &lt;a href="http://code.google.com/p/django-cron/"&gt;django-cron&lt;/a&gt; app which seems to be fairly flexible in how it works, and it doesn't require cron (so this is a plus if you cant set a crontab or if you're on Windows!)&lt;/p&gt;
&lt;p&gt;Thanks in advance for any feedback... suggestions are always welcome!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/scheduled-tasks-or-cron-jobs-with-django/</guid><pubDate>Fri, 20 Feb 2009 10:15:00 +0000</pubDate></item><item><title>A Custom form for Django's Automatic Admin.</title><link>https://bradmontgomery.net/blog/a-custom-form-for-djangos-automatic-admin/</link><description>
&lt;p&gt;A huge selling-point for Django (at least for developers) is its &lt;a href="http://docs.djangoproject.com/en/dev/ref/contrib/admin/#ref-contrib-admin"&gt;Automatic Admin&lt;/a&gt;. However, the ease at which the Admin can be set up, might make one second-guess an attempt to customize what is provided by default. Of course, the default admin site may not be without its drawbacks...&lt;/p&gt;
&lt;p&gt;Many of the django Apps that I have built, tap into Django's &lt;a href="http://docs.djangoproject.com/en/dev/topics/auth/#topics-auth"&gt;User Authentication System&lt;/a&gt;. Simply put, when I build a model, it has a Foreign Key to django's User Class.&lt;/p&gt;
&lt;p&gt;Here's an example Model:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib.auth.models import User  
from django.db import models  
  
class Book(models.Model):  
    author = models.ForeignKey(User)  
    title = models.CharField()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem here is that when I create or edit a Book object using the Automatic Admin, the author field is represented by a select element, whose options contain ALL User objects... listed by &lt;strong&gt;username&lt;/strong&gt;! Wouldn't it be nice if we could have that listed as &amp;quot;&lt;em&gt;firstname lastname&lt;/em&gt;&amp;quot; or even as &amp;quot;&lt;em&gt;lastname, firstname&amp;quot;&lt;/em&gt;? You can! And here's how:&lt;/p&gt;
&lt;p&gt;First of all, Django's admin makes extensive use of &lt;a href="http://docs.djangoproject.com/en/dev/topics/forms/modelforms/#topics-forms-modelforms"&gt;ModelForms&lt;/a&gt;, and fields with a Foreign Key relationship are represented by a &lt;a href="http://docs.djangoproject.com/en/dev/ref/forms/fields/#modelchoicefield"&gt;ModelChoiceField&lt;/a&gt;. So, all we need to do is extend the ModelChoiceField so that we have something that can be used on any Form that represents a Model with a Foreign Key to a User object. The &lt;em&gt;label_from_instance&lt;/em&gt; method accepts an object (in this case, a User object), and returns a string that will be used between &lt;option&gt; elements. In the example below, I've chosen to format that as &amp;quot;&lt;em&gt;firstname lastname&lt;/em&gt; (&lt;em&gt;username&lt;/em&gt;)&amp;quot;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.forms import ModelChoiceField  
  
class UserModelChoiceField(ModelChoiceField):  
    def label\_from\_instance(self, obj):  
        # Return a string of the format: &amp;quot;firstname lastname (username)&amp;quot;  
        return &amp;quot;%s (%s)&amp;quot;%(obj.get_full_name(), obj.username)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, create a ModelForm for your Model, which specifies the new Field to be used for the author. Note that we need to pass it a queryset of Users. Below, I've named this ModelForm, &lt;strong&gt;BookAdminForm&lt;/strong&gt; since I'm only going to use this form for the admin pages.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.forms import ModelForm  
from django.contrib.auth.models import User  
  
class BookAdminForm(ModelForm):  
    author = UserModelChoiceField(User.objects.all().order_by('first\_name'))  
    class Meta:  
        model = Book
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we set up the ModelAmin for the Book Model. In it, we can specify the form that is used by Django's automatic admin (Note that this &lt;a href="http://docs.djangoproject.com/en/dev/ref/contrib/admin/#form"&gt;MUST be a ModelForm&lt;/a&gt;!). Your admin would look something similar to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib import admin  
from forms import BookAdminForm  
from models import Book  
  
class BookAdmin(admin.ModelAdmin):  
    form = BookAdminForm  
  
admin.site.register(Book, BookAdmin)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, when you use the Automatic admin to add or edit existing Book entries, the drop-down list of Author names will be a bit more user-friendly.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-custom-form-for-djangos-automatic-admin/</guid><pubDate>Wed, 14 Jan 2009 16:08:00 +0000</pubDate></item><item><title>Add a Context Processor for your Django app using Sites</title><link>https://bradmontgomery.net/blog/add-a-context-processor-for-your-django-app-using-sites/</link><description>
&lt;p&gt;I've recently refactored a significant number of my Django Apps so that they include the &amp;quot;&lt;a href="http://docs.djangoproject.com/en/dev/ref/contrib/sites/#ref-contrib-sites"&gt;sites&lt;/a&gt;&amp;quot; framework. Essentially, this allows me to use the same code (and database) for multiple sites.&lt;/p&gt;
&lt;p&gt;For Example, if I was was building a CMS (and I am!), I might have a model that defines a &amp;quot;page&amp;quot;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.db import models
from django.contrib.auth.models import User
from django.contrib.sites.models import Site

class Page(models.Model):
    title = models.CharField('title', max_length=255)
    content = models.TextField()
    author = models.ForeignKey(User)
    sites = models.ManyToManyField(Site,
                  help_text=&amp;quot;This page will be displayed on the selected Sites&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that the Page class has a &lt;a href="http://docs.djangoproject.com/en/dev/ref/models/fields/#manytomanyfield"&gt;ManyToManyField&lt;/a&gt; relation ship to a Django Site, which allows a page to be associated with one or more Sites. The neat thing about this, is that when I publish content on a Page, it can be published to one or more sites!&lt;/p&gt;
&lt;p&gt;While working with this, I discovered I often wanted to write template code that &lt;em&gt;knew&lt;/em&gt; which which Site it was associated. For example, I might have a base template containing a block inside html head elements so templates that inherit it can include external javascript or CSS files. For example, &lt;em&gt;base.html&lt;/em&gt; might include the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;title&amp;gt;
    {% block title %}{% endblock %}
&amp;lt;/title&amp;gt;
    {% block head %} {% endblock %}
&amp;lt;/head&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, in any template that inherits from base.html, I could do something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
{% extends &amp;quot;base.html&amp;quot; %}
{% block head %}
    {% ifequal current_site.domain &amp;quot;www.whatever.com&amp;quot; %}
        &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; type=&amp;quot;text/css&amp;quot; href=&amp;quot;/media/whatever.css&amp;quot; /&amp;gt;
    {% endifequal %}
{% endblock %}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There trick here, though, is &amp;quot;How is my template going to know what site is being requested?&amp;quot;&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;could&lt;/em&gt; put something like the following in &lt;strong&gt;every&lt;/strong&gt; view I write...&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;current_site = Site.objects.get_current()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;BUT, that's a lot of extra stuff to type. Especially if you have a lot of views.&lt;/p&gt;
&lt;p&gt;The clever thing to do, would be to write code so that a Site object containing the currently requested site is automatically added to the current &lt;a href="http://docs.djangoproject.com/en/dev/ref/templates/api/#basics"&gt;Context&lt;/a&gt;. We can do that by writing our own &lt;strong&gt;Context Processor&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;And that's just what I did! The following code is fairly simple. It just retrieves the current Site from given request object (using Site.objects.get_current()), then returns a dictionary mapping the current site to the variable name &lt;strong&gt;current_site&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django.conf import settings
from django.contrib.sites.models import Site

def current_site(request):
'''
A context processor to add the &amp;quot;current site&amp;quot; to the current Context
'''
    try:
        current_site = Site.objects.get_current()
        return {
            'current_site': current_site,
        }
    except Site.DoesNotExist:
        # always return a dict, no matter what!
        return {'current_site':''} # an empty string
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For this to work, we've got to add the function above to the list of TEMPLATE_CONTEXT_PROCESSORS in our project settings file. My project directory is called &amp;quot;mysite&amp;quot;, so I created a folder called &amp;quot;context_processors&amp;quot;, and in it, I created a file called &amp;quot;current_site.py&amp;quot;. That file contains the function &lt;em&gt;current_site&lt;/em&gt; defined above.&lt;/p&gt;
&lt;p&gt;To get my new context processor working, I've got to edit mysite/settings.py, which now looks something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TEMPLATE_CONTEXT_PROCESSORS = (
    &amp;quot;mysite.context_processors.current_site.current_site&amp;quot;,
    &amp;quot;django.core.context_processors.auth&amp;quot;,
    &amp;quot;django.core.context_processors.debug&amp;quot;,
    &amp;quot;django.core.context_processors.i18n&amp;quot;,
    &amp;quot;django.core.context_processors.media&amp;quot;,
)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Voila! Now, while writing template code, I can always access the &lt;em&gt;current_site&lt;/em&gt; variable!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/add-a-context-processor-for-your-django-app-using-sites/</guid><pubDate>Mon, 05 Jan 2009 19:29:00 +0000</pubDate></item><item><title>Morphology is Fun!</title><link>https://bradmontgomery.net/blog/morphology-is-fun/</link><description>
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Morphological_image_processing"&gt;Morphological operations&lt;/a&gt; are
very common in image processing. The two most basic of these are Erosion and Dilations, and from these,
additional morphological operations can be performed. While there is an
&lt;a href="http://www.ph.tn.tudelft.nl/Courses/FIP/noframes/fip-Morpholo.html"&gt;abundance&lt;/a&gt; of
&lt;a href="http://www-viz.tamu.edu/faculty/parke/ends489f00/notes/sec1_9.html"&gt;literature&lt;/a&gt; on the
topic of &lt;a href="http://www.dspguide.com/ch25/4.htm"&gt;morphology&lt;/a&gt;, I often like to view concrete
examples of the operations.&lt;/p&gt;
&lt;p&gt;So, I've &lt;a href="http://files.bradmontgomery.net/morphology/index.html"&gt;published a few images&lt;/a&gt;
that illustrate the output of 1-to-5 iterations of various morphological operations
--erosion, dilation, opening, closing, gradient, top hat, and black hat--with various
structuring elements--rectangle, cross, and ellipse.&lt;/p&gt;
&lt;p&gt;The code to reproduce these images was written using OpenCV, and is freely
available at &lt;a href="https://gist.github.com/bradmontgomery/5096641"&gt;https://gist.github.com/bradmontgomery/5096641&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/morphology-is-fun/</guid><pubDate>Sun, 04 Jan 2009 14:27:00 +0000</pubDate></item><item><title>How to convert HTML to PDF using Python.</title><link>https://bradmontgomery.net/blog/how-to-convert-html-to-pdf-using-python/</link><description>
&lt;p&gt;I'm building web-based, data-driven apps using &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;. Eventually (or unfortunately), I will need to generate some reports that are printer-friendly. Logically, &lt;a href="http://en.wikipedia.org/wiki/Portable_Document_Format"&gt;PDF&lt;/a&gt; is the format for such files... so how am I going to convert my xHTML and CSS to a nice-looking PDF document?&lt;/p&gt;
&lt;p&gt;The &lt;a href="http://www.djangobook.com/"&gt;Django Book&lt;/a&gt; has a whole chapter dedicated to &lt;a href="http://www.djangobook.com/en/1.0/chapter11/"&gt;Generating Non-HTML Content&lt;/a&gt;. They seem to to be fond of &lt;a href="http://www.reportlab.org/rl_toolkit.html"&gt;ReportLab ToolKit&lt;/a&gt;. The caveat here, though, is that you need to know a bit about the internals of a PDF document. If you're familiar with this, the ReportLab toolkit seems to be the way to go! It has many features, and it seems to be a powerful PDF-generating tool.&lt;/p&gt;
&lt;p&gt;Unfortunately, I know nothing about PDF internals, but I do know quite a bit about HTML and CSS. That's why &lt;a href="http://www.xhtml2pdf.com/"&gt;xhtml2pdf.com&lt;/a&gt; caught my attention. If it delivers on it's promises, it parses HTML and CSS and generates PDFs (imagine that)! There's also a handy Activestate recipe using it: &lt;a href="http://code.activestate.com/recipes/572160/"&gt;Recipe 572160: HTML/CSS to PDF converter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm definately going to check this (HTML2PDF.org) out... so expect an update on this!&lt;/p&gt;
&lt;p&gt;Any other suggestions?&lt;/p&gt;
&lt;p&gt;UPDATE: &lt;a href="http://www.xhtml2pdf.com/"&gt;xhtml2pdf&lt;/a&gt; works well. There's also a great&lt;br /&gt;
&lt;a href="http://www.20seven.org/journal/2008/11/pdf-generation-with-pisa-in-django.html"&gt;post by Greg Newman&lt;/a&gt; outlining how it's used in django.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/how-to-convert-html-to-pdf-using-python/</guid><pubDate>Wed, 17 Dec 2008 19:37:00 +0000</pubDate></item><item><title>radiohead - 15 steps video</title><link>https://bradmontgomery.net/blog/radiohead-15-steps-video/</link><description>
&lt;p&gt;Updated... BIZRADv2... is a bit better.&lt;/p&gt;
&lt;p&gt;rh.createWidget(&amp;quot;BIZRADV2&amp;quot;, &amp;quot;4G5D1F9F2F0G8I9H1F5F2E0D5E1F7C8F5GaK3E1G5D1C2E4C8C9C7C6F4D5DaD9E8D5D1K9D8D7D1D0G5D2E1D4DaD9D6D3E5D1C2E5D3D4DbD0D4E1D5DaD9D8C7H2D4E9E7D5C1E3D1D2D5D7C8EaD9D1H3D1D7DaE6D5C1D3E7F4D8CaD9DaD1C2C1C0F2C1C2D0D7D8D6E9FaH3C4F1G3H5F4E0E1G8DaC9D3E2G1D5E8C7E6E4C3E0CaFbD7J&amp;quot;);&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/radiohead-15-steps-video/</guid><pubDate>Thu, 04 Dec 2008 19:11:00 +0000</pubDate></item><item><title>That Looks about Right</title><link>https://bradmontgomery.net/blog/that-looks-about-right/</link><description>&lt;pre&gt;&lt;code&gt;  
 history | awk '{ print $2 }' | sort | uniq -c | sort -rn | head  
 152 cd  
 145 ll  
  73 vi  
  20 rm  
  18 svn  
  13 exit  
   9 ls  
   8 grep  
   7 php  
   5 wget  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;via &lt;a href="http://www.b-list.org/weblog/2008/apr/10/meme/"&gt;b-list.org&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/that-looks-about-right/</guid><pubDate>Thu, 04 Dec 2008 16:27:00 +0000</pubDate></item><item><title>A simple Django example with Ajax</title><link>https://bradmontgomery.net/blog/a-simple-django-example-with-ajax/</link><description>
&lt;p&gt;I often employ Ajax in HTML forms in order to update the list of options in select elements. For example, suppose a form consists of two select elements, and the options in the second depends on the values selected in the first. A simple example of this might be an Automobile Rental website that lets you choose the type of vehicle as well as the color. Not all vehicles come in the same color, though, so you might have a form that looks similar to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;select name=&amp;quot;auto&amp;quot; id=&amp;quot;auto&amp;quot; onchange=&amp;quot;get_vehicle_colors();&amp;quot;&amp;gt;
&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;-- select a vehicle type --&amp;lt;/option&amp;gt;
&amp;lt;option value=&amp;quot;car&amp;quot;&amp;gt;Car&amp;lt;/option&amp;gt;
&amp;lt;option value=&amp;quot;truck&amp;quot;&amp;gt;Truck&amp;lt;/option&amp;gt;
&amp;lt;option value=&amp;quot;motorcycle&amp;quot;&amp;gt;Motorcycle&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;

&amp;lt;select name=&amp;quot;color&amp;quot; id=&amp;quot;color&amp;quot;&amp;gt;
&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;-- choose a vehicle first--&amp;lt;/option&amp;gt;
&amp;lt;/select&amp;gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In this example, you would choose the type of automobile you wanted, then employ Ajax to set the appropriate color values for the &lt;em&gt;color&lt;/em&gt; element.&lt;/p&gt;
&lt;p&gt;A Django app that provides this sort of functionality, might have a Model resembling the following (omitting various methods and Meta classes):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class Color(models.Model):
    color = models.CharField(max_length=256)

class Auto(models.Model):
    type = models.CharField('auto type', max_length=256)
    colors = models.ManyToManyField(Color)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Likewise, a form (similar to the one above) could be built with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django import forms
from models import Color, Auto

class AutoForm(forms.Form):
    TYPE_CHOICES = [('', '-- choose a type --'), ] + [(t.type, t.type) for t in Auto.objects.all()]
    COLOR_CHOICES = [(c.color, c.color) for c in Color.objects.all()]
    COLOR_CHOICES.insert(0, ('', '-- choose a vehicle type first --'))

    type = forms.ChoiceField(choices=TYPE_CHOICES, widget=forms.Select(attrs={'onchange':'get_vehicle_color();'}))
    color = forms.ChoiceField(choices=COLOR_CHOICES)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice the use of the &lt;em&gt;widget&lt;/em&gt; paramter on the Form's &lt;em&gt;type&lt;/em&gt; field. Django Forms only render the most basic HTML, so in order to set an &lt;em&gt;onchange&lt;/em&gt; attribute for a select element, we have to specify that attribute in &lt;em&gt;attrs&lt;/em&gt;, which is a dictionary of element attribute name/value pairs. More information about customizing Form widgets can be found in Django's &lt;a href="http://docs.djangoproject.com/en/dev/ref/forms/widgets/#ref-forms-widgets"&gt;widget reference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Another thing to note is the COLOR_CHOICES attribute. A ChoiceField will validate that any user-submitted content is conteint in its provided &lt;em&gt;choices&lt;/em&gt;. So, the COLOR_CHOICES must contain all valid colors for an Auto. However, we make sure the first choice is a default value that will later get updated by our AJAX request.&lt;/p&gt;
&lt;p&gt;For the most part, this form would be used as in any other Django app, but since we're adding in a little Ajax, I include my javascript libraries (in this example, &lt;a href="http://prototypejs.org/"&gt;Prototype&lt;/a&gt;) in the same template as the form. So, my template code looks something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% extends &amp;quot;base.html&amp;quot; %}
{% block head %}
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/site_media/prototype.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;/site_media/my_ajax_function.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
{% endblock %}

{% block content %}
    {% if form_was_valid %}
        {# ... show whatever... #}
    {% else %}
        &amp;lt;form action=&amp;quot;/auto/reserve/&amp;quot; method=&amp;quot;POST&amp;quot;&amp;gt;
        &amp;lt;ul&amp;gt;
        {{ form.as_ul}}
        &amp;lt;li&amp;gt;&amp;lt;label for=&amp;quot;submit&amp;quot;&amp;gt;&amp;amp;nbsp;&amp;lt;/label&amp;gt;
        &amp;lt;input type=&amp;quot;submit&amp;quot; id=&amp;quot;submit&amp;quot; name=&amp;quot;submit&amp;quot; value=&amp;quot;Submit&amp;quot;/&amp;gt;&amp;lt;/li&amp;gt;
        &amp;lt;/ul&amp;gt;
        &amp;lt;/form&amp;gt;
    {% endif %}
{% endblock %}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are two items of note, here. The first is that this template builds on top of a &lt;em&gt;base.html&lt;/em&gt; template which contains my sites layout and definitions for blocks. The second, is that one of those blocks--head--is inside my page's head element so that I can reference arbitrary javascript files (or CSS if I needed to) in only the templates that need them. It may be a minor note, but including your javascript libraries ONLY when you need them might save you some load-time and bandwidth.&lt;/p&gt;
&lt;p&gt;Now, what does the stuff in the &lt;em&gt;my_ajax_function.js&lt;/em&gt; look like? When a Django form gets rendered, every form element automatically gets an &lt;em&gt;id&lt;/em&gt; attribute whose value is the name of the field, prefixed by &amp;quot;id_&amp;quot;. So, our type and color Select widgets would have attributes id=&amp;quot;id_type&amp;quot; and id=&amp;quot;id_color&amp;quot;, respectively.&lt;/p&gt;
&lt;p&gt;So what is it that our Javascript needs to do?1. When an auto type is selected (determined by the &lt;em&gt;onchange&lt;/em&gt; event, grab the value of that type (&lt;em&gt;$('id_type').getValue()&lt;/em&gt;)
2. Construct the XMLHttpRequest with the appropriate POST data (the type of Auto chosen--accomplished using the $H shortcut to create a &lt;a href="http://prototypejs.org/api/hash"&gt;Hash&lt;/a&gt;)
3. Send that back to the webserver (at the appropriate URL, which we've set as &lt;em&gt;/auto/ajax_color_request/&lt;/em&gt;)
4. Listen for a response from the server,
5. And if that response contains any text (hopefully a list of available colors), update the select element with that text&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function get_vehicle_color(){
    new Ajax.Request('/auto/ajax_color_request/', {
    method: 'post',
    parameters: $H({'type':$('id_type').getValue()}),
    onSuccess: function(transport) {
        var e = $('id_color')
        if(transport.responseText)
            e.update(transport.responseText)
    }
    }); // end new Ajax.Request
}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now we've got a model and a form (outfitted with some nifty Ajax code, no less), how would we set up a view and a URLconf? Well, the URLconf works the same as in any other app, so we just have to set an entry that maps to the view that handles the Ajax request. If the name of this app is &lt;em&gt;auto&lt;/em&gt;, and it lives in a project called &lt;em&gt;mysite&lt;/em&gt;, our URLconf might look like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;urlpatterns = patterns('mysite.auto.views',
    (r'^ajax_color_request/$', 'ajax_color_request'),
    # ... everything else...
)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And it would map our URL (www.example.com/auto/ajax_color_request/) to a view named &lt;em&gt;ajax_color_request&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Now for the view. Since our Ajax request is sending its data via post, we can pull it from request.POST (which is a dictionary-like object), and then retrieve all the colors associated with a particular type of Auto.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def ajax_color_request(request):
    # Expect an auto 'type' to be passed in via Ajax and POST
    if request.is_ajax() and request.method == 'POST
        auto_type = Auto.objects.filter(type=request.POST.get('type', ''))
        colors = auto_type.colors.all() # get all the colors for this type of auto.
    return render_to_response('auto/ajax_color_request.html', locals())

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, all we have to do is send that data back to the client as a snippet of HTML which will get written to the appropriate select element. I've chosen to do this in a very simple template:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% for c in colors %}
    &amp;lt;option value=&amp;quot;{{ c.color }}&amp;quot;&amp;gt;{{ c.color|title }}&amp;lt;/option&amp;gt;
{% endfor %}

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And there you have it. A simple bit of Ajax in a Django app.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-simple-django-example-with-ajax/</guid><pubDate>Mon, 24 Nov 2008 15:11:00 +0000</pubDate></item><item><title>Extending Django's MultiWidget: SplitSelectDateTimeWidget</title><link>https://bradmontgomery.net/blog/extending-djangos-multiwidget-splitselectdatetimewidget/</link><description>
&lt;p&gt;This entry is an update to &lt;a href="/blog/selecttimewidget-a-custom-django-widget/"&gt;SelectTimeWidget: A custom Django Widget&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Problem: I want to use a Single widget object for a DateTimeField, but I want it to consist of select elements with appropriate options for month, day, year, hour, minute, and second. Additionally, I want to be able to specify a 12-hour format, so I would then need options for &amp;quot;a.m.&amp;quot; and &amp;quot;p.m.&amp;quot;&lt;/p&gt;
&lt;p&gt;Fortunately, Django's SelectDateWidget (from django.forms.extras.widgets) takes care of the Date portion of this, and I've previously written a similar SelectTimeWidget. Now, I just need to find some way to appropriately combine the two widgets.&lt;/p&gt;
&lt;p&gt;After a little digging in Django's source code, I found something called a MultiWidget (in django.forms.widgets). From it's docstring:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A widget that is composed of multiple widgets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Wow! This sounds like JUST what I need! Luckily, just beneath it is the definition of a SplitDateTimeWidget(MultiWidget), which combines two TextInput widgets for DateTimeFields. So taking that as an example, I've written the  &lt;a href="http://www.djangosnippets.org/snippets/1206/"&gt;SplitSelectDateTimeWidget&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To Use the SplitSelectDateTimeWidget you might do something similar to this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Default usage of SplitSelectDateTimeWidget  
class TimeForm(Form):  
    dt = DateTimeField(widget=SplitSelectDateTimeWidget())  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A slightly more complex example hooks into the flexibility of the underlying widgets (SelectDateWidget and SelecTimeWidget):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;class TimeForm(Form)  
    dt = DateTimeField(widget=SplitSelectDateTimeWidget(hour_step=2, \  
    minute_step=15, second_step=30, twelve_hr=True, years=[2008,2009,2010]))  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above example displays hours in increments of 2, minutes in increments of 15, and seconds in increments of 30. Likewise, only the years 2008, 2009,and 2010 are displayed in the years' options.&lt;/p&gt;
&lt;p&gt;The output of a form using the SplitSelectDateTimeWidget looks something similar to this:&lt;/p&gt;
&lt;p&gt;&lt;img src="http://files.bradmontgomery.net/images/datetimeselect.png" alt="SplitSelectDateTimeWidget" title="SplitSelectDateTimeWidget" /&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/extending-djangos-multiwidget-splitselectdatetimewidget/</guid><pubDate>Wed, 19 Nov 2008 12:49:00 +0000</pubDate></item><item><title>SelectTimeWidget: A custom Django Widget</title><link>https://bradmontgomery.net/blog/selecttimewidget-a-custom-django-widget/</link><description>
&lt;p&gt;I've been meaning to write this blog post for quite some time...&lt;/p&gt;
&lt;p&gt;Django Models provide a way to create a definitive source of data for web applications. Written as a python class, a Django Model consists of Fields that (among other things) define a &lt;em&gt;type&lt;/em&gt; for your data.&lt;/p&gt;
&lt;p&gt;Django's Forms provide a mechanism for generating HTML form elements and validating user input. A sublcass of Django's Form class is the ModelForm which essentially creates a Form based on the Fields in a Model. Form Fields and Model Fields are not the same--though there is a &lt;a href="http://docs.djangoproject.com/en/dev/topics/forms/modelforms/#field-types"&gt;mapping from Model fields to Form fields&lt;/a&gt;, however. The Fields in a Form define the validation logic for the data entered into the html form elements generated by the Field.&lt;/p&gt;
&lt;p&gt;When Django renders a Form, it chooses an appropriate html form element (such as input, textarea, or select elements) based on the type of Fields in the Form. For example a form to save a URL with an associated title might look something like the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from django import forms  
  
class LinkForm(forms.Form):  
    title = forms.CharField()   
    url = forms.URLField()  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The HTML generated by calling this forms &lt;em&gt;as_table()&lt;/em&gt; method might look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; f = LinkForm()  
&amp;gt;&amp;gt;&amp;gt; f.as_table()  
&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Title:&amp;lt;/th&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;title&amp;quot; /&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;  
&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;Url:&amp;lt;/th&amp;gt;&amp;lt;td&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;url&amp;quot;/&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We can change the behaviour of this output HTML by specifying a specific widget for the Form. If for some &lt;em&gt;strange&lt;/em&gt; reason we wanted the Title to render in a textarea, we would do the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;title = forms.CharField(widget=forms.Textarea)  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;All of this is well-documented in Django's &lt;a href="http://docs.djangoproject.com/en/dev/ref/forms/widgets/"&gt;Widget documentation&lt;/a&gt;, which has been working well for me 80% of the time.&lt;/p&gt;
&lt;p&gt;My big complaint here is that Date and Time information defaults to text input elements. In the past, I've always liked to use select elements for situations when users would need to enter things like dates (perhaps a different select element for Months, Days, and Years) and time (different select elements for Hours, Minutes...&lt;/p&gt;
&lt;p&gt;Luckily, (as of version 1.0, I think), Django offers a &lt;strong&gt;SelectDateWidget&lt;/strong&gt; (located in &lt;code&gt;django.forms.extras.widgets&lt;/code&gt;) which accomplishes this very thing. It produces three select elements, and it can be attached to a Form's DateField. This is accomplished like so:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;some_date = forms.DateField(widget=SelectDateWidget, initial=datetime.date.today())  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's Awesome! I can even tell the widget to default to &amp;quot;today's&amp;quot; date by passing it an &lt;em&gt;initial&lt;/em&gt; parameter containing the value generated by &lt;em&gt;datetime.date.today()&lt;/em&gt;. Ok... what about times? Would we ever want to enter Time information as three separate select elements. I do, so I basically altered the &lt;strong&gt;SelectDateWidget&lt;/strong&gt;, creating a &lt;a href="http://www.djangosnippets.org/snippets/1202/"&gt;&lt;strong&gt;SelectTimeWidget&lt;/strong&gt;&lt;/a&gt;, which is available on &lt;a href="http://www.djangosnippets.org/snippets/1202/"&gt;django snippets&lt;/a&gt;. It isn't perfect, but for now, it has accomplished what I've wanted... and its fairly flexible.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Specify a basic 24-hr time Widget (the default)  
t = forms.TimeField(widget=SelectTimeWidget())  
  
# Force minutes and seconds to be displayed in increments of 10  
t = forms.TimeField(widget=SelectTimeWidget(minute_step=10, second_step=10))  
  
# Use a 12-hr time format, which will display a 4th select   
# element containing a.m. and p.m. options)  
t = forms.TimeField(widget=SelectTimeWidget(twelve_hr=True))  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;However, I often use DateTimeFields in both Models and Forms (which consists of date and time info). All the code I need to represent select elements for such a field exists in both &lt;strong&gt;SelectDateWidget&lt;/strong&gt; and &lt;strong&gt;SelectTimeWidget&lt;/strong&gt;s. The problem? I just have figured out a &lt;em&gt;good&lt;/em&gt; (read: proper) way to combine these two Widget classes.&lt;/p&gt;
&lt;p&gt;Do I use multiple inheritance here... mixins... ? My experience doing this in python is a bit rusty... (erm, non-existent!) Hopefully the helpful &lt;a href="http://groups.google.com/group/django-users/"&gt;django community&lt;/a&gt; will help me out. :)&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;UPDATE: This discussion is continued in &lt;a href="/blog/extending-djangos-multiwidget-splitselectdatetimewidget/"&gt;Extending Django's MultiWidget: SplitSelectDateTimeWidget&lt;/a&gt;. I found a solution to this problem simply by digging through Django's source code. Huzzah for Open Source!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;So if you had a project called &lt;em&gt;mysite&lt;/em&gt; and an app called &lt;em&gt;myapp&lt;/em&gt;, putting it all together would look something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# in urls.py  
urlpatterns += patterns('',  
    (r'^test/$', 'mysite.myapp.views.test'),  
)  
  
# in forms.py  
class TestForm(forms.Form):  
    t = forms.TimeField(widget=SelectTimeWidget(minute_step=15, second_step=30, twelve_hr=True))  
  
  
# in views.py  
def test(request):  
    from forms import TestForm  
      
    if request.method == 'POST':  
        form = TestForm(request.POST)  
        if form.is_valid():  
            info = form.cleaned_data  
    else:  
        form = TestForm()  
          
    return render_to_response('myapp/test.html',  
                               locals(),  
                               context_instance=RequestContext(request))  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And the test.html Template:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% extends &amp;quot;base.html&amp;quot; %}  
  
{% block content %}  
    {% if info %}  
        &amp;lt;pre&amp;gt;{{ info }}&amp;lt;/pre&amp;gt;  
    {% else %}  
  
        &amp;lt;form action=&amp;quot;&amp;quot; method=&amp;quot;post&amp;quot;&amp;gt;  
        {{ form.as\_p }}  
        &amp;lt;p&amp;gt;&amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;go&amp;quot;/&amp;gt;&amp;lt;/p&amp;gt;  
        &amp;lt;/form&amp;gt;  
    {% endif %}  
{% endblock %}  

&lt;/code&gt;&lt;/pre&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/selecttimewidget-a-custom-django-widget/</guid><pubDate>Tue, 18 Nov 2008 19:40:00 +0000</pubDate></item><item><title>Soup's On! And it IS Beautiful!</title><link>https://bradmontgomery.net/blog/soups-on-and-it-is-beautiful/</link><description>
&lt;p&gt;Here's the problem: There's a BAJILLIION static html pages sitting out on a server, and I need to migrate all that content to a new Database-driven CMS. Additionally, I need to get rid of a lot of non-essential hard-coded presentational markup (like align=&amp;quot;center&amp;quot; or font=&amp;quot;whatever&amp;quot;) and any inline styles that may exist... (you know, because external CSS is the way to go).&lt;/p&gt;
&lt;p&gt;I &lt;em&gt;could&lt;/em&gt; spend hours and hours just copy-/pasting stuff... but meh. Enter &lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;BeautifulSoup&lt;/a&gt;, &lt;a href="http://www.python.org/doc/2.5.2/lib/module-urllib.html"&gt;urllib&lt;/a&gt;, and &lt;a href="http://www.python.org/doc/2.5.2/lib/module-sqlite3.html"&gt;sqlite&lt;/a&gt;... all glued together with &lt;a href="http://python.org"&gt;python&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, for the most part, the content I want to scrape from these static html pages aIso contains links to the other pages I want to keep. So, here's what we can do, use urlllib to grab the content from the web server, use BeautifulSoup to extract all the values from href attributes in our &amp;quot;a&amp;quot; elements, and keep a list of these (checking to make sure they point to sites we want to keep).&lt;/p&gt;
&lt;p&gt;Then, I use BeautifulSoup to parse the page, keeping the bits that I want to keep. Lucky for me, the pages I'm particularly interested in have handy &amp;quot;InstanceBeginEditable&amp;quot; and &amp;quot;InstanceEndEditable&amp;quot; in comments (thanks Dreamweaver), so I just strip out everything before and after that, and parse what's left over. Of course, this sort of thing is going to be different for everybody, but luckily, parsing &lt;em&gt;X&lt;/em&gt;HTML isn't that difficulty thanks to &lt;a href="http://www.crummy.com/software/BeautifulSoup/documentation.html"&gt;BeautifulSoup's mostly-comprehensive documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, the part you've been waiting for... Download the Code, try it out, and leave me some feedback!&lt;br /&gt;
&lt;a href="http://bradmontgomery.net/files/migrate_web.zip"&gt;http://bradmontgomery.net/files/migrate_web.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://creativecommons.org/licenses/by/3.0/us/"&gt;&lt;img src="http://i.creativecommons.org/l/by/3.0/us/80x15.png" alt="Creative Commons License" /&gt;&lt;/a&gt;&lt;br /&gt;
migrate_web.py by &lt;a href="http://bradmontgomery.net/"&gt;Brad Montgomery&lt;/a&gt; is licensed under a &lt;a href="http://creativecommons.org/licenses/by/3.0/us/"&gt;Creative Commons Attribution 3.0 United States License&lt;/a&gt;.&lt;br /&gt;
Based on a work at &lt;a href="http://bradmontgomery.net/files/migrate_web.py"&gt;bradmontgomery.net&lt;/a&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/soups-on-and-it-is-beautiful/</guid><pubDate>Mon, 17 Nov 2008 12:41:00 +0000</pubDate></item><item><title>BarCampMemphis, the Day After</title><link>https://bradmontgomery.net/blog/barcampmemphis-the-day-after/</link><description>
&lt;p&gt;I think everyone is in agreement: &lt;a href="http://barcampmemphis.com/"&gt;BarCampMemphis&lt;/a&gt; was a tremendous success!&lt;/p&gt;
&lt;p&gt;I want to personally thank everyone who came to my &lt;a href="http://bradmontgomery.net/barcampmemphis/"&gt;Zero-to-Wiki in 30 minutes with Django&lt;/a&gt; session, and I also want to remind everyone that the Presentation and the code is freely available!&lt;/p&gt;
&lt;p&gt;There were many great sessions available throughout the day, but I want to list the ones I got to attend... all of which were just excellent:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.linkedin.com/in/davebarger"&gt;Dave Barger&lt;/a&gt;'s &lt;a href="http://www.linkedin.com/"&gt;LinkedIn&lt;/a&gt; tips&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Will Murphy's insights on what's changing on the web&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scott Brown's Ruby on Rails demo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The great thoughts on Game Design offered by Mike Rowe, Scott Brown, and Kyle Dempsey&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;New insights on Etiquette in Social media moderated by &lt;a href="http://www.spencerdillard.com/"&gt;Spencer Dillard&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;And thanks to &lt;a href="http://tollie.org/"&gt;Tollie Williams&lt;/a&gt; for a great list of iPhone Apps...&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Relive the action as it happened, thanks to Zannel: &lt;a href="http://www.zannel.com/bkmontgomery"&gt;http://www.zannel.com/bkmontgomery&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/barcampmemphis-the-day-after/</guid><pubDate>Sun, 09 Nov 2008 18:53:00 +0000</pubDate></item><item><title>A topic for BarCampMemphis</title><link>https://bradmontgomery.net/blog/a-topic-for-barcampmemphis/</link><description>
&lt;p&gt;I've recently watched the &lt;a href="http://memphisbarcamp.pbwiki.com/BarCamp+Memphis+-+Amy"&gt;What is BarCamp&lt;/a&gt; video, and I've been thinking about a &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;-related topic. I'm sure there are plenty of web developers out there looking for a better way...&lt;/p&gt;
&lt;p&gt;Now, I've only been using Django for about 5 months, but I'm pretty sure I could give any interested kindred souls a good jump-start. And so that's what I'd like to do... show by example.&lt;/p&gt;
&lt;p&gt;The Example? Why not a wiki... It's simple. (blog examples have been overdone)&lt;/p&gt;
&lt;p&gt;So there it is... Anyone interested in &lt;strong&gt;0-to-wiki in 30 minutes&lt;/strong&gt;?&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-topic-for-barcampmemphis/</guid><pubDate>Wed, 22 Oct 2008 16:41:00 +0000</pubDate></item><item><title>on beards</title><link>https://bradmontgomery.net/blog/on-beards/</link><description>
&lt;p&gt;I just ran across an interesting &lt;a href="http://www.vimeo.com/1819723"&gt;beard video on vimeo&lt;/a&gt;. Lots of cool links including &lt;a href="http://www.beards.org/"&gt;beards.org&lt;/a&gt;, the &lt;a href="http://www.worldbeardchampionships.com/"&gt;World Beard and Moustache Championships&lt;/a&gt;, and the &lt;a href="http://www.beardliberationfront.com/"&gt;BLF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fun stuff.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/on-beards/</guid><pubDate>Sun, 05 Oct 2008 13:22:00 +0000</pubDate></item><item><title>hack your iphone earbuds...</title><link>https://bradmontgomery.net/blog/hack-your-iphone-earbuds/</link><description>
&lt;p&gt;I've been complaining (inwardly) about my iPhone's earbuds since I first tried them on. Who knew it was so easy to just hack them!&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=yLzs5aHv3jI"&gt;iPhone / iPod Touch Headphone / Earbud Replacement&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/hack-your-iphone-earbuds/</guid><pubDate>Tue, 23 Sep 2008 19:31:00 +0000</pubDate></item><item><title>iTunes Genius Lies!</title><link>https://bradmontgomery.net/blog/itunes-genius-lies/</link><description>
&lt;p&gt;&lt;img src="http://bradmontgomery.net/images/topsongsyourmissing" alt="Top Songs Im missing?" /&gt;&lt;/p&gt;
&lt;p&gt;I begrudgingly turned on the &lt;a href="http://www.apple.com/itunes/whatsnew/"&gt;Genius Sidebar in iTunes 8&lt;/a&gt; and now it's showing me the &amp;quot;Top Songs You're Missing&amp;quot;... except, I'm not missing them! Surely Apple doesn't think I should purchase music that's already in my library!&lt;/p&gt;
&lt;p&gt;Maybe this is just a bug... or maybe iTunes is confuzed because my album is &amp;quot;Weezer (Blue Album)&amp;quot;... who knows.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bradmontgomery.net/images/wezzer_albums.png"&gt;&lt;img src="http://bradmontgomery.net/images/wezzer_albums.png" alt="I like Weezer" /&gt;&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/itunes-genius-lies/</guid><pubDate>Tue, 16 Sep 2008 13:48:00 +0000</pubDate></item><item><title>Pondering a Robotic Lawn Mower</title><link>https://bradmontgomery.net/blog/pondering-a-robotic-lawn-mower/</link><description>
&lt;p&gt;Last weekend my gasoline powered lawn mower died. This prompted a search for a new mower, during which I stumbled upon some of &lt;a href="http://www.friendlyrobotics.com/"&gt;Friendly Robotics' Robomow&lt;/a&gt;; a line of battery-powered robotic lawn mowers. Now, I have to admit that for the past 15 years or so, every time I've mowed a lawn, I've thought about the possibilities of a robotic lawn mower, and I'm not at all surprised that there's a company producing these. At first the Robomow seems like a really nice product, but it does a have a couple of major drawbacks that would prevent me from purchasing one: 1. Cost: it's at least $2500. I just can't afford that
2. It requires a low-voltage perimeter wire.
3. It takes a huge, heavy-looking battery.&lt;/p&gt;
&lt;p&gt;The first problem is a big one for me (i'm broke), though it's a completely uninteresting problem.&lt;/p&gt;
&lt;p&gt;The second problem is the one that really irks me though. The Robomow requires that you install a low-voltage perimeter wire around your yard. Now... if you have a rectangular yard with nothing it it, this may not be that big a deal, but if you have trees or any other obstacles (flowers, gazebos, tool sheds, playground equipment, etc), laying that wire is going to be a lot of work. It just seems like there's enough technology out there that would allow a robotic lawn mower to navigate a yard in a much smarter fashion. If I were to build a robotic mower it just seems that there are a number of options that would allow it to navigate a lawn without the perimeter wire. Now I'm just thinking out loud here, and putting this all into one machine may be cost-prohibitive, but if I were to build my own robotic lawn mower, these are the things I would consider: * GPS: your lawn mower is probably outside. Couldn't a robot &amp;quot;know&amp;quot; its position and stay inside some predefined boundary?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Touch Sensors: why not just let the robot (gently) bump into stuff. Using touch sensors it might be possible to just back up and mow around stuff. This may be especially useful for fenced-in yards.&lt;/li&gt;
&lt;li&gt;Light or IR sensors: if for some reason boundary problems could not be solved using GPS, couldn't lasers or IR LEDs be deployed (I'm thinking stakes with battery-powered LEDS on two sides at each corners of the yard) yard)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There's got to be a compination of these that would allow a robot to navigate obstacles without using a perimeter wire.&lt;/p&gt;
&lt;p&gt;I don't have a solution for the third problem. I like the idea of a quiet electric motor, but batteries are heavy, and (in my opinion) just aren't ideal for a piece of lawn equipment. For now, a small, efficient gasoline engine (small like those in a hand-held weed-eater... I'm not sure how efficient those are, though) might be the best way to go. Solar power may also be a possbility.&lt;/p&gt;
&lt;p&gt;I'm also thinking a &lt;a href="http://en.wikipedia.org/wiki/Lawn_mower#Reel_.28cylinder.29_mowers"&gt;reel mower&lt;/a&gt; might be a better way to actually cut the grass. Could a small motor attached to each wheel provide enough control/power/propulsion to make this work?&lt;/p&gt;
&lt;p&gt;(I just bought a &lt;a href="http://www.sears.com/shc/s/p_10153_12605_07137619000P?mv=rr"&gt;Craftsman Reel mower&lt;/a&gt;, so I'm curious to see how well it works...)&lt;/p&gt;
&lt;p&gt;I guess there's also a number of other significant questions that may need to be addressed when considering robotic lawn care. How do we take care of sticks and leaves? I have lots of trees, so these a big problem for me.&lt;/p&gt;
&lt;p&gt;I'm beginning to think we're a number of years away from completely robotic lawn care...&lt;/p&gt;
&lt;p&gt;This is a completely unorganized, incompletely thought-out post, but I just wanted to get some ideas out in the open...&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pondering-a-robotic-lawn-mower/</guid><pubDate>Sat, 13 Sep 2008 10:23:00 +0000</pubDate></item><item><title>Recursively deleting files (based on regex)</title><link>https://bradmontgomery.net/blog/recursively-deleting-files-based-on-regex/</link><description>
&lt;p&gt;While we're on the topic... (the topic being recursively doing stuff to files), I often want to delete all the files in a hierachy of directories that match a regular expression (or regex).&lt;/p&gt;
&lt;p&gt;The typical scenario for this is, &amp;quot;I want to delete all of my compiled python files.&amp;quot;&lt;/p&gt;
&lt;p&gt;Here's how I do it:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find ./ -type f -name &amp;quot;*.pyc&amp;quot; -exec rm {} \;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;find ./ -type f -name &amp;quot;*.pyc&amp;quot;&lt;/em&gt; should find all files ending in .pyc under the &lt;em&gt;current directory&lt;/em&gt;. Once they've been found, the &lt;em&gt;-exec rm {} ;&lt;/em&gt; will remove them.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/recursively-deleting-files-based-on-regex/</guid><pubDate>Tue, 09 Sep 2008 06:20:00 +0000</pubDate></item><item><title>Recursively Renaming files</title><link>https://bradmontgomery.net/blog/recursively-renaming-files/</link><description>
&lt;p&gt;My hosting provider offers PHP4 and PHP5. Unfortunately, all files ending in .php get interpreted by PHP4, while all files ending in .php5 get interpreted by PHP5. So, how do I quickly change all of my files that end in .php to .php5?&lt;/p&gt;
&lt;p&gt;Do a google search for &amp;quot;recursively rename files&amp;quot;, and you might run across this:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://seal-7.blogspot.com/2006/12/recursively-rename-files-with-regex-one.html"&gt;http://seal-7.blogspot.com/2006/12/recursively-rename-files-with-regex-one.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;So, to accomplish my task, I use the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;find . -type f -print0 | xargs -0 rename 's/.php$/.php5/g'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Awesomeness.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/recursively-renaming-files/</guid><pubDate>Fri, 05 Sep 2008 19:10:00 +0000</pubDate></item><item><title>Looking Forward to BarCampMemphis</title><link>https://bradmontgomery.net/blog/looking-forward-to-barcampmemphis/</link><description>
&lt;p&gt;&lt;a href="http://barcamp.org/"&gt;BarCamp&lt;/a&gt; is coming to &lt;a href="http://memphisbarcamp.pbwiki.com/FrontPage"&gt;Memphis&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;A project of &lt;a href="http://www.launchmemphis.com/"&gt;LauchMemphis&lt;/a&gt;, this is yet another event focused on growing the local tech industry. It follows the successful &lt;a href="http://memphis.startupweekend.com/"&gt;Memphis Startup Weekend&lt;/a&gt; (which resulted in &lt;a href="http://spynnr.com/"&gt;Spynnr&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The theme of BarCampMemphis is &lt;strong&gt;FLUX: Your Paradigm&lt;/strong&gt;, and from the &lt;a href="http://memphisbarcamp.pbwiki.com/What+is+Barcamp+Memphis"&gt;About BarCampMemphis page&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In a constantly shifting environment, what do you do? Entreprenuers and businesses are constantly trying to walk the line between chaos and control, between the cutting edge and solid ground. Things are in FLUX. Now enter the world of technology; tried and true constants shift quickly and the market gives businesses and entreprenuers a choice: change or fail. BarCamp Memphis is designed to explore the awesome questions that affect you. Maybe you will find solid ground amidst shifting paradigms!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you're unfamiliar with the concept of a BarCamp, check out &lt;a href="http://barcamp.org/"&gt;BarCamp.org&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Barcamp"&gt;Wikipedia's BarCamp page&lt;/a&gt;, which starts with:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BarCamp is an international network of user generated conferences ‚Äî open, participatory workshop-events, whose content is provided by participants ‚Äî often focusing on early-stage web applications, and related open source technologies, social protocols, and open data formats.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;BarCampMemphis looks to be exciting and informative!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/looking-forward-to-barcampmemphis/</guid><pubDate>Fri, 05 Sep 2008 09:05:00 +0000</pubDate></item><item><title>Safari is Cooler than you Think!</title><link>https://bradmontgomery.net/blog/safari-is-cooler-than-you-think/</link><description>
&lt;p&gt;When you really start digging into Mac OS X, it's fairly mind-boggling how much &lt;em&gt;extra stuff&lt;/em&gt; it has that your average user never sees. I recently encountered a problem on my MacBook Pro, where the &lt;a href="http://discussions.apple.com/thread.jspa?messageID=7760823%EF%BF%BD"&gt;Optical Audio was overriding my internal speakers&lt;/a&gt;, which prevented me from hearing any audio (without using headphones). Unfortunately, there's no easy-to-access preference pane to enable or disable various audio devices. This led me on a search for command-line utilities to manage system preferences.&lt;/p&gt;
&lt;p&gt;(hang on, I'll get to Safari in a second...)&lt;/p&gt;
&lt;p&gt;Eventually I ran into Amit Singh's list of &lt;a href="http://www.kernelthread.com/mac/osx/tools.html"&gt;OS X Hacking tools&lt;/a&gt;, where I stumbled upon the &lt;strong&gt;&lt;a href="http://developer.apple.com/documentation/Darwin/Reference/ManPages/man1/defaults.1.html"&gt;defaults&lt;/a&gt;&lt;/strong&gt; command. &lt;strong&gt;defaults&lt;/strong&gt; is the magic &amp;quot;change any setting for Mac OS X on the command line&amp;quot; tool that you (by you, I mean me) never knew about!&lt;/p&gt;
&lt;p&gt;So, what does this have to do with Safari? Well, after looking for more information on how to use &lt;strong&gt;defaults&lt;/strong&gt;, I stumbled upon Mac OS X Tips' &lt;a href="http://www.macosxtips.co.uk/index_files/terminal-commands-for-hidden-mac-os-x-settings.html"&gt;Top 15 Terminal Commands for Hidden Mac OS X Settings&lt;/a&gt;, one of which really caught my attention:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;defaults write com.apple.safari IncludeDebugMenu 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This enables a &amp;quot;Debug&amp;quot; Menu (&amp;quot;Develop&amp;quot; menu on Safari 3). The Developer menu allows you to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Change Safari's user-agent, so you can masquerade as IE, Firefox, Opera, earlier versions of Safari, or even the iPhone version of Safari&lt;/li&gt;
&lt;li&gt;View a Web Inspector - allows you to view scripts, css files, and other information associated with a Web page...&lt;/li&gt;
&lt;li&gt;View a network timeline - showing the time it took to download each component linked in a web-page...&lt;/li&gt;
&lt;li&gt;Disable stuff - like javascript, css, java, caches...&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's not quite the &lt;a href="https://addons.mozilla.org/en-US/firefox/addon/60"&gt;Web Developer plugin&lt;/a&gt; for Firefox, but it does give you additional control over Safari.&lt;/p&gt;
&lt;p&gt;And the Network timeline looks pretty darn cool!&lt;/p&gt;
&lt;p&gt;ps: i never did find a way to disable the optical audio...guess i got side-tracked.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;[Update: 10/05/2008]&lt;/strong&gt; I just realized there's an easier way to enable this in the Advanced Preferences Tab... just enable the &amp;quot;Show Develop menu in menu bar&amp;quot; option! (as in the screenshot below)&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/images/Safari_Advanced.png" alt="Show Develop menu in menu bar" /&gt;&lt;/p&gt;
&lt;p&gt;I guess it pays to pay attention to your app's options!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/safari-is-cooler-than-you-think/</guid><pubDate>Thu, 04 Sep 2008 15:12:00 +0000</pubDate></item><item><title>Net Neutrality</title><link>https://bradmontgomery.net/blog/net-neutrality/</link><description>
&lt;p&gt;&lt;a href="http://foureyedmonsters.com/neutrality/"&gt;&lt;img src="http://foureyedmonsters.com/video_podcast/images/neutrality.jpg" alt="" /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.savetheinternet.com/"&gt;Save the Internet&lt;/a&gt; | &lt;a href="http://rockthevote.com/"&gt;Rock the Vote&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/net-neutrality/</guid><pubDate>Wed, 13 Aug 2008 08:30:00 +0000</pubDate></item><item><title>How to update an input value with the value from a selected option using Prototype</title><link>https://bradmontgomery.net/blog/how-to-update-an-input-value-with-the-value-from-a-selected-option-using-prototype/</link><description>
&lt;p&gt;Today, I needed to set the value of an HTML input element based on the value of a option in a select element. This is fairly easy to do with &lt;a href="http://www.prototypejs.org/api/element/writeAttribute"&gt;Prototype's writeAttribute&lt;/a&gt;. Here's an example:&lt;/p&gt;
&lt;p&gt;A simple javascript function to do the work:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function populate_input(){  
    var field = $('tf\_select').getValue();   
    $('tf').writeAttribute('value', field);  
}  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A simple HTML snippet to see it in action:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;div&amp;gt;  
&amp;lt;p&amp;gt;&amp;lt;select id=&amp;quot;tf\_select&amp;quot; name=&amp;quot;tf\_select&amp;quot; onchange=&amp;quot;populate\_input();&amp;quot;&amp;gt;  
&amp;lt;option value=&amp;quot;&amp;quot;&amp;gt;- choose one -&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;v1&amp;quot;&amp;gt;value 1&amp;lt;/option&amp;gt;  
&amp;lt;option value=&amp;quot;v2&amp;quot;&amp;gt;value 2&amp;lt;/option&amp;gt;  
&amp;lt;/select&amp;gt;&amp;lt;br/&amp;gt;&amp;lt;input type=&amp;quot;test&amp;quot; id=&amp;quot;tf&amp;quot; name=&amp;quot;tf&amp;quot; value=&amp;quot;&amp;quot;/&amp;gt;&amp;lt;/p&amp;gt;  
&amp;lt;/div&amp;gt;  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And yes... I know the title of this post is almost longer than the post itself!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/how-to-update-an-input-value-with-the-value-from-a-selected-option-using-prototype/</guid><pubDate>Tue, 12 Aug 2008 10:32:00 +0000</pubDate></item><item><title>Extracting and Encoding Still images to/from Video files</title><link>https://bradmontgomery.net/blog/extracting-and-encoding-still-images-tofrom-video-files/</link><description>
&lt;p&gt;&lt;a href="http://ffmpeg.mplayerhq.hu"&gt;ffmpeg&lt;/a&gt; is a cool tool.&lt;/p&gt;
&lt;p&gt;While it's got many many features and uses, I mostly use it to extract frames (or still images) from a video and create a video out of frames. While &lt;a href="http://ffmpeg.mplayerhq.hu/faq.html#SEC14"&gt;instructions on how to do this&lt;/a&gt; are posted on their list of FAQs, it's probably worth posting again.&lt;/p&gt;
&lt;p&gt;To extract all frames from a video file named &amp;quot;video.mpg&amp;quot;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffmpeg -i video.mpg frame%d.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will produce a series of JPEG image files named file1.jpg, file2.jpg... file10.jpg, file11.jpg... etc.&lt;/p&gt;
&lt;p&gt;I often like to have a zero prepended to the number associated with a frame. For exaple, if I knew there were 500 frames in the entire video, I would like to have the first frame named &amp;quot;file001.jpg&amp;quot; instead of &amp;quot;file1.jpg&amp;quot;. This can be achieved by specifying the number of digits to use in the output file name (such as 3 in the example below):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffmpeg -i video.mpg frame%3d.jpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, to create a video named &amp;quot;movie.mpg&amp;quot; from a series of images named something like &amp;quot;frameX.jpg&amp;quot; (where X is the frame number), you could do something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffmpeg -f image2 -i frame%d.jpg movie.mpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The caveat here is that the input frames MUST be numbered as if they were extracted from the video. So, if you had zero-padded filenames (as in the case where we used &amp;quot;frame%3d.jpg&amp;quot; to extract images), you'd have to account for that when encoding those images back into a movie.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffmpeg -f image2 -i frame%3d.jpg movie.mpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A Note on image formats: In the example above where we created a video file from a set of still images, the &amp;quot;-f image2&amp;quot; option to ffmpeg specifies a video format. Available formats can be displayed using the command&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffmpeg -formats
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that this is not the same as a &lt;a href="http://en.wikipedia.org/wiki/Container_format_(digital)"&gt;container format&lt;/a&gt; (such as .mpg, .avi, .mov... etc). If this sounds a little confusing, you may want to read up on &lt;a href="http://en.wikipedia.org/wiki/Digital_video#Encoding"&gt;digital video encoding&lt;/a&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/extracting-and-encoding-still-images-tofrom-video-files/</guid><pubDate>Mon, 11 Aug 2008 09:05:00 +0000</pubDate></item><item><title>The Apple Dock is a Mirror!</title><link>https://bradmontgomery.net/blog/the-apple-dock-is-a-mirror/</link><description>
&lt;p&gt;I guess I'm still a relatively new Mac User, but I consider myself fairly technical and probably more savvy that your typical Mac user (though there are a lot of mac users who are far more savvy than I!)&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/images/dock_mirror.png" alt="I can see my cursor in the Dock!" /&gt;Imagine my surprise when, while working tonight, I discovered that the Dock in Leopard is a Mirror! Yes, I'd noticed the reflection of the Icons, but tonight, I actually saw my cursor (in Terminal) moving as I typed... that caught my attention! At first I though, &amp;quot;well that's just amazing!&amp;quot; I had to wonder just how much work went into making that happen. Then, I discovered that &lt;a href="http://forums.macnn.com/90/mac-os-x/352053/annoying-dock-mirror-removal-in-leopard/"&gt;some people don't like this&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Oh well. To each his own...&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/the-apple-dock-is-a-mirror/</guid><pubDate>Fri, 08 Aug 2008 21:39:00 +0000</pubDate></item><item><title>PHP is chopping off my Access Memo Fields</title><link>https://bradmontgomery.net/blog/php-is-chopping-off-my-access-memo-fields/</link><description>
&lt;p&gt;I've got a few simple web forms that use PHP to read and write to an Access database (running on IIS), and I just spent the last few hours frantically trying to figure out why some of my Memo fields were being truncated around 4000 characters.&lt;/p&gt;
&lt;p&gt;I know Memo fields &amp;quot;should&amp;quot; be able to contain up to 65536 characters, and I could verify this by inserting data directly into the database. However, when querying the database through PHP (using odbc), I could only retrieve 4000 characters.&lt;/p&gt;
&lt;p&gt;The culprit? A tiny little setting called odbc.defaultlrl! (lrl = long read length). This can be changed in php.ini, or you can use ini_set to modify this setting directly in your php script:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php  
ini_set('odbc.defaultlrl', 65536);  
?&amp;gt;  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I found this info on the discussion for the &lt;a href="http://us3.php.net/manual/en/function.odbc-longreadlen.php"&gt;odbc_longreadlen&lt;/a&gt; function.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/php-is-chopping-off-my-access-memo-fields/</guid><pubDate>Wed, 30 Jul 2008 15:29:00 +0000</pubDate></item><item><title>Django: Generating an Image with PIL</title><link>https://bradmontgomery.net/blog/django-generating-an-image-with-pil/</link><description>
&lt;p&gt;I've been reading through the &lt;a href="http://www.djangobook.com/"&gt;Django Book&lt;/a&gt;, and in &lt;a href="http://www.djangobook.com/en/1.0/chapter11/"&gt;chapter 11&lt;/a&gt; they talk about generating non-HTML content (such as PDF files, Images, RSS/Atom Feeds). They mention using &lt;a href="http://www.pythonware.com/products/pil/"&gt;PIL&lt;/a&gt; to generate images, but they don't give an example. So, I thought I'd post a simple example View that generates an image.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;def pil\_image(request):  
    ''' A View that Returns a PNG Image generated using PIL'''  
  
    import Image, ImageDraw   
  
    size = (100,50)             # size of the image to create  
    im = Image.new('RGB', size) # create the image  
    draw = ImageDraw.Draw(im)   # create a drawing object that is  
                                # used to draw on the new image  
    red = (255,0,0)    # color of our text  
    text_pos = (10,10) # top-left position of our text  
    text = &amp;quot;Hello World!&amp;quot; # text to draw  
    # Now, we'll do the drawing:   
    draw.text(text_pos, text, fill=red)  
      
    del draw # I'm done drawing so I don't need this anymore  
      
    # We need an HttpResponse object with the correct mimetype  
    response = HttpResponse(mimetype=&amp;quot;image/png&amp;quot;)  
    # now, we tell the image to save as a PNG to the   
    # provided file-like object  
    im.save(response, 'PNG')  
  
    return response # and we're done!  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This example just draws simple text, but the drawing code could be replaced by something more elaborate such as code that opens and scales existing images.&lt;/p&gt;
&lt;p&gt;A note of concern: The Image object (im) &lt;strong&gt;MUST&lt;/strong&gt; be saved as a PNG for this to work. Luckily, the Image.save method expects a file-like object as its first parameter, so we can use django's HttpResponse object here. Also, the example above doesn't make use of any particular Font for the drawing, so if you do want to draw text, you'll want to take a look at PIL's &lt;a href="http://www.pythonware.com/library/pil/handbook/imagedraw.htm"&gt;ImageDraw Documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;(on a side note: the html for the code above was generated using &lt;a href="http://dpaste.com"&gt;dpaste&lt;/a&gt;, which rocks!)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/django-generating-an-image-with-pil/</guid><pubDate>Wed, 16 Jul 2008 10:37:00 +0000</pubDate></item><item><title>The Structure of a Django App</title><link>https://bradmontgomery.net/blog/the-structure-of-a-django-app/</link><description>
&lt;p&gt;&lt;a href="http://bradmontgomery.blogspot.com/2008/06/lions-tigers-and-web-development.html"&gt;Previously&lt;/a&gt;, I'd lamented the difficultly present in choosing an web development framework. I'd worked through several &lt;a href="http://www.symfony-project.org/"&gt;symfony&lt;/a&gt; tutorials, and though I could see the benefits down the road, it just didn't feel right to me (yes... &amp;quot;feel&amp;quot; is a technical drawback).&lt;/p&gt;
&lt;p&gt;So, I checked out a copy of &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;, and I haven't looked back. If you're the least bit proficient with python, and you need to build a database-driven web site, USE DJANGO! They have superb &lt;a href="http://www.djangoproject.com/documentation/"&gt;documentation&lt;/a&gt;, a free book (the &lt;a href="http://djangobook.com/"&gt;The Django Book&lt;/a&gt;), and there's a built-in development server included so you don't &lt;strong&gt;have&lt;/strong&gt; to get Apache and mod-python (or some other webserver) running somewhere before you can start writing code.&lt;/p&gt;
&lt;p&gt;The fist thing that really made me like Django was the structure of it. First of all, a site is organized as a project. Multiple projects may be set up for different websites. Inside a project, you build an App. (Note that a project may have one or more Apps).&lt;/p&gt;
&lt;p&gt;The App is where you do most of your work, it really consists of four parts:1. Models
2. Views
3. The URLconf
4. Template(s)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Models&lt;/strong&gt; (models.py) define your data. Instead of building tables in your database, you build python classes in your model. Django will give you the SQL to create your database tables. Now, what's really cool, is Django's Automatically generated Admin interface. All you really need is the model, and the Admin interface provides a password-protected, web-based, interface to your data.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Views&lt;/strong&gt; (views.py) are essentially functions that extract the correct data based on some (or no) input. Some may think this is an over-simplification, but in Django, the View is the &amp;quot;view of your data&amp;quot;. The functions in your View will pass data back to the Templates where they are displayed.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;URLconf&lt;/strong&gt; (urls.py) is magic. Well, it sort of seems that way, but it just uses regular expressions to match urls and pass data to the View. So, &amp;quot;out of the box&amp;quot;, Django supports pretty URLs so there's no need to do any url rewriting to get them.&lt;/p&gt;
&lt;p&gt;Last (but not least) are the &lt;strong&gt;Templates&lt;/strong&gt;. Django sports it's own template language, and apparently it also supports a host of pre-existing template engines. I personally have never used existing template engines, so this is all a bit new to me. However, the Django template language appears both concise and powerful.&lt;/p&gt;
&lt;p&gt;Now, there's a bit more to it that what I've described here, but if you're wondering about Django (like I was), go ahead and check out &lt;a href="http://www.djangoproject.com/documentation/overview/"&gt;their overview&lt;/a&gt;, skim &lt;a href="http://www.djangoproject.com/documentation/install/"&gt;the installaltion guide&lt;/a&gt;, and then start working &lt;a href="http://www.djangoproject.com/documentation/tutorial01/"&gt;the tutorial&lt;/a&gt;. I did, and I haven't looked back.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/the-structure-of-a-django-app/</guid><pubDate>Tue, 15 Jul 2008 10:57:00 +0000</pubDate></item><item><title>Why Bluetooth headsets didn't catch on in the '90s</title><link>https://bradmontgomery.net/blog/why-bluetooth-headsets-didnt-catch-on-in-the-90s/</link><description>
&lt;p&gt;&lt;img src="http://bradmontgomery.net/images/1990s_bluetooth.png" alt="Why bluetooth headsets did not catch on in the 90s" /&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/why-bluetooth-headsets-didnt-catch-on-in-the-90s/</guid><pubDate>Sat, 12 Jul 2008 10:12:00 +0000</pubDate></item><item><title>Games for Kids: dodger</title><link>https://bradmontgomery.net/blog/games-for-kids-dodger/</link><description>
&lt;p&gt;I've always thought it would be fun to build video games, and when my daughters were born, I knew I would eventually want to build some simple games that they could enjoy while they're young. My original attempt at this lead me to &lt;a href="http://pygame.org"&gt;pygame&lt;/a&gt;, and the result was a simple alphabet/number game that plopped letters and numbers on the screen (very similar to &lt;a href="http://alphababy.sourceforge.net/"&gt;AlphaBaby&lt;/a&gt;, but not nearly as good!). Unfortunately, I never continued to develop that one.&lt;/p&gt;
&lt;p&gt;Since my oldest daughter (who is now 5) has recently discovered &lt;a href="http://gcompris.net/"&gt;GCompris&lt;/a&gt;, I thought I'd give the game-writing another chance. This has resulted in &lt;a href="http://bradmontgomery.net/show.php?page=project_kidgames"&gt;dodger&lt;/a&gt;, which is also my first attempt at using &lt;a href="http://pyglet.org/"&gt;pyglet&lt;/a&gt;. I know it can't compete with GCompris, but hopefully my daughter will like it.&lt;/p&gt;
&lt;p&gt;I've released it under a &lt;a href="http://creativecommons.org/"&gt;CC&lt;/a&gt; license, so feel free to grab a copy, play it, use it, learn from it or whatever... Enjoy.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/games-for-kids-dodger/</guid><pubDate>Fri, 11 Jul 2008 11:09:00 +0000</pubDate></item><item><title>Mac OS X, Python, and Fink: Playing Nicely Together</title><link>https://bradmontgomery.net/blog/mac-os-x-python-and-fink-playing-nicely-together/</link><description>
&lt;p&gt;Since upgrading to Leopard, I've been using Mac's default install of Python (which is 2.5.1). For the most part it's worked well for me, namely because I've installed additionaly packages either using Mac installers or through easy_install. I recently needed to install python-ldap which didn't work using easy_install. So, I turned to &lt;a href="http://finkproject.org/"&gt;Fink&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unfortunately, Fink wanted to install it's own version of python (2.5.2) as well. (I say unfortunately only because I now how two separate python installations, which I think is a bit redundant.) So, the problem is this: How do I make the Mac's System python play nicely with any python modules I install through Fink?&lt;/p&gt;
&lt;p&gt;My solution to this problem is to add the Fink python's site-packages directory to my PYTHONPATH. I do this by setting an environment variable in my &lt;em&gt;.profile&lt;/em&gt; file located in my home directory. I added the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
PYTHONPATH=&amp;quot;${PYTHONPATH}:/sw/lib/python2.5/site-packages&amp;quot;  
export PYTHONPATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, when I run the python interpreter, I can import packages that were installed the Mac way, or through Fink. Hopefully, this won't give me any problems.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/mac-os-x-python-and-fink-playing-nicely-together/</guid><pubDate>Wed, 25 Jun 2008 08:29:00 +0000</pubDate></item><item><title>Lions, Tigers, and Web Development Frameworks, oh my!</title><link>https://bradmontgomery.net/blog/lions-tigers-and-web-development-frameworks-oh-my/</link><description>
&lt;p&gt;Apparently I've stumbled upon a problem that has recently faced many web developers. That is, I would like to adopt an &lt;a href="http://www.google.com/search?q=+open-source+web+development+framework&amp;amp;ie=utf-8&amp;amp;oe=utf-8&amp;amp;aq=t&amp;amp;rls=com.ubuntu:en-US:unofficial&amp;amp;client=firefox-a"&gt;open-source web development framework&lt;/a&gt; for mid-sized project. Well... searching that phrase only yields 200,000+ results. So how does one choose?&lt;/p&gt;
&lt;p&gt;I guess Ruby on Rails sparked the whole &amp;quot;Web Development Framework&amp;quot; movement (among other things). I've typically used PHP for my web-based projects in the past, but over the last 2 years, I've also become a huge fan of Python. I'm not opposed to learning a whole new language (in fact, I'm quite for it!), but for this particular project, I'd like to stick with something I already know quite well. So, that limits my languages to PHP and Python.&lt;/p&gt;
&lt;p&gt;Additionally, I would like that the framework support multiple databases on the back-end (especially SQLite!), and that there not be huge additional requirements to get things up and running. I would also like it to integrate nicely with &lt;a href="http://prototypejs.org"&gt;Prototype&lt;/a&gt;, and, if it works on Mac OS X, that a huge PLUS!&lt;/p&gt;
&lt;p&gt;So, for the PHP side of things, my top three candidates were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://www.symfony-project.org/"&gt;symfony&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.xisc.com/"&gt;prado&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cakephp.org/"&gt;CakePHP&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've already started working through symfony's excellent tutorials, and there are two main reasons that I chose symfony to start with:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An &lt;a href="http://www.symfony-project.org/book/1_0/"&gt;online book&lt;/a&gt; (and excellent Documentation)&lt;/li&gt;
&lt;li&gt;An easy-to-use &lt;a href="http://www.symfony-project.org/installation/1_0"&gt;sandbox&lt;/a&gt;. This lets me get started quickly with it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I've still got a soft spot in my heart for Python, and eventually, I'd like to let it into my Web Development world. I've read good things about both &lt;a href="http://turbogears.org/"&gt;TurboGears&lt;/a&gt; and &lt;a href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;. Interestingly enough, Django comes bundled with its own (lightweight) web server (for testing purposes), so it's a great candidate for anyone wanting a framework with little overhead... It will probably be my overall number 2 choice.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/lions-tigers-and-web-development-frameworks-oh-my/</guid><pubDate>Tue, 17 Jun 2008 20:05:00 +0000</pubDate></item><item><title>Folding@Home</title><link>https://bradmontgomery.net/blog/foldinghome/</link><description>
&lt;p&gt;&lt;a href="http://4.bp.blogspot.com/_FnxSpwZnwaA/SDgSGwWGsTI/AAAAAAAAAA0/h4wEFSKHASs/s1600-h/FAHlogoButton.jpg"&gt;&lt;img src="http://4.bp.blogspot.com/_FnxSpwZnwaA/SDgSGwWGsTI/AAAAAAAAAA0/h4wEFSKHASs/s200/FAHlogoButton.jpg" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently started running &lt;a href="http://folding.stanford.edu/"&gt;Folding@Home&lt;/a&gt;. This project (out of Stanford) has been around for a number of years, and apparently they're still going strong! They simulate the way that proteins fold (or assemble themselves t) in order to investigate diseases that occur when the proteins don't fold correctly. Check out their link for more info.&lt;/p&gt;
&lt;p&gt;Anyways, I've got these computers, so why not do something good with them while I'm not using them! Here are my &lt;a href="http://fah-web.stanford.edu/cgi-bin/main.py?qtype=userpage&amp;amp;username=bradmontgomery"&gt;Stats&lt;/a&gt;!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/foldinghome/</guid><pubDate>Sat, 24 May 2008 07:59:00 +0000</pubDate></item><item><title>pyCropper</title><link>https://bradmontgomery.net/blog/pycropper/</link><description>
&lt;p&gt;Occasionally, I need to crop some images. I suspect this happens to a lot of people,
and they simply use their favorite photo editor to perform the task. For a few images,
this works just fine. Plenty of people have
&lt;a href="www.adobe.com/products/photoshop"&gt;Photoshop&lt;/a&gt;,
the &lt;a href="http://www.gimp.org"&gt;Gimp&lt;/a&gt;,
or even &lt;a href="www.apple.com/iphoto/"&gt;iPhoto&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This past weekend, however, I found myself needing to crop about 1000 images,
and I need to do it quickly. This was more than my machine could load into the
Gimp at once. Even loading 100 at a time was a bit slow for me. So I set out to
find some simple tool that would let me JUST crop images. I found a few nifty
web-based tools (&lt;a href="http://www.picresize.com/"&gt;picresize.com&lt;/a&gt; and
&lt;a href="http://www.resize.it/"&gt;resize.it&lt;/a&gt;) that would allow me to easily
crop ONE image... but that's not really what I needed.&lt;/p&gt;
&lt;p&gt;So, when I couldn't find what I needed, I wrote my own, and it's now
available under the ~~GPLv3~~MIT License. If you find
yourself needing to crop a large number of images, head on over to the
~~pyCropper page~~
&lt;a href="https://github.com/bradmontgomery/pycropper"&gt;github repo&lt;/a&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pycropper/</guid><pubDate>Tue, 20 May 2008 10:01:00 +0000</pubDate></item><item><title>A Go at California Rolls</title><link>https://bradmontgomery.net/blog/a-go-at-california-rolls/</link><description>
&lt;p&gt;Well, I've tried to make some California rolls. I think they turned out OK. Not the prettiest rolls, but they tasted good... maybe I shouldn't have eaten them all, though!&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/rolled_california_rolls.jpg" alt="rolled up california rolls" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/finished_california_rolls.jpg" alt="finished california rolls" /&gt;&lt;/p&gt;
&lt;p&gt;These were made with the following ingredients: * 1 cup of rice. (most recipes call for short grain rice, but I used long grain rice)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1Tbsp of Rice vinegar&lt;/li&gt;
&lt;li&gt;dash of salt&lt;/li&gt;
&lt;li&gt;Nori&lt;/li&gt;
&lt;li&gt;Carrots&lt;/li&gt;
&lt;li&gt;Cucumber&lt;/li&gt;
&lt;li&gt;Imitation crab meat (or real crab meat if you have it)&lt;/li&gt;
&lt;li&gt;1 Avacado&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Boil 1 and 3/4 cups of water and salt. Once the water has come to a boil, add the rice, cover, and reduce to a simmer for 15 minutes. While simmering, julienne (or slice very thinly) carrots and cucumber. Chop crabmeat.&lt;/p&gt;
&lt;p&gt;Once rice has finished, mix in the rice vinegar, and let cool for 10 minutes. Spread a thin layer of rice on the Nori, and top the rice with a small amount of carrots, cucumber, and crab, then roll tightly. Slice into thin pieces!&lt;/p&gt;
&lt;p&gt;Enjoy with wasabi, soy sauce and pickled ginger!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-go-at-california-rolls/</guid><pubDate>Fri, 02 May 2008 19:02:00 +0000</pubDate></item><item><title>Review: Beginning Game Development with Python and Pygame</title><link>https://bradmontgomery.net/blog/review-beginning-game-development-with-python-and-pygame/</link><description>
&lt;p&gt;It's been out for a while now, and I'd always meant to write a review for this book... I pre-ordered it, and I've had it for a&lt;br /&gt;
while, but I haven't worked through the whole thing (though I've hit most of the latter chapters). Actually, this is not really a review, per se... just my succinct list of pros and cons.&lt;/p&gt;
&lt;p&gt;So, without further ado:&lt;/p&gt;
&lt;p&gt;Pros:* Very easy to read.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Great examples that actually work&lt;/li&gt;
&lt;li&gt;Chapters 1 &amp;amp; 2 give a great intro to python, so this would actually be a good book if you've never touched python before (but did have some programming experience)&lt;/li&gt;
&lt;li&gt;Lots of info using pygame+opengl&lt;/li&gt;
&lt;li&gt;A lot of examples use his &lt;a href="http://www.willmcgugan.com/game-objects/"&gt;gameobjects&lt;/a&gt; library, so a lot of the grunt-work coding is available to use already.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cons:* My biggest complaint is the lack of discussion on Sprites. Pygame is really a 2D library, and I think he left out a lot of very important information by not discussing how the Sprite class can be used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Only cursory discussion Sound. If you're writing a game and just want the basic sound effects and/or background music, this is ok. However, if you want to do something really interesting with sound, you'll need to dig way beyond what this book offers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Overall, I think the book is worth getting unless you've already done&lt;br /&gt;
a few significant projects using pygame. It's definately an Intro&lt;br /&gt;
book, and it does a really good job giving the user an idea how to put&lt;br /&gt;
a project together.&lt;/p&gt;
&lt;p&gt;Disclaimer: I'm a relative noob to pygame (~10 months), and I've been&lt;br /&gt;
using pygame for research projects in Augmented Reality (not&lt;br /&gt;
necessarily games) for both visual and non-visual (sound-only)&lt;br /&gt;
applications.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/review-beginning-game-development-with-python-and-pygame/</guid><pubDate>Sun, 13 Apr 2008 19:40:00 +0000</pubDate></item><item><title>Google blocking automated searches?</title><link>https://bradmontgomery.net/blog/google-blocking-automated-searches/</link><description>
&lt;p&gt;This morning I was writing a little python, and I used Firefox's Google toolbar to search for &lt;a href="http://sorry.google.com/sorry/?continue=http://www.google.com/search%3Fq%3Disalnum%26ie%3Dutf-8%26oe%3Dutf-8%26aq%3Dt%26rls%3Dcom.ubuntu:en-US:official%26client%3Dfirefox-a"&gt;isalnum&lt;/a&gt;. The strange thing about this, though, is that Google didn't do the search! Instead they gave me a message saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We're sorry...but your query looks similar to automated requests from a computer virus or spyware application. To protect our users, we can't process your request right now.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Luckily I could type in a &lt;a href="http://en.wikipedia.org/wiki/Captcha"&gt;captcha&lt;/a&gt; and continue the search. This really caught me offguard, though, so I decided to experiment a little. I had been logged in to my &lt;a href="http://gmail.com"&gt;gmail&lt;/a&gt; account t the time, so I tried clearing the cookies and cache from my browser. I searched for &amp;quot;python isapha&amp;quot;, and I got the same &amp;quot;We're sorry...&amp;quot; message. But this time, there was no captcha! I also tried searching for other terms (including &amp;quot;dogs&amp;quot;), all with same result.&lt;/p&gt;
&lt;p&gt;So what happens if I don't have a Google account? I suddenly can't use their search engine?&lt;/p&gt;
&lt;p&gt;So this got me thinking... Is the state of malware so bad that we'll eventually have to validate our identity before using a search engine?&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/google-blocking-automated-searches/</guid><pubDate>Tue, 04 Mar 2008 10:14:00 +0000</pubDate></item><item><title>Shrinking Images with Python</title><link>https://bradmontgomery.net/blog/shrinking-images-with-python/</link><description>
&lt;p&gt;My wife had a very large image, and she needed some smaller versions of it. Well, I thought I'd just fire up &lt;a href="http://gimp.org"&gt;The GIMP&lt;/a&gt; and create a few shrunken versions, but by the time The GIMP loaded on my G4 Mac mini, I'd almost finished writing the python coded needed to do the task for me!&lt;/p&gt;
&lt;p&gt;Writing code is good!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import Image  
from sys import argv  
  
def shrink(filename):  
    im = Image.open(filename)  
    w,h = im.size  
      
    # Create images that are 10%, 20%....90% of the original  
    sizes = [0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9]  
      
    for s in sizes:  
        nw = int(w*s)  
        nh = int(h*s)  
        n = im.resize((nw, nh))  
        f = &amp;quot;%s_x_%s_%s&amp;quot;%(nw,nh,filename)  
        print &amp;quot;Saving %s&amp;quot;%(f)  
        n.save(f)  
          
if __name__ == &amp;quot;__main__&amp;quot;:  
      
    if len(argv) == 2:  
        shrink(argv[1])  
    else:  
        print &amp;quot;USAGE: python shrink.py &amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Download this code: &lt;a href="http://bradmontgomery.net/files/shrink.zip"&gt;http://bradmontgomery.net/files/shrink.zip&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/shrinking-images-with-python/</guid><pubDate>Fri, 15 Feb 2008 18:26:00 +0000</pubDate></item><item><title>Tracking a Laser pointer with Python and OpenCV</title><link>https://bradmontgomery.net/blog/tracking-a-laser-pointer-with-python-and-opencv/</link><description>
&lt;p&gt;A recent thread on the OpenCV mailing list (entitled: &amp;quot;Tracking laser dots&amp;quot;)
discussed techniques that could be used to track the dot from a laser pointer.
This sounded like something fun, so I finally got around to trying it out.
Essentially this could be done acheived by the following algorithm:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Grab the video frame.&lt;/li&gt;
&lt;li&gt;Convert the video frame to the HSV color space.&lt;/li&gt;
&lt;li&gt;Split the frame into individual components (separate images for H, S, and V).&lt;/li&gt;
&lt;li&gt;Apply a threshold to each compenent (hopefully keeping just the dot from
the laser). It was originally suggested that just the Hue component be used
to search for the laser's dot, but I actually got several false positives
doing this. Therefore, using Value in addition to Hue gave me a more
reliable result. I can see where finding good threshold values for all 3
components would be a good approach in some situations.&lt;/li&gt;
&lt;li&gt;Finally, perform an AND operation on the 3 images (which &amp;quot;should&amp;quot; cut down
on false positives)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I should note that my testing was performed using a red laser pointer and a
large white sheet of paper in an well-lit office. Since I was only tracking the
dot on the paper, this turned out to be a fairly easy task to accomplish.
Finding good threshold values in other situations would be much more difficult.&lt;/p&gt;
&lt;p&gt;Update:¬†This code is now on Github:
&lt;a href="https://github.com/bradmontgomery/python-laser-tracker"&gt;https://github.com/bradmontgomery/python-laser-tracker&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/tracking-a-laser-pointer-with-python-and-opencv/</guid><pubDate>Thu, 24 Jan 2008 13:13:00 +0000</pubDate></item><item><title>Super Spicy Creamy Veggie Chili</title><link>https://bradmontgomery.net/blog/super-spicy-creamy-veggie-chili/</link><description>
&lt;p&gt;I like food. I like to eat it... I like to make it.&lt;/p&gt;
&lt;p&gt;A few days ago I got a craving for some chili, and I almost had all of the ingredients that I needed. What I didn't have, was meat. So, I decided to improvise, and what resulted was the recipe below. It's sure to give all the gastric goodness of any other spicy bowl of chili!&lt;/p&gt;
&lt;p&gt;Ingredients:&lt;br /&gt;
1 can black beans.&lt;br /&gt;
1 can dark red kidney beans.&lt;br /&gt;
2 cans &lt;a href="http://www.ro-tel.com/pages/products/extra_hot/index.jsp"&gt;RO*TEL extra hot&lt;/a&gt; (good stuff!)&lt;br /&gt;
1 medium eggplant cut in small cubes.&lt;br /&gt;
about 1 cup of cubed cheddar&lt;br /&gt;
about 1 cup of sour cream&lt;br /&gt;
a hearty dash of chili powder.&lt;/p&gt;
&lt;p&gt;Rinse the beans, and put them in a pan with the RO*TEL and the eggplant. Place on Medium heat until the eggplant starts to soften, then add the cheese and the sour cream. Once everything is all melted, it's ready to eat!&lt;/p&gt;
&lt;p&gt;It's good with corn chips or crackers, and another dollop of sour cream doesn't hurt either. Enjoy!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/super-spicy-creamy-veggie-chili/</guid><pubDate>Mon, 14 Jan 2008 13:51:00 +0000</pubDate></item><item><title>Computing Correlation Coefficients in Python</title><link>https://bradmontgomery.net/blog/computing-correlation-coefficients-in-python/</link><description>
&lt;p&gt;A useful technique for matching objects in images is to compute the images'
Correlation Coefficients. Essentially, you take any image and compute the
correlation between it and another, smaller image containing ONLY the object
that you want to identify. The resulting correlation image should contain
bright spots where there is a high correlation (or match) between the two
images.&lt;/p&gt;
&lt;p&gt;Here's a simple python script to compute the correlation between two images:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bradmontgomery/correlation"&gt;https://github.com/bradmontgomery/correlation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It requires &lt;a href="http://www.pythonware.com/products/pil/"&gt;PIL&lt;/a&gt; and
&lt;a href="http://www.numpy.org/"&gt;numpy&lt;/a&gt;, and it's fairly inefficient, but
it's a simple, straightforward implementation.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/computing-correlation-coefficients-in-python/</guid><pubDate>Wed, 05 Dec 2007 08:59:00 +0000</pubDate></item><item><title>Announcing pgSlideShow</title><link>https://bradmontgomery.net/blog/announcing-pgslideshow/</link><description>
&lt;p&gt;I've just released a simple little application called &lt;code&gt;pgSlideShow&lt;/code&gt;. It's a free image slideshow application written in &lt;a href="http://python.org"&gt;Python&lt;/a&gt; using &lt;a href="http://pygame.org"&gt;pygame&lt;/a&gt;. It recursively searches a given directory for image files, and then displays them on a computer screen in Fullscreen mode.&lt;/p&gt;
&lt;p&gt;You can get it here:&lt;br /&gt;
~~http://bradmontgomery.net/pgSlideShow/~~&lt;br /&gt;
&lt;a href="https://github.com/bradmontgomery/pgSlideShow"&gt;https://github.com/bradmontgomery/pgSlideShow&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/announcing-pgslideshow/</guid><pubDate>Wed, 31 Oct 2007 10:13:00 +0000</pubDate></item><item><title>On the Move...</title><link>https://bradmontgomery.net/blog/on-the-move/</link><description>
&lt;p&gt;Well, I've just created my account here at &lt;a href="http://www.blogger.com/"&gt;blogger.com&lt;/a&gt;, and I'll have to try it out for a while before I decide whether or not I'm happy. I've been using my own system for a while, and normally, I'm happy with a simple, stream-lined app, but I've begun wanting new features that I just don't have time to build for myself...&lt;/p&gt;
&lt;p&gt;So, I'm here. We'll see how it works.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/on-the-move/</guid><pubDate>Tue, 16 Oct 2007 21:04:00 +0000</pubDate></item><item><title>PyOpenGL on OS X</title><link>https://bradmontgomery.net/blog/pyopengl-on-os-x/</link><description>
&lt;p&gt;&lt;strong&gt;Update: July 7, 2010:&lt;/strong&gt; For the past year or so I've been using &lt;a href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt;, &lt;a href="http://www.doughellmann.com/projects/virtualenvwrapper/"&gt;virtualenvwrapper&lt;/a&gt;, and &lt;a href="http://pip.openplans.org/"&gt;pip&lt;/a&gt; to manage and install python packages, and I highly encourage everyone to use these tools! It may take a bit to learn how to use these tools, but once you do, the rewards are great! (especially when using 3rd party python libraries on Mac OS X).&lt;/p&gt;
&lt;p&gt;To install PyOpenGL using the aforementioned tools, you'd simply do the following.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a virtual environment for your OpenGL installation. I'm naming it &amp;quot;gl&amp;quot;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;mkvirtualenv gl
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Then use pip to install PyOpenGL:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;pip install pyopengl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's all there is to it! I grabbed the demo apps from &lt;a href="http://pypi.python.org/pypi/PyOpenGL-Demo"&gt;http://pypi.python.org/pypi/PyOpenGL-Demo&lt;/a&gt;, and verified that the gears.py script works, so this should get you started.&lt;/p&gt;
&lt;p&gt;I'm leaving the old post below, but again, check out virtualenv and pip. You'll be happy that you did!&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;I actually got this working quite a while ago, but for some reason I've gotten busy and never documented it. In fact, installing PyOpenGL was almost so easy it's not even worth mentioning... Except... it was so easy, so it's worth mentioning!&lt;/p&gt;
&lt;p&gt;Here are the steps to install PyOpenGL on Mac OS X (10.4.10):&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;You'll need to get setuptools, and the easiest way to do that is with &lt;a href="http://peak.telecommunity.com/DevCenter/EasyInstall"&gt;EasyInstall&lt;/a&gt; (see &lt;a href="http://peak.telecommunity.com/DevCenter/EasyInstall"&gt;http://peak.telecommunity.com/DevCenter/EasyInstall&lt;/a&gt;). You'll download the &lt;strong&gt;ez_setup.py&lt;/strong&gt; file, and just run: &lt;strong&gt;python ez_setup.py&lt;/strong&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download PyOpenGL from their &lt;a href="http://sourceforge.net/project/showfiles.php?group_id=5988"&gt;download page&lt;/a&gt;. (Side Note: I also grabbed the OpenGLContext). Now, once you untar/unzip it, you should have a PyOpenGL/ directory. Just open a Terminal, cd into that directory, and run &lt;strong&gt;python setup.py build&lt;/strong&gt;. Once that is finished, run &lt;strong&gt;python setup.py install&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now, do the same for OpenGLContext...&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pyopengl-on-os-x/</guid><pubDate>Tue, 16 Oct 2007 20:17:00 +0000</pubDate></item><item><title>Pygame on OS X with python 2.5</title><link>https://bradmontgomery.net/blog/pygame-on-os-x-with-python-25/</link><description>
&lt;p&gt;I've used Pygame on Mac OS X in the past, but my installation recently stopped working for some reason, so I decided to grab the binaries and re-install. After checking out the &lt;a href="http://pythonmac.org/packages/"&gt;Pythonmac&lt;/a&gt; list, I was a little disappointed to see that there were only Pygame binaries for &lt;a href="http://pythonmac.org/packages/py24-fat/index.html"&gt;Python 2.4&lt;/a&gt;. Below is a list of software that I installed (in the necessary order) to get pygame working with Python 2.5 on OS X. All of these (except Python 2.5.1) I got from &lt;a href="http://pythonmac.org/packages/py25-fat/index.html"&gt;pythonmac.org/packages&lt;/a&gt;.&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.python.org/ftp/python/2.5.1/python-2.5.1-macosx.dmg"&gt;Python 2.5.1&lt;/a&gt; - from the &lt;a href="http://www.python.org/download/"&gt;Python download page&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pythonmac.org/packages/py25-fat/dmg/PIL-1.1.6-py2.5-macosx10.4-2007-05-18.dmg"&gt;PIL 1.16 - Python Image Library&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pythonmac.org/packages/py25-fat/dmg/numpy-1.0.3.1-py2.5-macosx10.4-2007-08-27.dmg"&gt;NumPy 1.0.3.1&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pythonmac.org/packages/py25-fat/dmg/Numeric-24.2-py2.5-macosx10.4.dmg"&gt;Numeric 24.2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pythonmac.org/packages/py25-fat/dmg/numarray-1.5.2-py2.5-macosx10.4-2007-01-30.dmg"&gt;numarray 1.5.2&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pythonmac.org/packages/py25-fat/mpkg/pyobjc-1.4-py2.5-macosx10.4.mpkg.zip"&gt;PyObjC 1.4&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pythonmac.org/packages/py25-fat/dmg/wxPython2.8-osx-unicode-2.8.3.0-universal10.4-py2.5.dmg"&gt;wxPython 2.9.3.0&lt;/a&gt; (just in case)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Finally, I grabbed the Pygame 1.7.1 source from &lt;a href="http://pygame.org/download.shtml"&gt;pygame.org/download.shtml&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Installation for most of the prerequisite packages went smoothly, since they all include OS X Installers. While pygame requires Numeric, I went ahead and installed NumPy and numarray, just in case.&lt;/p&gt;
&lt;p&gt;The only real problem came when installing PyObjC. After installing, I opened a python interpreter to test it out by typing &amp;quot;import Foundation&amp;quot; (as it says to do in the &lt;a href="http://pyobjc.sourceforge.net/doc/tutorial.php"&gt;PyObjC Tutorial&lt;/a&gt;. This let to the following error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
dyld: Symbol not found: __cg_jpeg_resync_to_restart  
Referenced from: /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ImageIO.framework/Versions/A/ImageIO  
Expected in: /sw/lib/libJPEG.dylib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Apparently, if you've installed anything using Fink, the PyObjC installer gets confused when trying to choose to which libraries to link. For me, libjpeg was the culprit... hence the error above. To make sure PyObjC works with Apple's ImageIO, I edited my ~/.profile and commented out any lines that set a DYLD_LIBRARY_PATH environment variable (just place a # in front of the line). For me, this looked like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/usr/local/lib:/sw/lib:/usr/lib  
#export DYLD_LIBRARY_PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This prevents any conflicts when linking against libraries installed by fink (which are stored in /sw) and possibly duplicate system libraries. After doing this, I re-ran the PyObjC installer, and everything worked perfectly. Now, I built the Pygame source, and my simple Pygame applications will run.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;So what's next?&lt;/strong&gt; Notice there's no mention of PyOpenGL above, so any Pygame applications that use PyOpenGL won't work Until you &lt;a href="http://bradmontgomery.blogspot.com/2007/10/pyopengl-on-os-x.html"&gt;Install PyOpenGL&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Download this Pygame Package:&lt;/strong&gt; &lt;a href="http://bradmontgomery.net/files/pygame-1.7.1release-py2.5.1-macosx10.4.dmg"&gt;http://bradmontgomery.net/files/pygame-1.7.1release-py2.5.1-macosx10.4.dmg&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pygame-on-os-x-with-python-25/</guid><pubDate>Sun, 23 Sep 2007 20:38:00 +0000</pubDate></item><item><title>$100 iPhone Early adopter Credit</title><link>https://bradmontgomery.net/blog/100-iphone-early-adopter-credit/</link><description>
&lt;p&gt;There's been a lot of hoop-la about the steep price-drop of the iPhone, and a lot of people have widely ranging opinions about the $100 credit.&lt;/p&gt;
&lt;p&gt;Well, I (actually, my wife) willingly paid the initial price, and I've been absolutely happy with my iPhone! I also grabbed my $100 credit. All I had to do was hit &lt;a href="http://apple.com"&gt;Apple's website&lt;/a&gt; and type in my phone number, and my iPhone's serial number.&lt;/p&gt;
&lt;p&gt;$100 is $100! Woot!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/100-iphone-early-adopter-credit/</guid><pubDate>Sat, 15 Sep 2007 20:42:00 +0000</pubDate></item><item><title>The Never-ending "To-Learn" List</title><link>https://bradmontgomery.net/blog/the-never-ending-to-learn-list/</link><description>
&lt;p&gt;&lt;strong&gt;I'm officially a student!&lt;/strong&gt; August marked the beginning of a new semester for me, and this time I'm a full-time student. After being on the faculty side of things for a while, I'm actually having a great time being a student again. One of the major benefits of being a student is that I'm actually getting to dive into that never-ending list of technology tools that I've been wanting to learn how to use!&lt;/p&gt;
&lt;p&gt;Just to name a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://python.org"&gt;Python&lt;/a&gt; - I'm writing as much code as I possibly can in Python. I've used python minimally in the past, but it's actually nice to start working on larger projects using it. I don't really like to get into religious debates about languages, but Python does feel nice!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://pygame.org"&gt;Pygame&lt;/a&gt; - I'm not building a game (yet), but it does make a nice foundation for putting pictures on a screen!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.pythonware.com/products/pil/index.htm"&gt;PIL&lt;/a&gt; - the Python Image Library offers an Excellent way to to Image manipulation!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://twistedmatrix.com"&gt;Twisted&lt;/a&gt; - if you EVER need to build an event-driven network application from the ground up... use this!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.opengl.org/"&gt;OpenGL&lt;/a&gt; - GAhh! Why haven't I learned this before... there's a lot to learn!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Luckily, there's &lt;a href="http://pyopengl.sourceforge.net/"&gt;PyOpenGL&lt;/a&gt;!&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That should get me started!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/the-never-ending-to-learn-list/</guid><pubDate>Mon, 10 Sep 2007 20:43:00 +0000</pubDate></item><item><title>Building Apps for the iPhone</title><link>https://bradmontgomery.net/blog/building-apps-for-the-iphone/</link><description>
&lt;p&gt;So there was this little get-together called &lt;a href="http://barcamp.org/iPhoneDevCamp"&gt;iPhoneDevCamp&lt;/a&gt; last weekend (July 6-8, 2007), and since I'm just over 2000 miles from San Francisco, I missed out. However, in just under a week, there seems to have been a flood of great iPhone applications. To find out what I mean, just check out a &lt;a href="http://www.google.com/search?hl=en&amp;amp;q=iphone+applications&amp;amp;btnG=Search"&gt;google search&lt;/a&gt;, OR, head right on over to the &lt;a href="http://iphoneapplicationlist.com/"&gt;iPhone Application List&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So, in such a short time since the iPhone's release, how have so many applications been built? I blame &lt;a href="http://www.joehewitt.com/"&gt;Joe Hewitt&lt;/a&gt;. His User Interface library, &lt;strong&gt;&lt;a href="http://code.google.com/p/iui/"&gt;iUI&lt;/a&gt;&lt;/strong&gt;, makes building basic apps for the iPhone a cinch. So what is iUI? Well, to quote from his &lt;a href="http://www.joehewitt.com/blog/introducing_iui.php"&gt;blog&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Its goal is simply to turn ordinary standards-based HTML into a polished, usable interface that meets the high standards set by Apple's own native iPhone apps.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So, there you have it. &lt;a href="http://code.google.com/p/iui/source"&gt;Try it out!&lt;/a&gt; I certainly will!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/building-apps-for-the-iphone/</guid><pubDate>Fri, 13 Jul 2007 20:44:00 +0000</pubDate></item><item><title>iPhone Disappointments</title><link>https://bradmontgomery.net/blog/iphone-disappointments/</link><description>
&lt;p&gt;Updated on 2007-07-10&lt;br /&gt;
(I forgot a couple of things, so I'm adding them below as numbers 1 &amp;amp; 2) Part 3 of my iPhone saga (&lt;a href="http://bradmontgomery.net/show.php?page=blog&amp;amp;id=45"&gt;Part 1&lt;/a&gt; and &lt;a href="http://bradmontgomery.net/show.php?page=blog&amp;amp;id=46"&gt;Part 2&lt;/a&gt;)&lt;br /&gt;
After using the iPhone for a little less than a week, I do have a few disappointments. Don't get me wrong, I still think it's an incredibly cool device. Like my wife said, &amp;quot;It's the greatest thing since sliced bread.&amp;quot;&lt;/p&gt;
&lt;p&gt;I share some of my disappointments with &lt;a href="http://terrywhite.com/techblog/"&gt;Terry White&lt;/a&gt;, who gives &lt;a href="http://terrywhite.com/techblog/?p=196"&gt;a fairly objective review&lt;/a&gt; of the iPhone in general.&lt;/p&gt;
&lt;p&gt;So to cut to the chase, here they are:&lt;/p&gt;
&lt;ol start="2"&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Limited Tilt...&lt;/strong&gt; I've found that it's easiest to type on the iPhone when I tilt it sideways (in landscape) However, the app that I type most in (Mail) doesn't let you do this!! In fact, only Safari, Photos, and iPod take advantage of the iPhones accelerometer. Mail, SMS, Google Maps, and Notes (all apps that may require extensive &amp;quot;typing&amp;quot;) don't! Hopefully a software update will fix this!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Where are the games!?&lt;/strong&gt; I have to admit that I've already had a few neat ideas for games on the iPhone. Surprisingly, it doesn't come with ANY bundled games. The folks who put on the &lt;a href="http://barcamp.org/iPhoneDevCamp"&gt;iPhoneDevCamp&lt;/a&gt; may have had some interesting browser-based games, but there's still a lot more you could do with a local app. Only time will tell what will happen for those interested in &lt;a href="http://www.google.com/search?q=iphone%203rd%20party%20developer&amp;amp;sourceid=mozilla2&amp;amp;ie=utf-8&amp;amp;oe=utf-8"&gt;3rd party development for the iPhone&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Fingerprints!&lt;/strong&gt;: I'll admit, I'm OC when it comes to fingerprints on my monitor/TV/display, so I'm constantly wiping the iPhone on my shirt.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;EDGE&lt;/strong&gt;: OK, nothing wrong with the iPhone itself... the EDGE network (AT&amp;amp;T's data network) is just too slow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Ringtones&lt;/strong&gt;: All that music, and you can't use your tunes as a ringtone!&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No Video!&lt;/strong&gt; - While most cell phones give you poor quality video, at least they give you the option to capture video! Not so with the iPhone (yet, I hope)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Safari/Google Maps Crash!&lt;/strong&gt;: This one was a big surprise to me! Safari seems to crash a LOT for me. In fact, I tried to post a blog yesterday, and halfway through writing it on the iPhone, Safari just disappeared. When I started Safari again, I was greeted with the site I'd previously viewed (&lt;a href="http://slashdot.org/palm"&gt;http://slashdot.org/palm&lt;/a&gt;).&lt;br /&gt;
Apparently several others have experienced this, and the solution (which I found on &lt;a href="http://discussions.apple.com/thread.jspa?messageID=4880845%C3%AE%C2%A9%C5%BE%C3%AF%C2%BF%C2%BD"&gt;Apple's Discussion Boards&lt;/a&gt;, is to simply reboot the phone. I'm confident that this issue will be fixed with an update in the future.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Bluetooth headset support&lt;/strong&gt;: I've got a Jabra BT 350 headset, which the iPhone regonised and paired with perfectly. However, sometimes when I talk on the iPhone, it doesn't give me the option to switch the Audio to the headset.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;It Locked up!&lt;/strong&gt;: Ok, so yesterday, my iPhone completely locked up. Well, the touch screen wouldn't work, with is fairly devastating for the iPhone. I hadn't reset it since I'd activated it, and even when I tried to power it off... I couldn't move the slider to verify that I wanted it powered off! After a &lt;a href="http://docs.info.apple.com/article.html?artnum=305743"&gt;Reset&lt;/a&gt;, though, it seems to be working perfectly.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Overall, I'm still happy. Personally, I think the large screen is what makes the iPhone so cool. I really like my music, but I've been more than happy with my iPod nano for that... it's the iPhones integration with iPhoto that takes the cake for me. I've probably found myself looking a pictures of my daughters and my wife more than anything, and having the 2 megapixel camera rocks! The email/web/phone just happens to seal the deal for me.So, &lt;a href="http://rosemarie.name"&gt;baby&lt;/a&gt;... Again, THANK YOU!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/iphone-disappointments/</guid><pubDate>Sun, 08 Jul 2007 20:46:00 +0000</pubDate></item><item><title>My wife bought 2 iPhones!!!</title><link>https://bradmontgomery.net/blog/my-wife-bought-2-iphones/</link><description>
&lt;p&gt;I think I'm still in shock. Yesterday, I got a call from my wife. She simply said, &amp;quot;We both have iPhones! I got you the 8Gb model, and I got the 4Gb model...&amp;quot;&lt;/p&gt;
&lt;p&gt;Yeah... I'm still in shock.&lt;/p&gt;
&lt;p&gt;So, over the next few days, I've decided to blog about my iPhone fun. First, I'll start with some pictures!&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/the_iPhone_box.png" alt="The iPhone Box." /&gt;&lt;br /&gt;
&lt;img src="http://bradmontgomery.net/files/iPhone/the_iPhone_on_box.png" alt="The iPhone on top of the box." /&gt;&lt;br /&gt;
&lt;img src="http://bradmontgomery.net/files/iPhone/iPhone_stuff.png" alt="Items included with the iPhone" /&gt;&lt;/p&gt;
&lt;p&gt;So, here we have the iPhone with it's box, and all of the stuff that was include with it. There's the dock, a USB connector, an AC adapter to recharge the iPhone, the new stereo headphones with a mic, the manuals, and the complementary apple stickers.&lt;/p&gt;
&lt;p&gt;One thing that I didn't know about was the new headphones. In addition to just being the basic earbud (like those bundled with an iPod), these headphones also include a mic, so they can be used to talk on the phone. The mic includes a &amp;quot;button&amp;quot; that allows you to answer phone calls. (it's not really an extruding button per se, but a &amp;quot;press-able&amp;quot; area surrounding the mic.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/iPhone_size_1.png" alt="The iPhone with a US Quarter" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/iPhone_size_2.png" alt="The iPhone with a US Quarter" /&gt;&lt;br /&gt;
&lt;img src="http://bradmontgomery.net/files/iPhone/iPhone_size_3.png" alt="The iPhone next to a Nokia 6102" /&gt;&lt;/p&gt;
&lt;p&gt;Now, it's really difficult to get an idea just how sleek the iPhone is, without holding one yourself. I've photographed my new iPhone next to a US Quarter and next to my old Nokia 6102. I have to admit, for a phone (or any portable device) the screen feels large, but the phone feels very slim. I don't really like to carry much stuff in my pocket, so I'm not sure how it will feel when I'm not using it.&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/activate_iPhone.png" alt="You have to Activate the iPhone before using it!" /&gt;&lt;br /&gt;
&lt;img src="http://bradmontgomery.net/files/iPhone/iPhone_keypad.png" alt="The iPhone keypad" /&gt;&lt;/p&gt;
&lt;p&gt;As soon as I unpackaged my iPhone, I turned it on to start playing with it... Unfortunately, there's not much you can do until you activate it. You can, however, unlock the display, and see the keypad, so I assume it could be used to dial 911 without activating it (like most/all cell phones). Before I activated mine, I did punch some numbers on the keypad, just to see how it felt. I didn't really have any problem touching the correct numbers, so I'm happy with how the keypad feels. One other thing I noticed, is that the numbers on the screen decrease in size as you type more of them... this way, you always see the whole number you're dialing (unlike some other cell phones where you may only see 4-5 digits at a time, or where the digits will stack on top of each other)&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/docked_on_mini.png" alt="The iPhone docked on top of my Mac mini." /&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/docked_on_mini2.png" alt="The iPhone docked on top of my Mac mini." /&gt;&lt;/p&gt;
&lt;p&gt;So, I finally got around to plugging up the dock and connecting my iPhone. At first, I plugged the dock directly into my powered USB hub, but iTunes didn't detect the iPhone! So, I plugged the dock directly into the back of my Mac mini, and iTunes immediately detected it. &lt;strong&gt;Time to activate this baby!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/iPhone_welcome.png" alt="iTunes welcomes you to the iPhone." /&gt;&lt;/p&gt;
&lt;p&gt;As soon as iTunes detects the iPhone, it greets you with a welcome screen, and walks you through the activation process. My wife and I were already Cingular/AT&amp;amp;T customers, and luckily the activation process included options for this possibility. Unfortunately, activating the iPhone through iTunes only allowed us to add a data plan to our existing plan. The lowest-cost data plan is $20/per phone, so our monthly bill has been increased by $40. I read the &lt;a href="http://www.wireless.att.com/"&gt;att wireless website&lt;/a&gt;, and it seems that we should've been able to switch to a new plan. I suspect that you'd either have to call AT&amp;amp;T or stop by a store to do this. The other thing that I'm a little disappointed about is the FamilyTalk pricing for the iPhone. For regular phones, FamilyTalk is $9.99/per line. For the iPhone, it's $29.99/per line. So, as of now, our phone bill has increased an extra $20 on top of the $40 for the data access... I'm not exactly happy about that.&lt;/p&gt;
&lt;p&gt;All in all, the iTunes registration process was really easy, and for both phones, it only took about 5-10 minutes.&lt;/p&gt;
&lt;p&gt;Once my iPhone was registered, it seamlessly sync'd my iCal calendars, my photos from iPhoto, and my music from iTunes. Of course, since I'm a mac user, I expected this seamless integration. My wife, who's using Windows XP was able to pull music from iTunes and photos from her My Pictures folder. The iPhone also has the capability to sync mail and calendar info from Outlook or Outlook Express, but we haven't had a chance to try that out yet.&lt;/p&gt;
&lt;p&gt;So, my initial reaction to being an iPhone owner: &amp;quot;COOL!&amp;quot;&lt;br /&gt;
And it is... very cool, though a little pricey.&lt;/p&gt;
&lt;p&gt;As I explore my iPhone's new features and learn all of its quirks, I'll post my thoughts on this cool new gadget.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/my-wife-bought-2-iphones/</guid><pubDate>Wed, 04 Jul 2007 20:51:00 +0000</pubDate></item><item><title>Using (and Abusing) the iPhone</title><link>https://bradmontgomery.net/blog/using-and-abusing-the-iphone/</link><description>
&lt;p&gt;OK... so for part 2 of my iPhone saga:&lt;br /&gt;
We went to visit some family today, and of course I took my iPhone. For the most part, I've really tested out the camera today. I'm no guru, but I'm very happy with how quickly the iPhone takes pictures. Since my girls are now 4 and 2, this is a very important feature!! I've also got an HP Photosmart M527, and my non-scientific opinion is that the iPhone takes photos about as twice as fast as my HP. (Of course, it's a 2-megapixel camera vs. a 6-megapixel camera)&lt;/p&gt;
&lt;p&gt;Just to give you an idea, here's a picture of my youngest daughter: &lt;a href="http://bradmontgomery.net/files/iPhone/iphone_photo.jpg"&gt;&lt;img src="http://bradmontgomery.net/files/iPhone/iphone_photo_thumb.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I convinced my wife (OK, so she offered :)) to drive home from out festivities today, so I could play with the iPhone in the car. While in town, I had no problems browsing the web or checking my email using the EDGE connection. However, once we got out of town, there were several locations where I had no network connection (this is rural NE Arkansas...)&lt;/p&gt;
&lt;p&gt;Another thing that I've noticed is that there are a &lt;strong&gt;LOT&lt;/strong&gt; of unsecured wireless networks... but that's for another blog!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;As for typing on the iPhone&lt;/strong&gt;, I'm fairly impressed with it's ability to suggest and correct misspelled words. Now, I don't really think that I have large fingers, but I very frequently misspelled words using the iPhone. However, the iPhone &amp;quot;guessed&amp;quot; what I wanted about 80% of the time! Things like &amp;quot;sxgppl&amp;quot; were correctly identified as &amp;quot;school&amp;quot; (As as side note, I'd guesstimate that I touch type somewhere around 60wpm with 90% accuracy, if anyone cares)So, when typing on the iPhone, I found myself just ignoring what I typed in hopes that the phone could figure it out. Overall, I'm impressed.&lt;/p&gt;
&lt;p&gt;Now that I'm home, the geek in me is dieing to portscan this thing! So here goes! First a basic portmap with nmap:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
nmap 192.168.0.11  
  
Starting Nmap 4.20 ( http://insecure.org ) at 2007-07-04 19:41 CDT  
All 1697 scanned ports on 192.168.0.11 are closed  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Interesting enough... let's see what OS nmap thinks is running on this thing:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
sudo nmap -O 192.168.0.11  
  
Starting Nmap 4.20 ( http://insecure.org ) at 2007-07-04 19:43 CDT  
Warning:  OS detection for 192.168.0.11 will be MUCH less reliable because we did not find at least 1 open and 1 closed TCP port  
All 1697 scanned ports on 192.168.0.11 are closed  
MAC Address: 00:1B:63:E1:ED:D8 (Unknown)  
Device type: general purpose  
Running: Apple Mac OS X 10.3.X|10.4.X|10.5.X, FreeBSD 4.x  
OS details: Applie Mac OS X 10.3.9 - 10.4.7, Apple Mac OS X 10.4.8 (Tiger), OS X Server 10.5 (Leopard) pre-release build 9A284, FreeBSD 4.10-RELEASE (x86)  
Network Distance: 1 hop  
  
OS detection performed. Please report any incorrect results at http://insecure.org/nmap/submit/ .  
Nmap finished: 1 IP address (1 host up) scanned in 16.991 seconds
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, while I'm not really a security professional, and I know these are very basic scans, it seems like there's no blatantly obvious security gaps in the iPhone (through its wifi connection anyway). If anybody has any more advanced nmap scans they'd like to see performed, just let me know.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/using-and-abusing-the-iphone/</guid><pubDate>Wed, 04 Jul 2007 20:47:00 +0000</pubDate></item><item><title>Compiling Warzone 2100 on Mac OS X</title><link>https://bradmontgomery.net/blog/compiling-warzone-2100-on-mac-os-x/</link><description>
&lt;p&gt;I recently ran across &lt;a href="http://wz2100.net/"&gt;The Warzone 2100 Resurrection Project&lt;/a&gt;, and I thought to myself,&amp;quot;cool, I wonder if there's an OS X version...&amp;quot; So, I hit their &lt;a href="http://wz2100.net/downloads.html"&gt;downloads&lt;/a&gt; page only to find the message: &amp;quot;(The MacOSX diskimage will follow soon)&amp;quot;&lt;/p&gt;
&lt;p&gt;So I thought, &amp;quot;oh well, I'll just grab the source code and compile it!&amp;quot; After about two hours of digging, I finally got it compiled, and here's how! (NOTE: I've got quite a bit of Unix stuff installed via &lt;a href="http://finkproject.org/"&gt;fink&lt;/a&gt;, so your mileage may vary)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Here's the list of stuff I had to get/install/compile before I could even start on Warzone 2100: &lt;strong&gt;cmake (to compile physfs)&lt;/strong&gt;, &lt;strong&gt;physfs&lt;/strong&gt;, &lt;strong&gt;a newer bison&lt;/strong&gt;, and &lt;strong&gt;SDL_net&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;First I grab &lt;a href="http://cmake.org"&gt;cmake 2.4.6&lt;/a&gt;. Luckily, they have a &lt;a href="http://cmake.org/HTML/Download.html"&gt;universal .dmg for Tiger&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Next, I grab the source code for &lt;a href="http://icculus.org/physfs/"&gt;physfs-1.1.1&lt;/a&gt; from their &lt;a href="http://icculus.org/physfs/downloads/"&gt;download page&lt;/a&gt;. At first I tried compiling the &amp;quot;Unix Way&amp;quot;, but that didn't work, so I used cmake to generate an Xcode project (pretty cool!). From a terminal window, I cd into the physfs directory and type:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;cmake -G Xcode .
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, after compiling physfs with Xcode, I copied the libraries to my /usr/local directories. Again from a Terminal:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo cp libphysfs.* /usr/local/lib  
sudo cp physfs.h /usr/local/include
&lt;/code&gt;&lt;/pre&gt;
&lt;ol start="7"&gt;
&lt;li&gt;
&lt;p&gt;Next, I open up &lt;a href="http://finkcommander.sourceforge.net/"&gt;fink commander&lt;/a&gt; and grab the newest version of bison from fink&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now I need &lt;a href="http://www.libsdl.org/projects/SDL_net/"&gt;SDL_net&lt;/a&gt;. While the project offers a &lt;a href="http://www.libsdl.org/projects/SDL_net/release/SDL_net-1.2.6.dmg"&gt;Mac OS X Framework&lt;/a&gt; and SDL_net is available through fink... I grabbed the source anyway. It compiled just fine the Unix way:&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;  
./configure  
make  
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This put all the libraries in /usr/local/lib and /usr/local/include&lt;/p&gt;
&lt;ol start="11"&gt;
&lt;li&gt;Finally, time to compile Warzone2100, so I grabbed the &lt;a href="http://wz2100.net/downloads.html"&gt;source code&lt;/a&gt;, which contains a handy-dandy file called COMPILE. I suggest you read it. To start of, I opened a terminal and cd'd into the warzone2100-2.0.6 directory and typed the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;./autogen.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, I typed the following to configure it using my fink libraries and headers:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./configure --prefix=/Applications/Warzone2100-2.0.6 LDFLAGS=-L/sw/lib CPPFLAGS=-I/sw/include
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will also put the final binary in my /Applications Directory. So, the last to steps are to compile, and install:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make  
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This did the trick for me.&lt;/p&gt;
&lt;ol start="13"&gt;
&lt;li&gt;Now that I got Warzone2100 compiled, I can open a terminal and type the following:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;/Applications/Warzone2100/bin/warzone2100 --fullscreen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And this &amp;quot;should&amp;quot; lauch the application!&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/compiling-warzone-2100-on-mac-os-x/</guid><pubDate>Sat, 16 Jun 2007 20:53:00 +0000</pubDate></item><item><title>Thunder Demons live here!</title><link>https://bradmontgomery.net/blog/thunder-demons-live-here/</link><description>
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/thunderdemons.jpg" alt="Thunder Demons live here!" /&gt;While walking across &lt;a href="http://memphis.edu"&gt;campus&lt;/a&gt;, I noticed this particular image attached to a large green box that I knew to contain electrical &amp;quot;stuff&amp;quot;. Now, I know the dangers of mixing humans with direct electrical current, but I'm not so sure this image evokes the correct message. I'm not sure that a monstrous blob of electricity has ever actually jumped out of a box in order to heinously inflict harm to humans as they unknowingly walk by... I could be wrong, though. Perhaps I should avoid that particular sidewalk next time I'm on campus.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/thunder-demons-live-here/</guid><pubDate>Sat, 26 May 2007 20:55:00 +0000</pubDate></item><item><title>Easy Video Conferencing?</title><link>https://bradmontgomery.net/blog/easy-video-conferencing/</link><description>
&lt;p&gt;I just skimmed through the list of &lt;a href="http://www.pcworld.com/printable/article/id,131935/printable.html"&gt;PC World's 100 Best Products of 2007&lt;/a&gt;, and one of the things that caught my eye was&lt;br /&gt;
&lt;a href="http://www.sightspeed.com/"&gt;SightSpeed&lt;/a&gt;. Apparently it's supposed to be the world's best video conferencing system. What interests me, though is the price (FREE!) and that it works on Mac OS X (and Windows). I'm going to give it a shot and see how it works.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/easy-video-conferencing/</guid><pubDate>Tue, 22 May 2007 20:56:00 +0000</pubDate></item><item><title>Hello Torque, again.</title><link>https://bradmontgomery.net/blog/hello-torque-again/</link><description>
&lt;p&gt;Well, I've just begun to dig into the &lt;a href="http://www.garagegames.com/products/torque/tge/"&gt;Torque Game Engine&lt;/a&gt; again, but this time, I'm building it on a Linux box. Once I downloaded the Linux source, it took me a while to figure out how to get it compiled. TGE's configuration is a little different than the typical &amp;quot;./configure and make&amp;quot; process.&lt;/p&gt;
&lt;p&gt;First of all, I tried to make sure I had all of the development tools necessary to build TGE, including &lt;strong&gt;nasm&lt;/strong&gt;, &lt;strong&gt;libogg&lt;/strong&gt;, &lt;strong&gt;libvorbis&lt;/strong&gt;, and &lt;strong&gt;libtheora&lt;/strong&gt; along with any -dev versions of many packages. Then, once you unzip the source you need to issue the following command to set up your configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make -f mk/configure.mk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will display the current build configuration and it will tell you if it's valid or not. To get a valid configuration on my system, I used the following configuration:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;make -f m/configure.mk OS=LINUX COMPILER=GCC4 BUILD=DEBUG \  
DIR.OBJ=/home/brad/TorqueGameEngineSDK-Linux-1-5-0/build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that I had to use an absolute path for the (optional) object Directory. At first, I just used &amp;quot;DIR.OBJ=build&amp;quot;, which resulted in some compiler errors. Anyway, this placed all the object files in a directory called &amp;quot;build.GCC4.DEBUG&amp;quot;&lt;/p&gt;
&lt;p&gt;The next change I had to make was in an actual source file. Apparently, GCC didn't like some things... I'm not going to post any details, but I did eventually get it working, so &lt;a href="http://bradmontgomery.net/show.php?page=contact"&gt;contact me&lt;/a&gt; if you're interested.&lt;/p&gt;
&lt;p&gt;Good Luck!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/hello-torque-again/</guid><pubDate>Wed, 16 May 2007 20:57:00 +0000</pubDate></item><item><title>MacMathematics</title><link>https://bradmontgomery.net/blog/macmathematics/</link><description>
&lt;p&gt;One of my Favorite Mac Apps is &lt;a href="http://en.wikipedia.org/wiki/Grapher"&gt;Grapher&lt;/a&gt;. It lets you graph everything from simple 2D equations to complex 3D equations. For example, want to see all of the &lt;a href="http://bradmontgomery.net/files/CubeAxesOfSymmetry.jpg"&gt;Axes of symmetry for a cube&lt;/a&gt;? Just enter the equations x=0, y=0, z=0, x=y, x=-y, x=z, x=-z, y=z, and y=-z, and voila! Pictures make math fun! You can also save these in .gcx files. Download my cube: &lt;a href="http://bradmontgomery.net/files/CubeAxesOfSymmetry.gcx"&gt;CubeAxesOfSymmetry.gcx&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/macmathematics/</guid><pubDate>Mon, 23 Apr 2007 20:58:00 +0000</pubDate></item><item><title>MacMathematics</title><link>https://bradmontgomery.net/blog/macmathematics-1/</link><description>
&lt;p&gt;One of my Favorite Mac Apps is &lt;a href="http://en.wikipedia.org/wiki/Grapher"&gt;Grapher&lt;/a&gt;. It lets you graph everything from simple 2D equations to complex 3D equations. For example, want to see all of the &lt;a href="http://bradmontgomery.net/files/CubeAxesOfSymmetry.jpg"&gt;Axes of symmetry for a cube&lt;/a&gt;? Just enter the equations x=0, y=0, z=0, x=y, x=-y, x=z, x=-z, y=z, and y=-z, and voila!Pictures make math fun! You can also save these in .gcx files. Download my cube: &lt;a href="http://bradmontgomery.net/files/CubeAxesOfSymmetry.gcx"&gt;CubeAxesOfSymmetry.gcx&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/macmathematics-1/</guid><pubDate>Mon, 23 Apr 2007 20:58:00 +0000</pubDate></item><item><title>Casual Games</title><link>https://bradmontgomery.net/blog/casual-games/</link><description>
&lt;p&gt;It seems like I keep running into this term, &amp;quot;&lt;a href="http://en.wikipedia.org/wiki/Casual_game"&gt;casual games&lt;/a&gt;.&amp;quot; Apparently this is a burgeoning industry with the advent of more advanced handheld devices (like cellphones). There were even two keynotes (Trip Hawkins of&lt;br /&gt;
&lt;a href="http://www.digitalchocolate.com/"&gt;Digital Chocolate&lt;/a&gt;, and Robert Tercek of &lt;a href="http://peoplejam.com/"&gt;PeopleJam&lt;/a&gt; and GDC Mobile) regarding causal games at the recent &lt;a href="http://www.gdconf.com/"&gt;Game Developers Conference&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Basically, any simple (hopefully addictive) game that's quick and easy to learn falls in the category of a casual game. Two of my favorite examples are &lt;a href="http://get.games.yahoo.com/proddesc?gamekey=atlantis2"&gt;Atlantis Sky Patrol&lt;/a&gt; (from &lt;a href="http://www.bigfishgames.com"&gt;Big Fish Games&lt;/a&gt;) and &lt;a href="http://www.popcap.com/launchpage.php?theGame=insaniquarium"&gt;Insaniquarium&lt;/a&gt; (from &lt;a href="http://www.popcap.com"&gt;PopCam&lt;/a&gt;). [Side note: It seems like I remember playing insaniquarium before it belonged to a company... did I just dream this?]&lt;/p&gt;
&lt;p&gt;I don't where I read it, but I vaguley remember reading a quote somewhere that had something to do with casual games, and it said something similar to this, &amp;quot;If you don't think you're a gamer, it's just because you haven't found the right game!&amp;quot;[Another Sidenote: Basicially, these are the the types of games I would like write during my free time (if I had any!)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/casual-games/</guid><pubDate>Fri, 09 Mar 2007 21:01:00 +0000</pubDate></item><item><title>Mac mini disassembly</title><link>https://bradmontgomery.net/blog/mac-mini-disassembly/</link><description>
&lt;p&gt;&lt;img src="http://bradmontgomery.net/files/mini-disassembly.png" alt="Mac mini disassembly" /&gt;&lt;br /&gt;
I've been a mac user since my wife bought me a Min in 2005. During that time I've enjoyed being a Mac user, but until now I've not performed a lobotomy on my little mac. I finally decided to upgrad to 1Gb of Ram, and thanks to &lt;a href="http://www.newegg.com/product/product.asp?item=N82E16820161626"&gt;NewEgg&lt;/a&gt;, this was fairly inexpensive. Also, thanks to &lt;a href="http://www.russellbeattie.com/notebook/1008276.html"&gt;Russel Beattie&lt;/a&gt; and &lt;a href="http://www.smashsworld.com/2005/01/taking-apart-mac-mini-how-to.php"&gt;smashsworld.com&lt;/a&gt;, I found it fairly easy to get into the mini.&lt;/p&gt;
&lt;p&gt;Though I only upgraded the RAM, I was interested in discovering how difficult it would be to upgrade the Hard drive as well. To do this, you have to first remove the combo drive (which is attached to a daughter board along with the hard drive).&lt;br /&gt;
Once this has been done, you need to remove the air vents and the processor's cooling fan in order to get to the screws that hold the drive in place. While doing this, I noticed that the power switch's wire was taped to the vent, so I just cut this (The TAPE, not the WIRE!). Once all of the screws that held the air vents to the motherboard were removed, I found it fairly easy to just lift the hard drive and it's daughterboard out of the motherboard.&lt;br /&gt;
In doing this, I was fairly amazed at how small the Mac mini really is... I guess you have to see it to believe it!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/mac-mini-disassembly/</guid><pubDate>Mon, 05 Mar 2007 21:04:00 +0000</pubDate></item><item><title>Javascript: What is the standard?</title><link>https://bradmontgomery.net/blog/javascript-what-is-the-standard/</link><description>
&lt;p&gt;I've recently been writing a little javascript, and I needed to chage the value of some text inside an html/xhtml element. It seems there are several ways to do this, but evey browser may or may not support the same method for doing it (big surprise, here) I'm not sure what is considered the &amp;quot;standard&amp;quot; way. Here's a little script that I use to help me decide which browsers support which methods for altering text within an html/xhtml element:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
&amp;lt;html&amp;gt;  
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;blah&amp;lt;/title&amp;gt;  
&amp;lt;script language=&amp;quot;JavaScript&amp;quot;&amp;gt;  
&amp;lt;!-- Hide code from older browsers  
function loader() {  
  pp = document.getElementsByTagName(&amp;quot;p&amp;quot;)  
  pp[0].innerText = &amp;quot;.innerText DOES work!&amp;quot;  
  pp[1].style.content = &amp;quot;.style.content DOES work!&amp;quot;  
  pp[2].innerhtml    = &amp;quot;.innerhtml DOES work!&amp;quot;  
  pp[3].childNodes[0].nodeValue = &amp;quot;.childNodes[0].nodeValue DOES work!&amp;quot;  
}  
// End hiding--&amp;gt;  
&amp;lt;/script&amp;gt;  
&amp;lt;/head&amp;gt;  
  
&amp;lt;body onload=&amp;quot;loader()&amp;quot;&amp;gt;  
&amp;lt;h1&amp;gt;Changing text with javascript&amp;lt;/h1&amp;gt;  
&amp;lt;p&amp;gt; .innerText DOES NOT work.&amp;lt;/p&amp;gt;  
  
&amp;lt;p&amp;gt; .style.content DOES NOT work.&amp;lt;/p&amp;gt;  
&amp;lt;p&amp;gt; .innerhtml DOES NOT work.&amp;lt;/p&amp;gt;  
&amp;lt;p&amp;gt; .childNodes[0].nodeValue DOES NOT work.&amp;lt;/p&amp;gt;  
&amp;lt;/body&amp;gt;  
  
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(Thanks to the users of [codingforums.com](http://www.codingforums.com/showthread.php?t=34717&lt;br /&gt;), especially Roy Gardiner, whose code from which this script was adapted.)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/javascript-what-is-the-standard/</guid><pubDate>Tue, 27 Feb 2007 21:06:00 +0000</pubDate></item><item><title>magic SysRq</title><link>https://bradmontgomery.net/blog/magic-sysrq/</link><description>
&lt;p&gt;Occasionally I goof up. Yes, as much as I hate to admit it, it's true. However, thanks to &lt;a href="http://liquidweather.net/howto/index.php?id=97"&gt;this handy tutorial on liquidweather.net&lt;/a&gt;, I've learned about some nifty ways to kill things in linux.&lt;/p&gt;
&lt;p&gt;In addition to the traditional ways to kill a process, this tutorial lists some magic SysRq key combinations that--if enabled in your kernel--can provide a nice option to just pulling the plug...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Alt+SysRq+K - Kills all processes (SIGKILL / kill -9)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alt+SysRq+E - Terminates all processes (SIGTERM / kill -15)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alt+SysRq+I - Interrupts all processes (SIGINT / kill -2)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alt+SysRq+U - Force unmount and remount of all filesystems readonly&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alt+SysRq+S - Syncs all disks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Alt+SysRq+B - Reboots&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Note to self, and any other developers: When using a language without built-in garbage collection, don't forget to free up memory when you're done!)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/magic-sysrq/</guid><pubDate>Fri, 09 Feb 2007 21:07:00 +0000</pubDate></item><item><title>wifit - an iwconfig tool</title><link>https://bradmontgomery.net/blog/wifit-an-iwconfig-tool/</link><description>
&lt;p&gt;I've recently installed &lt;a href="http://www.mepis.org/"&gt;Mepis Linux&lt;/a&gt; on a couple of laptops (a Compaq Presario 2195US and a Dell Latitude D610, both of which use &lt;a href="http://ndiswrapper.sourceforge.net/"&gt;NdisWrapper&lt;/a&gt; for wifi drivers).I'm fairly mobile, so I needed a way to quickly change my wireless settings. I wrote this simple bash script to let me do that, and I thought I'd just share it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
#!/bin/bash  
  
## wifit - the wifi tool  
## This is a script that accepts a wifi-enabled interface,   
## essid, and an optional ascii key for a wifi network connection  
  
if [ $# -lt 2 ] || [ $# -gt 3 ] ; then   
 echo &amp;quot;wifit - the wifi tool&amp;quot;  
 echo &amp;quot;-------------------------------------------------&amp;quot;  
 echo &amp;quot;Usage: wifit   [Optional: ]&amp;quot;  
 echo &amp;quot; Example: wifit wlan0 somenet &amp;quot;  
 echo &amp;quot; Example: wifit wlan0 somenet mypassword &amp;quot;  
 echo &amp;quot;-------------------------------------------------&amp;quot;  
else  
 echo &amp;quot;Setting up wifi connection for &amp;quot;  
 echo &amp;quot;Interface $1, ESSID: $2...&amp;quot;  
  
 iwconfig $1 essid $2  
 iwlist $1 scan  
 iwconfig $1 mode Managed  
 if [ -n $3 ] ; then  
 iwconfig $1 key restricted s:$3  
 else  
 iwconfig $1 key open  
 iwconfig ap any  
 fi  
 iwconfig commit  
 dhclient  
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use this, just copy and paste the code above into a file named wifit (or wifit.sh, or whatever you want). You'll then need to make that file executable using chmod:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod a+x wifit.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then, simply call the script (possibly using sudo) passing it any arguments you need:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./wifit wlan0 somenetwork
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you could place this file in your /usr/local/bin or /usr/bin directories so that it would be included in your PATH. If you find this useful, or if you decide to add to is, feel free to &lt;a href="http://bradmontgomery.net/show.php?page=contact"&gt;Contact Me&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Enjoy.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/wifit-an-iwconfig-tool/</guid><pubDate>Thu, 08 Feb 2007 21:09:00 +0000</pubDate></item><item><title>Automatic Backups with cron, tar, and SSH</title><link>https://bradmontgomery.net/blog/automatic-backups-with-cron-tar-and-ssh/</link><description>
&lt;p&gt;Everyone knows that backups are important, but how many of us regularly back up our own websites, blogs, or whatever? Well, I've put together a relatively simple way for my Mac to log into my Linux-based webserver, archive some content, and download it for me. All of this is done Automatically, too!&lt;/p&gt;
&lt;p&gt;The first thing I had to do, was set up my home machine (a Mac, but any Unix-based system should work, too) so that it could log into a remote host without requiring me to type a password. This is accomplished by generating a public key, which I can store on my webserver. To do this, I opened a Terminal, and typed the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This generated the following output, and I accepted all default values... even the empty passphrase. This is important, because I don't want to type anything to log into my server!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
Generating public/private rsa key pair.  
Enter file in which to save the key (/home/brad/.ssh/id_rsa):  
Enter passphrase (empty for no passphrase):   
Enter same passphrase again:   
Your identification has been saved in /home/brad/.ssh/id_rsa.  
Your public key has been saved in /home/brad/.ssh/id_rsa.pub.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, I need to store the public key (id_rsa.pub) on my webserver. Again, from my Terminal (in my home directory), I issue the following command to log into my webserver (Note that you'd need to change the following command to fit your needs).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat .ssh/id_rsa.pub | ssh myusername@mywebserver.com 'cat &amp;gt;&amp;gt; .ssh/authorized_keys'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I'll need to type my password here, but after executing this command, I should be able to ssh into my remote server without ever typing my password again!&lt;/p&gt;
&lt;p&gt;Now that I've accomplished that, I need to write some simple bash scripts that will archive my web content. &lt;strong&gt;On my Webserver:&lt;/strong&gt; For simplicity sake, let's save this in our home directory in a file named www.sh. Inside that file we put the following shell script, which uses tar to archive my web directory and then calls bzip2 to compress the tar file. Upon execution, I should have a file with a name similar to 2007-01-10.tar.bz2. Notice that you could also modify this script to invoke mysql_dump or pg_dump if you needed to backup a database as well!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
#!/bin/bash  
DATE=`date +%F`  # Grab the date  
TARFILE=$DATE-www.tar # Use it to create a filename  
tar -cf $TARFILE public_html  
bzip2 $TARFILE # compress the tarfile
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that I have a script that will archive my content, I need to schedule a cron job to run it on a regular basis. I can use the following command to view my cron jobs&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;crontab -l
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And, to edit my cron jobs, I just use:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;crontab -e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will open your system's default editor (vi for me), where we need to add the information that tells cron when to run our www.sh script. I added the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;30 1 * * * ~/www.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This tells cron to run my backup script every morning at 1:30am (system time). See &lt;a href="http://en.wikipedia.org/wiki/Cron"&gt;wikipedia&lt;/a&gt; for more info on cron.&lt;/p&gt;
&lt;p&gt;Almost done! I've now got my webserver generating automatic nightly backups, but how can I transfer them to my local machine? Well, we'll make use of our newly generated public key to do this! First I need to write another simple bash script that will use scp to copy the backup that I generated on the server.&lt;strong&gt;On my local machine&lt;/strong&gt;, I create a file called transfer.sh, which contains the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash  
DATE=`date +%F` # Grab the date  
# I'm downloading file with this name  
FILE=$DATE-www.tar.bz2   
  
# put the file on my local Desktop  
scp myusername@mywebserver.com:~/$FILE ~/Desktop  
  
# delete the file from the server  
ssh myusername@mywebserver.com rm -f ~/$FILE  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now all I have to do is schedule a cron job on my local machine, and I've got an automatic website backup! Since I'm using Mac OS X, this works just like it does on a Linux box. In my terminal I type the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;crontab -e
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This opens vi for me, so I type the following, which will exectute my transfer.sh script every morning at 7:30am.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  
30 7 * * * $HOME/transfer.sh  

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That's It! One side note, however... the bash scripts that I've written must be executable by the user under which cron runs. Usually, the following command will make a file executable for its owner:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod u+x filename
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Resources:&lt;br /&gt;
&lt;a href="http://www.debian-administration.org/articles/152"&gt;debian-administration.org&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://en.wikipedia.org/wiki/Cron"&gt;Wikipedia&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.linuxproblem.org/art_9.html"&gt;linuxproblem.org&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/automatic-backups-with-cron-tar-and-ssh/</guid><pubDate>Wed, 10 Jan 2007 21:10:00 +0000</pubDate></item><item><title>Migrating PHP scripts to MySQL from PostgreSQL</title><link>https://bradmontgomery.net/blog/migrating-php-scripts-to-mysql-from-postgresql/</link><description>
&lt;p&gt;I've recently had to work on a project where I needed toconvert some very basic &lt;a href="http://php.net"&gt;PHP&lt;/a&gt; code thataccessed a &lt;a href="http://www.postgresql.org/"&gt;postgresql&lt;/a&gt;database so that it would work with &lt;a href="http://mysql.com/"&gt;mysql&lt;/a&gt;. For the most part, this has beenfairly simple thanks to &lt;a href="http://freshmeat.net/projects/rpl/"&gt;rpl&lt;/a&gt;. Many of PHP'sdatabase functions have very similar names, so I simply use rpl toconvert the existing code. Here's a simple bashscript that I put together to convert some of my postgresqlfunctions to mysql:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
#!/bin/bash
if [ ! -n &amp;quot;$1&amp;quot; ]
then
   echo &amp;quot;Usage: `basename $0` &amp;quot;
  exit 1;
fi

X=$1

echo &amp;quot;---- Relacing pg_ with mysql_ in $X&amp;quot;

rpl -R -x'.php' 'pg_pconnect' 'mysql_pconnect' $X
rpl -R -x'.php' 'pg_connect' 'mysql_connect' $X
rpl -R -x'.php' 'pg_query' 'mysql_query' $X
rpl -R -x'.php' 'pg_fetch_row' 'mysq_fetch_row' $X
rpl -R -x'.php' 'pg_fetch_assoc' 'mysq_fetch_assoc' $X
rpl -R -x'.php' 'pg_close' 'mysq_close' $X
rpl -R -x'.php' 'pg_num_rows' 'mysq_num_rows' $X
rpl -R -x'.php' 'pg_numrows' 'mysq_num_rows' $X
rpl -R -x'.php' 'pg_last_error' 'mysql_error' $X

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Just in case your curious about converting from postgresql or
mysql to sqlite, I've compiled the following table
of analogous functions from &lt;a href="http://php.net"&gt;php.net&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;PostgreSQL&lt;/th&gt;
&lt;th&gt;MySQL&lt;/th&gt;
&lt;th&gt;SQLite&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pg_connect&lt;/td&gt;
&lt;td&gt;mysql_connect&lt;/td&gt;
&lt;td&gt;sqlite_open // open or create database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pg_query&lt;/td&gt;
&lt;td&gt;mysql_query&lt;/td&gt;
&lt;td&gt;sqlite_query&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pg_fetch_row&lt;/td&gt;
&lt;td&gt;mysql_fetch_row&lt;/td&gt;
&lt;td&gt;sqlite_fetch_array (ordinal and associative)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pg_fetch_assoc&lt;/td&gt;
&lt;td&gt;mysql_fetch_assoc&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pg_close&lt;/td&gt;
&lt;td&gt;mysql_close&lt;/td&gt;
&lt;td&gt;sqlite_close&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pg_num_rows or pg_numrows&lt;/td&gt;
&lt;td&gt;mysql_num_rows&lt;/td&gt;
&lt;td&gt;sqlite_num_rows&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/migrating-php-scripts-to-mysql-from-postgresql/</guid><pubDate>Fri, 05 Jan 2007 21:13:00 +0000</pubDate></item><item><title>Blocking outgoing UDP traffic using iptables</title><link>https://bradmontgomery.net/blog/blocking-outgoing-udp-traffic-using-iptables/</link><description>
&lt;p&gt;Since rebuilding my server (after having it used to propogate a UDP flood DoS attack), I‚Äôve been advised that I should set up iptables to block any unnecessary outbound UDP traffic. So, how do I do this?&lt;br /&gt;
Well, the first thing I‚Äôll do is update my apt repository, and install iptables using the following two commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update  
apt-get install iptables
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, the quick and dirty solution is to just add append a rule that blocks all outgoing UDP packets from my server. You can do this based on the systems IP addess. Assuming my server‚Äôs IP addess is 192.168.0.1, I would use the following rule:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iptables -A OUTPUT -s 192.168.0.1 -p udp -j DROP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Essentially, this rule says, match any outbound UDP packets whose source address (-s) is 192.168.0.1, and jump (-j) to the DROP chain. That will drop the packet. Now, just to be safe, I‚Äôll add the same rool using my loopback address, as follows:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;iptables -A OUTPUT -s 127.0.0.1 -p udp -j DROP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, let‚Äôs just hope that keeps me covered until I can find a little more advanced solution that will also write to a log when a packet gets dropped...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Resources:&lt;/strong&gt;* &lt;a href="http://www.netfilter.org/documentation/HOWTO/packet-filtering-HOWTO-7.html"&gt;netfilter‚Äôs documentation&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://www.linuxquestions.org/questions/showthread.php?t=385165"&gt;linuxquestions.org forums&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The manpage! (man iptables)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/blocking-outgoing-udp-traffic-using-iptables/</guid><pubDate>Wed, 03 Jan 2007 21:15:00 +0000</pubDate></item><item><title>Building a Debian-Based Webserver</title><link>https://bradmontgomery.net/blog/building-a-debian-based-webserver/</link><description>
&lt;p&gt;Well, my server was recently compromised and used to perform a UPD flood Denial of Service attack (or so my &lt;a href="http://www.1and1.com/?k_id=7289629"&gt;provider&lt;/a&gt; claimed), so I‚Äôve had to rebuild my server from scratch. Now, this seems like a daunting task, but it has actually been quite easy. I started out with a minimal Debian Linux system, and after a few apt-get install commands, and a few hours of uploading backups, I‚Äôm up and running again.&lt;/p&gt;
&lt;p&gt;How‚Äôd I do it? Well, i just set up my apt-sources:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;### debian  
# stable  
deb http://http.us.debian.org/debian stable main contrib non-free  
deb http://non-us.debian.org/debian-non-US stable/non-US main contrib non-free  
deb http://security.debian.org stable/updates main contrib non-free  
# testing  
deb http://http.us.debian.org/debian testing main contrib non-free  
# unstable  
deb http://http.us.debian.org/debian unstable main contrib non-free  
### dotdeb  
deb http://packages.dotdeb.org stable all  
deb-src http://packages.dotdeb.org stable all
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I ran the following apt-get commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update  
apt-get upgrade  
apt-get install libperl5.8  
apt-get install postgresql  
apt-get install libapache2-mod-php4  
apt-get install php4-pgsql  
apt-get install gd  
apt-get install php4-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I‚Äôm all set! (yeah... I‚Äôve still got a few PHP4 sites, and I grabbed the &lt;a href="http://php.net/gd"&gt;PHP GD library&lt;/a&gt; and the &lt;a href="http://php.net/features.commandline"&gt;PHP command-line Interface&lt;/a&gt;). Notice that I updated my apt sources before I started installing packages... this is kind of important! I also knew that I needed some perl libraries before installing &lt;a href="http://www.postgresql.org/"&gt;Postgresql&lt;/a&gt; (my preferred database) All in all, things went fairly well. The worst part of (re)building this server was uploading my backups! (AND I CANNOT EXPRESS THE IMPORTANCE OF BACKUPS!)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/building-a-debian-based-webserver/</guid><pubDate>Sun, 31 Dec 2006 21:17:00 +0000</pubDate></item><item><title>My Wife's New Laptop</title><link>https://bradmontgomery.net/blog/my-wifes-new-laptop/</link><description>
&lt;p&gt;Well, the semester has ended, so I've been working from home (trying to catch up on all of the &amp;quot;extra work&amp;quot;, and, while out to the gym, &lt;a href="http://rosemarie.name"&gt;My wife&lt;/a&gt; gives me a call and starts asking about laptop specs!? It turns out she's got her eye on a nice little bundle at &lt;a href="http://www.radioshack.com"&gt;Radio Shack&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;It seems they had an &lt;a href="http://hp.com"&gt;HP Pavilion dv2000 notebook&lt;/a&gt; (Turion 64 - 2Ghz/512Mb Ram/100Gb HD/nvidia Geforce go 6150) with a bundled 6.0 megapixel digital camera, and a printer/scanner/copier for less than $1000! So, she makes a purchase, and the notebook is a surprisingly nice little machine. It's a little lacking on Memory, but luckily, it seems &lt;a href="http://newegg.com"&gt;NewEgg&lt;/a&gt; has just what we need to fix that. I'm particularly impressed with the graphics capabilities of this machine (which are usually lacking in notebooks).&lt;/p&gt;
&lt;p&gt;So, while looking around for something to test its capabilities, I ran across the &lt;a href="http://www.warrock.net/"&gt;War Rock&lt;/a&gt; demo. I thought I'd just try it out, and it plays quite nicely. Hopefully, a memory upgrade will provide even greater performance, though. Perhaps one of the best features of this notebook is its display - a widescreen 14 inch, which runs at 1280x800 by default. Despite the relatively small size, it offers a very nice view for a laptop computer. Overall, I'm quite proud of my wife's purchase, and I've probably used it more than she has!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/my-wifes-new-laptop/</guid><pubDate>Sat, 23 Dec 2006 21:18:00 +0000</pubDate></item><item><title>Spammers never die!</title><link>https://bradmontgomery.net/blog/spammers-never-die/</link><description>
&lt;p&gt;I've recently received a lot of spam through my &lt;a href="http://bradmontgomery.net/show.php?page=contact"&gt;contact form&lt;/a&gt;, and it's starting to get on my nerves. Apparently the spammers have noticed that many developers are trying to thwart their attempts to sneak extra header information into PHP's &lt;a href="http://php.net/mail"&gt;mail function&lt;/a&gt;, so they've resorted to spamming websites directly! (or am I the only one?)&lt;/p&gt;
&lt;p&gt;The messages I've been getting actually include a long list of URLs of the form: [URL=http:www.whatever.com]whatever[/URL], so I'm guessing some web app that uses this type of markup has a security hole... Time to patch that up developers!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/spammers-never-die/</guid><pubDate>Sun, 17 Dec 2006 21:20:00 +0000</pubDate></item><item><title>That's Amazing</title><link>https://bradmontgomery.net/blog/thats-amazing/</link><description>
&lt;p&gt;'Tiz the season... so today I went to Wal-Mart to get a &lt;a href="http://www.walmart.com/catalog/product.do?product_id=3162815"&gt;Pre-Lit Christmas Tree&lt;/a&gt;. I'm still a little amazed at how easy this thing was to assemble when compared to a real tree of the same size. Sure it doesn't smell like a real tree, but I don't have to worry about watering it so that it doesn't become a fire hazard. Besides, &lt;a href="http://thegirls.bradmontgomery.net/"&gt;the girls&lt;/a&gt; really liked it, and that's all that counts! In fact, Dakota (3yrs) walked into the den, looked at the tree, and just said &amp;quot;That's Amazing&amp;quot;. Where does she learn these things!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/thats-amazing/</guid><pubDate>Sat, 02 Dec 2006 21:21:00 +0000</pubDate></item><item><title>Voice Observation</title><link>https://bradmontgomery.net/blog/voice-observation/</link><description>
&lt;p&gt;Apparently, I haven't quite beat the flu... or whatever it is that's making me cough. So head over to my local Medical Practitioner and get a nice pharmaceutical conglomeration injected into my hip. Apparently, I could also use some antibiotics, too... so I head over to walgreens and drop off the magical note that lets them know it's OK to give me drugs. I wait several hours, and then I discover that my insurance has rejected a claim... Uhm, OK. So my first thought is &amp;quot;Did someone pull an &lt;a href="http://www.imdb.com/title/tt0151804/"&gt;Office Space&lt;/a&gt; maneuver on me and forget to tell me I don't have a job!&amp;quot;&lt;br /&gt;
I hope not.So, I call up my Insurance company to see if there's something wrong, and of course, I get an automated system. However, instead of giving me a menu and letting me push a button, I'm greated by a voice that asks me to &lt;strong&gt;speak&lt;/strong&gt; my responses to the menu... (like I'm a dog or something). Some people call this &lt;a href="http://en.wikipedia.org/wiki/Speech_recognition"&gt;Voice (or Speech) Recognition&lt;/a&gt;. I didn't notice much recognizing though. I guess computers aren't designed to interact with people who cough. Basically the transcript of my conversation with the menu went like this:&lt;/p&gt;
&lt;p&gt;Menu: Do you need information about Health or Dental insurance?&lt;br /&gt;
Me: Health (cough)(cough)&lt;br /&gt;
Menu: I'm sorry, please say Health or Dental&lt;br /&gt;
Me: Health (I then turn my head away from the phone and cough)&lt;br /&gt;
Menu: Please say Health or Dental&lt;br /&gt;
Me: HEALTH&lt;br /&gt;
Menu: Did you say &amp;quot;Start Over?&amp;quot;&lt;br /&gt;
Me: Ahhh!&lt;/p&gt;
&lt;p&gt;Menu: Welcome to... *click*&lt;/p&gt;
&lt;p&gt;Yeah, I hung up the phone. Well... actually I just hit 0, which normally bypasses the automated system and sends you right to an operator. Unfortunately, their offices were closed. I guess I'll just call tomorrow and try to see why my insurance was cancelled.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/voice-observation/</guid><pubDate>Thu, 09 Nov 2006 21:23:00 +0000</pubDate></item><item><title>DiskWarrior Rocks!</title><link>https://bradmontgomery.net/blog/diskwarrior-rocks/</link><description>
&lt;p&gt;...the title says it all. For just less than $90 USD, I've now recovered all of my priceless data for which I did not have the foresight (or time, or means, or whatever) to back up. If you're a Mac user, and you ever have a drive that stops working (or a &lt;a href="http://discussions.apple.com/thread.jspa?threadID=701837&amp;amp;tstart=0"&gt;problem like mine&lt;/a&gt;), head over to &lt;a href="http://www.alsoft.com/DiskWarrior/"&gt;http://www.alsoft.com/DiskWarrior/&lt;/a&gt; and purchase a copy.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/diskwarrior-rocks/</guid><pubDate>Wed, 01 Nov 2006 21:24:00 +0000</pubDate></item><item><title>Flu + HDD crash</title><link>https://bradmontgomery.net/blog/flu-hdd-crash/</link><description>
&lt;p&gt;If having the flu wasn't bad enough, I've also had the hard drive in my Mac mini crash... well, not crash exactly, it's just the drive has &lt;a href="http://discussions.apple.com/thread.jspa?threadID=701837&amp;amp;tstart=15"&gt;A Bad Super block&lt;/a&gt;, which is enough for tools like Disk Utility and fsck to be useless. Apparently there's a product called &lt;a href="http://www.alsoft.com/DiskWarrior/"&gt;Disk Warrior&lt;/a&gt; that could do the trick... I may have to try it out.The real tragedy here, though, is that of course, there's data on the mini that I NEED! Oh, I've got somewhat of a backup, but by no means a complete one (Yes, I should know better)! The problem with backups (other than there's not real good automatic, easy-to-use, affordable software) is that users--me, in particular--soon outgrow the backup medium! I've got an external drive that was supposed to be the backup, but with home movies, music, pictues, etc... it turned into primary storage just for lack of space. Of course, I'm slapping myself for not picking up some 500Gb drive to use as backup as my needs grew, but how long before that becomes the primary storage! How many home users need something better? I wonder if &lt;a href="http://www.apple.com/macosx/leopard/timemachine.html"&gt;Time Machine&lt;/a&gt; will handle something like a hard drive failure... Meanwhile, I need to figure out how to recover my stuff, AND pick up a new drive&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/flu-hdd-crash/</guid><pubDate>Mon, 23 Oct 2006 21:24:00 +0000</pubDate></item><item><title>Torque</title><link>https://bradmontgomery.net/blog/torque/</link><description>
&lt;p&gt;Well, I finally bought an &lt;a href="http://www.garagegames.com/products/1"&gt;Indie Game License&lt;/a&gt; for the  &lt;a href="http://www.garagegames.com/products/1"&gt;Torque Game Engine&lt;/a&gt;. Like many young men over the past decade or so, I got into Computer Science thinking I'd like to create video games. Maybe I'll finally get that chance!&lt;br /&gt;
My initial impressions with Torque are a little mixed though. I can immediately see huge potention in the sort of things you can do without even touching the Engine itself... thanks to the built-in scripting language and the World Editor. Given enough time, that's really all you need (tech-wise) to produde a fairly decent game. However, I keep finding myself wishing that I was a 3D modeling guru (I've always wanted to play with &lt;a href="http://blender.org/"&gt;Blender&lt;/a&gt;!) GG's got a some reasonably priced &lt;a href="http://www.garagegames.com/developer/torque/contentpacks/"&gt;Content Packs&lt;/a&gt;, but It'd be nice if there were some free basic models for a developer to play around with! (A couple of vehicles, a few basic weapons, etc...) Maybe there are... but I haven't found them yet.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/torque/</guid><pubDate>Sun, 15 Oct 2006 21:25:00 +0000</pubDate></item><item><title>Pink for October</title><link>https://bradmontgomery.net/blog/pink-for-october/</link><description>
&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/Breast_cancer"&gt;&lt;img src="http://bradmontgomery.net/images/Pink_ribbon.png" alt="Pink Ribbon for Breast Cancer" /&gt;&lt;/a&gt; If you visit my site often (or even occasionally), you may have noticed a slight change. Well, it's sorta &lt;a href="http://pinkforoctober.org/"&gt;Pink for October&lt;/a&gt;, in honor of &lt;a href="http://nbcam.org/"&gt;National Breast Cancer Awareness Month&lt;/a&gt;. Also, my Mom's running in the &lt;a href="http://www.ar-raceforthecure.org/"&gt;Little Rock Race for the Cure&lt;/a&gt;... Good Luck!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pink-for-october/</guid><pubDate>Mon, 02 Oct 2006 21:26:00 +0000</pubDate></item><item><title>Peppers!</title><link>https://bradmontgomery.net/blog/peppers/</link><description>
&lt;p&gt;Thanks to my grandparents, I'm now in possession of quite a few &lt;a href="http://en.wikipedia.org/wiki/Jalape%C3%B1o"&gt;Capsicum annuum chile peppers&lt;/a&gt;! Everybody that knows me, knows that I'm quite of fan of these. I'm guessing it will take me a day or two to eat all of these... I guess we'll see :)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bradmontgomery.net/images/jalapenos.jpg"&gt;&lt;img src="http://bradmontgomery.net/images/jalapenos.jpg" alt="Jalapenos!" /&gt;&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/peppers/</guid><pubDate>Sun, 01 Oct 2006 21:26:00 +0000</pubDate></item><item><title>Data Structures</title><link>https://bradmontgomery.net/blog/data-structures/</link><description>
&lt;p&gt;Well, since I'm teaching a course in Data Structures this semester, I thought that I'd post some of the basic examples that I've given in class. For now, you can find some source code under my &lt;a href="http://bradmontgomery.net/show.php?page=project_datastructures"&gt;Data Structurs Projects Page&lt;/a&gt;. All of the code is written in C++ and illustrates some simple data structures using the STL.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/data-structures/</guid><pubDate>Thu, 28 Sep 2006 21:27:00 +0000</pubDate></item><item><title>Speak like a Pirate Day!</title><link>https://bradmontgomery.net/blog/speak-like-a-pirate-day/</link><description>
&lt;p&gt;Avast ye! As it be a day 'fer celebrat'n pirates, ye should be learn'n to &lt;a href="http://loadingreadyrun.com/showmovie.php?x=480&amp;amp;y=360&amp;amp;url=talklikepirate.mov"&gt;speak like one&lt;/a&gt;, and then &lt;a href="http://en.wikipedia.org/wiki/Grog"&gt;drink like one&lt;/a&gt;. So says I, &lt;a href="http://bradmontgomery.net/show.php?page=pirate"&gt;Calico Sam Kidd&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/speak-like-a-pirate-day/</guid><pubDate>Tue, 19 Sep 2006 21:28:00 +0000</pubDate></item><item><title>OpenCV on Mac OS X</title><link>https://bradmontgomery.net/blog/opencv-on-mac-os-x/</link><description>
&lt;p&gt;I finally got arount to compiling &lt;a href="http://opencvlibrary.sourceforge.net/"&gt;OpenCV&lt;/a&gt; on my G4 Mac mini. While there is a lot of good information online as to how to do this, there were a few final steps that took me a while to either figure out or find. Apparently using OpenCV on OS X is still a new thing...&lt;/p&gt;
&lt;p&gt;First of all, follow the directions here at the &lt;a href="http://opencvlibrary.sourceforge.net/Mac_OS_X_OpenCV_Port"&gt;Mac OS X OpenCV Port Wiki&lt;/a&gt;. (Note the two different configure options for Fink and MacPorts/DarwinPorts)&lt;br /&gt;
Then, after typing &amp;quot;sudo make install&amp;quot;, the include files should be in &lt;strong&gt;/usr/local/include/opencv&lt;/strong&gt;, while the dynamic libraries should be in &lt;strong&gt;/usr/local/lib&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So, the last thing to do is let your shell know about the libraries, and pkgconfig. Since I use bash, I added this to my .bashrc file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LD_LIBRARY_PATH=/usr/local/lib  
export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And so... things seem to work.&lt;/p&gt;
&lt;p&gt;Many thanks go to those who've done a lot of work to get OpenCV on OS X!&lt;br /&gt;
&lt;a href="http://opencvlibrary.sourceforge.net/MarkAsbach"&gt;http://opencvlibrary.sourceforge.net/MarkAsbach&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.christophseibert.de/weblog/en/it/computer-vision/tools/opencv-mac.html"&gt;http://www.christophseibert.de/weblog/en/it/computer-vision/tools/opencv-mac.html&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://lestang.org/article45.html"&gt;http://lestang.org/article45.html&lt;/a&gt;&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/opencv-on-mac-os-x/</guid><pubDate>Wed, 06 Sep 2006 21:29:00 +0000</pubDate></item><item><title>OpenCV</title><link>https://bradmontgomery.net/blog/opencv/</link><description>
&lt;p&gt;Those who know me know that I'm a huge proponent of Open Source Software. I use it daily, and the sheer number of quality open source projects just astounds me. The latest to do so is &lt;a href="http://www.intel.com/technology/computing/opencv/index.htm"&gt;OpenCV&lt;/a&gt;, a Computer Vision library originally from &lt;a href="http://intel.com"&gt;Intel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In a few weeks I will take my first steps into the world of computer vision, and like so many times before, an open source project will guide me. Awesome.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/opencv/</guid><pubDate>Fri, 18 Aug 2006 21:31:00 +0000</pubDate></item><item><title>Spiral</title><link>https://bradmontgomery.net/blog/spiral/</link><description>
&lt;p&gt;I've recently grabbed the latest version of &lt;a href="http://www.inkscape.org/"&gt;Inkscape&lt;/a&gt;, (which resulted in the &lt;a href="http://bradmontgomery.net/images/Spiral.png"&gt;Spiral&lt;/a&gt;) and I just have to say, &amp;quot;WOW&amp;quot;. I'd played with the software about a year ago (maybe more), and it's amazing how far it's come. Works perfectly on Windows and Mac OS X (&lt;a href="http://bradmontgomery.net/show.php?page=project_osxX11"&gt;with X11&lt;/a&gt;). If you like to use your computer to draw, &lt;a href="http://www.inkscape.org/download.php"&gt;download Inkscape&lt;/a&gt; now!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/spiral/</guid><pubDate>Fri, 28 Jul 2006 21:31:00 +0000</pubDate></item><item><title>YouOS</title><link>https://bradmontgomery.net/blog/youos/</link><description>
&lt;p&gt;Occasionally, I run across some project that's implementing an idea that I've had ... That's the case with &lt;a href="https://www.youos.com/"&gt;YouOS&lt;/a&gt;. I think I even wrote a paper about it in 1998, but that's what happens when your lazy (read: too many other things you have to do!)&lt;/p&gt;
&lt;p&gt;I created an account, and though it was a little slow for my wife's laptop, YouOS is really a very impressive project. Now, all the world needs is a very small OS that runs on every hardware platform (for connectivity/etc), and a very fast standards-compliant browser that runs on top of that (maybe the guys at &lt;a href="http://www.dillo.org/"&gt;dillo&lt;/a&gt; should reevaluate their roadmap); AND NOTHING ELSE!&lt;/p&gt;
&lt;p&gt;You know, I just had one other thought: Maybe this is the GUI necessary for widespread use of &lt;a href="http://cm.bell-labs.com/plan9/"&gt;Plan9&lt;/a&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/youos/</guid><pubDate>Mon, 24 Jul 2006 21:32:00 +0000</pubDate></item><item><title>Competition is Good</title><link>https://bradmontgomery.net/blog/competition-is-good/</link><description>
&lt;p&gt;Well, I've finally grabbed a copy of the &lt;a href="http://www.microsoft.com/windows/ie/default.mspx"&gt;IE7 beta&lt;/a&gt;, and I have to admit that I'm impressed... although, I recognize features that are present in almost&lt;br /&gt;
&lt;a href="http://www.mozilla.com/firefox/"&gt;every&lt;/a&gt; &lt;a href="http://www.caminobrowser.org/"&gt;other&lt;/a&gt; &lt;a href="http://www.apple.com/macosx/features/safari/"&gt;browser&lt;/a&gt; &lt;a href="http://www.opera.com/"&gt;I've&lt;/a&gt; used. So far, I'm pleased to see that IE7 doesn't break too many of the sites that I've built, which make extensive use of CSS. I guess this just goes to show that competition DOES foster innovation.&lt;/p&gt;
&lt;p&gt;With IE7, I've also got my first look at &lt;a href="http://www.live.com/"&gt;Windows Live&lt;/a&gt;, which of course competes with &lt;a href="http://google.com"&gt;Google&lt;/a&gt;. One of the first things I noted about this site is the background image on the banner at the top of the page. I don't know if anyone else has pointed this out or not, but it has a striking resemblance to the default Mac OS X background (&lt;a href="http://store.apple.com"&gt;look around here&lt;/a&gt;). Though I'm a relatively new Mac user, it seems like I'm seeing more and more things that are &amp;quot;borrowed&amp;quot; from &lt;a href="http://apple.com"&gt;Apple&lt;/a&gt;. Now, I've had a brief look at &lt;a href="http://www.microsoft.com/windowsvista/"&gt;Windows Vista&lt;/a&gt;, and I'll admit, there were some things that would seem awfully familiar to any OS X Tiger users... but I'll let someone else make a more extensive comparison.&lt;/p&gt;
&lt;p&gt;All in all, I have to commend Microsoft. At least they're paying attention.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/competition-is-good/</guid><pubDate>Sat, 22 Jul 2006 21:33:00 +0000</pubDate></item><item><title>Roll your own!</title><link>https://bradmontgomery.net/blog/roll-your-own/</link><description>
&lt;p&gt;With all the good FOSS CMS software out there (like &lt;a href="http://drupal.org/"&gt;Drupal&lt;/a&gt; and &lt;a href="http://wordpress.org/"&gt;WordPress&lt;/a&gt;), I sometimes wonder why I take the time to &amp;quot;roll my own&amp;quot;...&lt;/p&gt;
&lt;p&gt;For all of you that subscribe to the feed (what, like 0), you might have noticed that it hasn't been updated lately. That's because I wrote some stuff to put by blogs in a database (&lt;a href="http://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;! - overkill is good!), but I'm just now finishing it so that the feed gets updated.&lt;/p&gt;
&lt;p&gt;So, back to those CMS's... they all use PHP+MySQL, which is a good combination, but they're WAY more than I need! (Disregard the postgresql comment). Is there a CMS/Blog system that's easy to install, has a simple back-end, and is geared to an individual? Is anybody using &lt;a href="http://www.sqlite.org/"&gt;SQLite&lt;/a&gt; to run their blog?&lt;/p&gt;
&lt;p&gt;Maybe I should clean up my code and open it up. Any takers?&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/roll-your-own/</guid><pubDate>Fri, 14 Jul 2006 21:34:00 +0000</pubDate></item><item><title>A Penchant for Circles</title><link>https://bradmontgomery.net/blog/a-penchant-for-circles/</link><description>
&lt;p&gt;Apparently I like &lt;a href="http://bradmontgomery.net/images/Circles.png"&gt;Circles&lt;/a&gt;, as is evidenced by my latest desktop background. If you've looked through my &lt;a href="http://bradmontgomery.net/show.php?page=project_Backgrounds"&gt;other background images&lt;/a&gt;, you'll notice that I also like a simple, unobtrusive image behind my work.&lt;/p&gt;
&lt;p&gt;After I created this one, it seemed to remind me of something... and after a little though, I remembered &lt;a href="http://www.interplay.com/games/product.asp?Gameid=300"&gt;Sacrifice&lt;/a&gt;, originally developed by &lt;a href="http://www.shiny.com"&gt;Shiny&lt;/a&gt;. I won't go into a long spiel, but it had beautiful graphics, a very interesting interface (once you got the hang of it), and quite possible some of the best AI that I've seen in a game for a while... not that I've actually played any games in a while.&lt;/p&gt;
&lt;p&gt;It's just too bad I'm the only person I know that played the game... it was nice.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/a-penchant-for-circles/</guid><pubDate>Tue, 11 Jul 2006 21:34:00 +0000</pubDate></item><item><title>ebay?</title><link>https://bradmontgomery.net/blog/ebay/</link><description>
&lt;p&gt;I recently thought I'd look through &lt;a href="http://ebay.com"&gt;ebay&lt;/a&gt; for a low-end, cheap laptop... Possibly something for around $200, just fast enough to comfortably run a light-weight window manager (&lt;a href="http://fluxbox.org/"&gt;like fluxbox&lt;/a&gt;). While there were plenty from which to choose, I couldn't help but wonder at some of the (notice the quotes) &amp;quot;advertisements&amp;quot; in the descriptions!&lt;/p&gt;
&lt;p&gt;One item was listed as something like: &lt;strong&gt;Super Fast Dell Laptop - like new!&lt;/strong&gt;. Then, in the specs, I found things like this:&lt;br /&gt;
Processor: Super Fast 233MHz Pentium II with MMX! *Really Fast*&lt;br /&gt;
Memory: 128MB of RAM *plenty of room for multiple tasks!I felt like I was back in 1996 :)&lt;/p&gt;
&lt;p&gt;The strange part, is that most of the sellers with ads like these had really good feedback scores. It makes me wonder if the people that are shopping for computers on ebay already know what they're looking for (yes, I know what I can and cannot do with a 233Mhz P2)... or how many people decide to get one of those (like new!) computers on ebay.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/ebay/</guid><pubDate>Fri, 30 Jun 2006 21:35:00 +0000</pubDate></item><item><title>Games!</title><link>https://bradmontgomery.net/blog/games/</link><description>
&lt;p&gt;This may come as a surprise, but I actually got into computer science thinking I would eventually find a job making computer games! What's more surprising, though, is that I've never even tried to write a game of any sort! There are plenty of places to start, I mean, there's only &lt;a href="http://sourceforge.net/softwaremap/trove_list.php?form_cat=80"&gt;11,000 game projecs&lt;/a&gt; on &lt;a href="http://sourceforge.net"&gt;Sourceforge&lt;/a&gt;. Now, I'm guessing that about half of those are actually Libraries or Frameworks for developing games, and sometimes I wonder if maybe that's part of the problem... There's just so much to choose from, how do you pick one? Or should you just pick something like &lt;a href="http://www.libsdl.org"&gt;SDL&lt;/a&gt; and see how far you can get with that before you need something else? And then what? Suppose you build a nice game (and is this even possible for a 1-2 person team)... Do you try to build a business and grab a piece of the billion-dollar entertainment industry? I wonder if the games like &lt;a href="http://www.vendetta-online.com/"&gt;Vendetta Online&lt;/a&gt; produce any profits. Maybe it's time I start a company!Oh, and send a &lt;a href="http://rosemarie.name"&gt;Happy Birthday wish to my sweetheart.&lt;/a&gt;!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/games/</guid><pubDate>Tue, 20 Jun 2006 21:36:00 +0000</pubDate></item><item><title>Scripting!</title><link>https://bradmontgomery.net/blog/scripting/</link><description>
&lt;p&gt;I imagine that anybody who actually likes programming is familiar with the many popular scripting languages in use today. Of course, a lot of web devs and sysadmins have been using languages like &lt;a href="http://php.net"&gt;php&lt;/a&gt;, &lt;a href="http://perl.com"&gt;perl&lt;/a&gt;, and &lt;a href="http://python.org"&gt;python&lt;/a&gt; for ages, but if you read any tech news (like &lt;a href="http://slashdot.org"&gt;/.&lt;/a&gt;), you'll know that the newest craze is &lt;a href="http://ruby-lang.org"&gt;ruby&lt;/a&gt;. I've played with it a little, and I can actually see what the hype is all about... It's a neat language, and it &lt;a href="http://bradmontgomery.net/show.php?page=links&amp;amp;tags=ruby"&gt;has a lot to offer&lt;/a&gt;.Though, as much as I've been wanting to really get my hands dirtly with ruby, I've recently been involved with a project that is heavily dependent on &lt;a href="http://bradmontgomery.net/show.php?page=links&amp;amp;tags=tcl"&gt;tcl&lt;/a&gt;, and I have to admit... I'm beginning to really like it. Oh, it's syntax takes a little getting used to, but I think it's the simplicity of the language itself that I like. If you've been using any of the above languages, I'm fairly sure that you might have worked for a few days (or weeks) to get really comfortable, but it just seems like tcl is small enough to wrap your brain around in about a day, and be fairly productive... Now, I haven't gotten into tk, but I'm sure I'll be looking into that soon. Of course, take this for what it's worth.I've always liked &lt;a href="http://www.google.com/search?q=awk"&gt;awk&lt;/a&gt;.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/scripting/</guid><pubDate>Mon, 12 Jun 2006 21:36:00 +0000</pubDate></item><item><title>Google Knows Me!!</title><link>https://bradmontgomery.net/blog/google-knows-me/</link><description>
&lt;p&gt;Yesterday I discovered that Google knows who I am! This is surprising to me since, for several years, this site has never been displayed when searching for &lt;a href="http://www.google.com/search?q=Brad%20Montgomery&amp;amp;sourceid=mozilla2&amp;amp;ie=utf-8&amp;amp;oe=utf-8"&gt;Brad Montgomery&lt;/a&gt;! I have a Page Rank of 2! Apparently, I'm currently the 3rd most popular Brad Montgomery, right after &lt;a href="http://www.bradmontgomery.com/"&gt;Brad Montgomery - The motivational Speaker&lt;/a&gt; and &lt;a href="http://www.bradlaughs.com/"&gt;his blog&lt;/a&gt; (Both have a Page Rank of 4), and &lt;a href="http://www.brad-montgomery.com/"&gt;Brad Montgomery - The Actor&lt;/a&gt;. Surprisingly enough, Brad Montgomery - The Actor, only has a Page Rank of 1 (according to &lt;a href="http://aroussi.com/projects"&gt;Ran Aroussi's Page Rank Widget&lt;/a&gt;) but his site is listed before mine!&lt;/p&gt;
&lt;p&gt;So, why my sudden popularity with Google? Who knows. Perhaps Google likes bloggers, and anything that looks like a blog gets ranked higher. So, due to my recent forays into the blogosphere, Google suddenly likes me. (Don't worry, see my 2006.05.25 post). It could also be that &lt;a href="http://www.destinationyoga.com/"&gt;some&lt;/a&gt; &lt;a href="http://savmorinteriors.com/"&gt;of my&lt;/a&gt; &lt;a href="http://fitnessintheworks.com/theworks/"&gt;clients&lt;/a&gt; (and of course &lt;a href="http://rosemarie.name/"&gt;my wife&lt;/a&gt;) link back to my page. I'm sure that helps.&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/google-knows-me/</guid><pubDate>Wed, 07 Jun 2006 21:37:00 +0000</pubDate></item><item><title>Pleonasms...</title><link>https://bradmontgomery.net/blog/pleonasms/</link><description>
&lt;p&gt;Spare me your &lt;a href="http://dictionary.reference.com/wordoftheday/archive/2006/05/31.html"&gt;pleonasms&lt;/a&gt;, and I shall strive to do the same! :)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/pleonasms/</guid><pubDate>Wed, 31 May 2006 21:38:00 +0000</pubDate></item><item><title>Rosemarie</title><link>https://bradmontgomery.net/blog/rosemarie/</link><description>
&lt;p&gt;Well, Summer's almost here! So, if you're feeling the need to whip yourself back into shape, &lt;a href="http://rosemarie.name"&gt;I know just the person&lt;/a&gt;! :-)&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/rosemarie/</guid><pubDate>Thu, 25 May 2006 21:38:00 +0000</pubDate></item><item><title>OpenLaszlo</title><link>https://bradmontgomery.net/blog/openlaszlo/</link><description>
&lt;p&gt;Wow... the Net never ceases to amaze me. I've been a fan of &lt;a href="http://pandora.com"&gt;Pandora.com&lt;/a&gt; for a while, but I never realized they were using &lt;a href="http://www.openlaszlo.org/"&gt;OpenLaszlo&lt;/a&gt;! So, after a skimming over the OpenLaszlo site, I ran across a link to &lt;a href="http://www.gliffy.com/"&gt;Gliffy.com&lt;/a&gt; which bascially allows you to draw diagrams in your browser. Sweet!&lt;/p&gt;
</description><guid isPermaLink="false">https://bradmontgomery.net/blog/openlaszlo/</guid><pubDate>Wed, 10 May 2006 21:39:00 +0000</pubDate></item></channel></rss>